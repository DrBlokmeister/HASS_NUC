homeassistant:
  customize: {}


utility_meter:
  # Daily Total Sleep Time for Long-Term Analysis
  daily_total_sleep_time:
    source: sensor.total_sleep_time
    cycle: daily
    offset: '18:00'

  # Daily Actual Sleep Time for Long-Term Analysis
  daily_actual_sleep_time:
    source: sensor.actual_sleep_time
    cycle: daily
    offset: '18:00'
#################
#    SENSORS    #
#################
sensor:
  #Possible sleep tracking states: unknown, sleep_tracking_started, sleep_tracking_stopped, sleep_tracking_paused, sleep_tracking_resumed,
        # alarm_snooze_clicked, alarm_snooze_canceled, time_to_bed_alarm_alert, alarm_alert_start, alarm_alert_dismiss, alarm_skip_next, 
        # show_skip_next_alarm, rem, smart_period, before_smart_period, lullaby_start, lullaby_stop, lullaby_volume_down, deep_sleep, 
        # light_sleep, awake, not_awake, apnea_alarm, antisnoring, sound_event_snore, sound_event_talk, sound_event_cough, sound_event_baby, 
        # sound_event_laugh, before_alarm, alarm_rescheduled
  # Total Time Spent in Bed (Sleep Tracking Duration)
  - platform: history_stats
    name: "Total Sleep Time"
    entity_id: sensor.sleepasandroid_sander
    state:
      - sleep_tracking_started
      - sleep_tracking_paused
      - sleep_tracking_resumed
      - deep_sleep
      - light_sleep
      - rem
      - not_awake
      - smart_period
      - before_smart_period
      - sound_event_snore
      - sound_event_talk
      - sound_event_cough
      - sound_event_baby
      - sound_event_laugh
    type: time
    start: >
      {% if now().hour >= 18 %}
        {{ now().replace(hour=18, minute=0, second=0) }}
      {% else %}
        {{ (now() - timedelta(days=1)).replace(hour=18, minute=0, second=0) }}
      {% endif %}
    end: "{{ now() }}"

  # Actual Sleep Time (Deep, Light, REM Sleep)
  - platform: history_stats
    name: "Actual Sleep Time"
    entity_id: sensor.sleepasandroid_sander
    state:
      - deep_sleep
      - light_sleep
      - rem
      - not_awake
    type: time
    start: >
      {% if now().hour >= 18 %}
        {{ now().replace(hour=18, minute=0, second=0) }}
      {% else %}
        {{ (now() - timedelta(days=1)).replace(hour=18, minute=0, second=0) }}
      {% endif %}
    end: "{{ now() }}"

  # Time spent awake
  - platform: history_stats
    name: "Actual Awake Time"
    entity_id: sensor.sleepasandroid_sander
    state:
      - awake
      - alarm_rescheduled
      - sleep_tracking_stopped
      - alarm_alert_dismiss
    type: time
    start: >
      {% if now().hour >= 18 %}
        {{ now().replace(hour=18, minute=0, second=0) }}
      {% else %}
        {{ (now() - timedelta(days=1)).replace(hour=18, minute=0, second=0) }}
      {% endif %}
    end: "{{ now() }}"
    
  # Sleep Efficiency Calculation
  - platform: template
    sensors:
      sleep_efficiency:
        friendly_name: "Sleep Efficiency"
        unit_of_measurement: '%'
        value_template: >
          {% set sleep_time = states('sensor.actual_sleep_time') | float %}
          {% set in_bed_time = states('sensor.total_sleep_time') | float %}
          {% if in_bed_time > 0 %}
            {{ ((sleep_time / in_bed_time) * 100) | round(2) }}
          {% else %}
            0
          {% endif %}

  - platform: statistics
    name: "Monthly Mean Total Sleep Time"
    entity_id: sensor.daily_total_sleep_time
    state_characteristic: mean
    max_age:
      days: 30
  - platform: statistics
    name: "Monthly Mean Actual Sleep Time"
    entity_id: sensor.daily_actual_sleep_time
    state_characteristic: mean
    max_age:
      days: 30

  - platform: statistics
    name: "Monthly STD Total Sleep Time"
    entity_id: sensor.daily_total_sleep_time
    state_characteristic: standard_deviation
    max_age:
      days: 30
  - platform: statistics
    name: "Monthly STD Actual Sleep Time"
    entity_id: sensor.daily_actual_sleep_time
    state_characteristic: standard_deviation
    max_age:
      days: 30
########################
#    BINARY SENSORS    #
########################
binary_sensor:

########################
#    INPUT BOOLEANS    #
########################
input_boolean:
  sleep_tracking_on:
    name: Sleep as android sleep tracking on
    icon: mdi:sleep
  wakeup_alarm_on:
    name: Sleep as android alarm on
    icon: mdi:alarm
  tamara_sleeping:
    name: Tamara is sleeping
    icon: mdi:sleep
  override_alarm:
    name: Override alarm
    icon: mdi:alarm

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: "[misc|sleeptracking] Sleep mode: toggle lights & motion automations"
    id: yaml_automation_misc_sleeptracking_sleep_mode_toggle_lights_motion_automations
    description: >
      When Sander is home alone and goes to sleep, turn off lights (placeholder)
      and disable motion-based lighting automations. When he wakes up, re-enable
      the motion-based lighting automations.
    mode: single
    trigger:
      # --- Falling asleep triggers ---
      - id: sleeping
        platform: state
        entity_id: sensor.sleep_tracking_on
        to: "on"
      - id: sleeping
        platform: state
        entity_id: sensor.sleepasandroid_sander
        from:
          - awake
          - alarm_rescheduled
          - sleep_tracking_stopped
          - alarm_alert_dismiss
        not_to:
          - awake
          - alarm_rescheduled
          - sleep_tracking_stopped
          - alarm_alert_dismiss
      # --- Waking up triggers ---
      - id: wakeup
        platform: state
        entity_id: sensor.sleep_tracking_on
        to: "off"
      - id: wakeup
        platform: state
        entity_id: sensor.sleepasandroid_sander
        not_from:
          - awake
          - alarm_rescheduled
          - sleep_tracking_stopped
          - alarm_alert_dismiss
        to:
          - awake
          - alarm_rescheduled
          - sleep_tracking_stopped
          - alarm_alert_dismiss
    condition:
      - condition: state
        entity_id: binary_sensor.sander_home_alone
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'sleeping' }}"
            sequence:
              # --- PLACEHOLDER: turn off your lights here ---
              # Example (replace with your own):
              - service: light.turn_off
                target:
                  entity_id:
                    - light.living_room
                    - light.kitchen
                    - light.shelly_dinner_table
                    - light.entry
                    - light.shelly_bedroom
                    - light.bathroom
                    - light.hallway_1st_floor
                    - light.study_lights
                    - light.hallway_2nd_floor
              - service: automation.turn_off
                target:
                  entity_id:
                    - automation.livingroom_lights_turn_on_lights_when_motion_is_detected
                    - automation.kitchen_lights_turn_on_lights_when_motion_is_detected
                    - automation.study_lights_turn_on_lights_when_motion_is_detected
                    - automation.entry_lights_turn_on_lights_when_motion_is_detected
                    - automation.hallway1stfloor_lights_turn_on_lights_when_motion_is_detected
                    - automation.hallway2ndfloor_lights_turn_on_lights_when_motion_is_detected
          # ======================================
          # When waking up
          # ======================================
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'wakeup' }}"
            sequence:
              - service: automation.turn_on
                target:
                  entity_id:
                    - automation.livingroom_lights_turn_on_lights_when_motion_is_detected
                    - automation.kitchen_lights_turn_on_lights_when_motion_is_detected
                    - automation.study_lights_turn_on_lights_when_motion_is_detected
                    - automation.entry_lights_turn_on_lights_when_motion_is_detected
                    - automation.hallway1stfloor_lights_turn_on_lights_when_motion_is_detected
                    - automation.hallway2ndfloor_lights_turn_on_lights_when_motion_is_detected


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:
