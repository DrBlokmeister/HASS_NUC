#######################################################################################################################
## Package - Unavailable Entities Sensor https://gist.github.com/jazzyisj/45fce29d825b8f9b29c5974444299d90
## - count and list entities with state of unavailable, unknown, or none
#######################################################################################################################

## REQUIRED this is the template sensor
## state: number of unavailable entities
## entities attribute: comma separated list of unavailable entity ids
## names attribute: comma separated list of unavailable entity names

sensor:
  - platform: template
    sensors:
      unavailable_entities:
        friendly_name: Unavailable Entities
        unit_of_measurement: entities
        icon_template: "{{ 'mdi:check-circle' if is_state('sensor.unavailable_entities','0') else 'mdi:alert-circle' }}"
        value_template: >
          {{ states|selectattr('state','in',['unavailable','unknown','none'])
            |rejectattr('entity_id','in',state_attr('group.base_ignored_entities', 'entity_id'))
            |rejectattr('entity_id','in',state_attr('group.additional_ignored_entities', 'entity_id'))
            |rejectattr('entity_id', 'in', state_attr('group.battery_status', 'entity_id'))
            |rejectattr('domain','eq','group')|list|count }}
        attribute_templates:
          entities: >
            {{ states|selectattr('state','in',['unavailable','unknown','none'])
              |rejectattr('entity_id', 'in', state_attr('group.base_ignored_entities', 'entity_id'))
              |rejectattr('entity_id', 'in', state_attr('group.additional_ignored_entities', 'entity_id'))
              |rejectattr('entity_id', 'in', state_attr('group.battery_status', 'entity_id'))
              |rejectattr('domain','eq','group')|map(attribute='entity_id')|list|join(', ') }}
          names: >
            {{ states|selectattr('state','in',['unavailable','unknown','none'])
              |rejectattr('entity_id', 'in', state_attr('group.base_ignored_entities', 'entity_id'))
              |rejectattr('entity_id', 'in', state_attr('group.additional_ignored_entities', 'entity_id'))
              |rejectattr('entity_id', 'in', state_attr('group.battery_status', 'entity_id'))
              |rejectattr('domain','eq','group')|map(attribute='name')|list|join(', ') }}

## REQUIRED add any entities you do not with to monitor in this group
## this group MUST exist even if is empty for sensor template to render

group:
  base_ignored_entities:
    entities:
      - binary_sensor.updater
      - media_player.plex_plex_for_android_tv_bravia_4k_gb
      - media_player.plex_plex_media_player_blokmeisterh2o
      - media_player.plex_plex_web_firefox
      - media_player.plex_plex_for_windows_laptop_eqsoubnb
      - media_player.plex_plex_for_android_mobile_oneplus_6
      - sensor.octoprint_slicing_file
      - sensor.octoprint_slicing_progress
      - sensor.fn_alert_level
      - sensor.fn_alert_message
      - sensor.fn_newstorage_pct_used
      - sensor.fn_newstorage_report
      - sensor.fn_newstorage_used
      - sensor.fn_storage2_pct_used
      - sensor.fn_storage2_report
      - sensor.fn_storage2_used
      - sensor.fn_version
      - input_text.notifier_name
      - sensor.low_battery
      - sensor.blokmeister_op6_haapp_charger_type
  additional_ignored_entities:
    entities:
      - sensor.time


## OPTIONAL Example automations to demonstrate how you can utilize this sensor

automation:
  - id: startup_unavailable_entity_notification
    alias: "Startup Unavailable Entity Notification"
    description: "Create persistent notification if there are unavailable entities on startup."
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.unavailable_entities
    action:
      # delay to allow sensors to come online, prevent false notifications
      - wait_template: "{{ states('sensor.uptime')|int > 5 }}"
        timeout: '00:05:00'
      - choose:
          conditions:
            - condition: numeric_state
              entity_id: sensor.unavailable_entities
              below: 1
          sequence:
            - service: persistent_notification.dismiss
              data:
                notification_id: 'unavailable_entities'
        default:
            - service: persistent_notification.create
              data:
                title: "Unavailable Entities"
                message: "{{ state_attr('sensor.unavailable_entities','names').split(', ') | join('\n') }}"
                notification_id: 'unavailable_entities'


  - alias: "Update additional unavailable entities group"
    description: "Add child entities to ignored entities group if parent becomes unavailable."
    mode: restart
    trigger:
      - platform: time_pattern
        minutes: 1
    action:
      # delay to allow sensors to come online, prevent false notifications
      - wait_template: "{{ states('sensor.uptime')|int > 5 }}"
        timeout: '00:05:00'
      - service: group.set
        data:
          object_id: additional_ignored_entities
          entities: >-
            {%- set entities = namespace() -%}
            {%- set entities.entities = '' -%}
            {%- if is_state('switch.transmission_switch', 'unavailable') or is_state('device_tracker.transmission','not_home') -%}
              {%- if entities.entities != '' %}{% set entities.entities = entities.entities + ',' %}{%- endif %}
              {%- set entities.entities = 'sensor.ping_transmission_avg,sensor.transmission_active_torrents,sensor.transmission_completed_torrents,sensor.transmission_down_speed,sensor.transmission_paused_torrents,sensor.transmission_started_torrents,sensor.transmission_up_speed,sensor.transmission_total_torrents,switch.transmission_switch,switch.transmission_turtle_mode,sensor.transmission_status' -%}
            {%- endif -%}
            {%- if is_state('binary_sensor.blokmeisternas','off') -%}
              {%- if entities.entities != '' %}{% set entities.entities = entities.entities + ',' %}{%- endif %}
              {%- set entities.entities = entities.entities + 'sensor.ping_blokmeisternas_avg,sensor.fn_newstorage_used,sensor.fn_storage2_used,sensor.fn_alert_level,sensor.fn_alert_message,sensor.fn_newstorage_report,sensor.fn_storage2_report' -%}
            {%- endif -%}
            {%- if is_state('switch.blitzwolf_3dprinter','off') or is_state('binary_sensor.octoprint_connected', 'unavailable') -%}
              {%- if entities.entities != '' %}{% set entities.entities = entities.entities + ',' %}{%- endif %}
              {%- set entities.entities = entities.entities + (expand('group.3dprinter_entities') | map(attribute='entity_id') | list | join(',')) -%}
            {%- endif -%}
            {%- for group in states.group if ("blitzwolf" in group.name) and states(expand(group) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list | join(','))=='unavailable' -%}
              {%- if entities.entities != '' %}{% set entities.entities = entities.entities + ',' %}{%- endif %}
              {%- set entities.entities = entities.entities + (expand(group) | rejectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list | join(',')) %}
            {%- endfor %}
            {{- entities.entities }}

# something to think about for setting plants to unavailable:
  # {{ state_attr('plant.bonsai', 'sensors')['moisture'] }}
  # hello
  # hello

  # {%- for attribute in (state_attr('plant.bonsai', 'sensors') | list) %}
  # {{ state_attr('plant.bonsai', 'sensors')[attribute] }}
  # {%- endfor %}

  # {{ state_attr('plant.bonsai', 'sensors') | list }}
