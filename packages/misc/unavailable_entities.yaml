#############################################################################################
################ DON'T FORGET TO CHANGE THE NOTIFICATION SERVICE IN LINE 50! ################
#############################################################################################


  #######################################################
  ### Sensor for unavailable entities, also good for UI.
  ### Updates immediately as soon as entities change.
  #######################################################

  template:
    - trigger:
        - platform: time_pattern
          minutes: "/1"  # Update every minute
      sensor:
        - name: "Unavailable Entities"
          unique_id: yaml_template_sensor_unavailable_entities
          icon: mdi:alert-circle-outline
          state: >
            {% set offline = expand('group.monitored_entities')
                | selectattr('state', 'in',
                    ['unavailable', 'unknown', 'none', 'not_home'])
                | map(attribute='name')
                | list %}
            {{ offline | join(', ') if offline else 'Online' }}
  
    #######################################################
    ### Helper
    #######################################################
  
  input_text:
    unavailable_entities_temp_state:
  
  automation:
    #######################################################
    ### Alert about entities becoming unavailable or online
    #######################################################
  
    - id: Unavailable Entities - Notify
      alias: Unavailable Entities - Notify
      variables:
        from_state: "{{ states('input_text.unavailable_entities_temp_state') }}"
        from_state_list: "{{ from_state.split(', ') }}"
        to_state: "{{ trigger.to_state.state if trigger.to_state.state != 'Online' else '' }}"
        to_state_list: "{{ to_state.split(', ') }}"
        became_online: "{{ from_state_list | reject('in', to_state_list) | join(', ') }}"
        became_unavailable_list: "{{ to_state_list | reject('in', from_state_list) | list }}"
        became_unavailable: "{{ became_unavailable_list | join(', ') }}"
        other_unavailable_entities: "{{ to_state_list | reject('in', became_unavailable_list) | join(', ') }}"
  
      trigger:
        - platform: state
          entity_id: sensor.unavailable_entities
  
          #Let other entities change as well so that we don't spam.
          #Has to be a minimum of 1 second, otherwise you won't get ONLINE notifications (because of the way I wrote this).
          for:
            seconds: 10
      condition:
        - condition: template
          value_template: >
            {{ (now() - as_datetime(states('sensor.uptime'))).total_seconds() < 300 }}
      action:
        - service: persistent_notification.create #Notifies me via telegram. Change this to your preferred service (such as: persistent_notification.create).
          data:
            notification_id: "unavailable_notification"
            message: |
              {% if became_unavailable != '' -%}ðŸš¨ Became <b>UNAVAILABLE</b>: {{ became_unavailable }}
              ------{%- endif %}
              {%- if became_online != ''%}
              âœ… Became <b>ONLINE</b>: {{ became_online }}
              ------{%- endif %}
              {% if other_unavailable_entities != '' %}ðŸš¨ Still <b>UNAVAILABLE</b>: {{ other_unavailable_entities }}{% else %}âœ… Everything else is ONLINE!{%- endif %}
  
        - service: input_text.set_value
          data:
            entity_id: input_text.unavailable_entities_temp_state
            value: ""
  
    #######################################################
    ### When entities start changing,
    ### store the initial state temporarily so that
    ### we could tell which entities have changes.
    #######################################################
  
    - id: Unavailable Entities - Store Temp State
      alias: Unavailable Entities - Store Temp State
  
      trigger:
        - platform: state
          entity_id: sensor.unavailable_entities
  
      condition:
        alias: "Temp State is Empty"
        condition: template
        value_template: "{{ is_state('input_text.unavailable_entities_temp_state', '') }}"
  
      action:
        service: input_text.set_value
        data:
          entity_id: input_text.unavailable_entities_temp_state
          value: "{{ '' if trigger.from_state.state == 'Online' else trigger.from_state.state }}"
  
  
  
    #######################################################
    ### Group of monitored entities.
    ### Add any entities you want to be notified about.
    #######################################################
  
  group:
    monitored_entities:
      entities:
        # Misc device trackers
        - device_tracker.google_home_mini
        - device_tracker.blokmeisternuc
        - device_tracker.tower
        - device_tracker.pikvm_nuc
        - device_tracker.pikvm_nas
        - device_tracker.atmoorb_left
        - device_tracker.atmoorb_right
        - device_tracker.ir_remote_livingroom

        # Blitzwolf plugs:
          # - {{ states.device_tracker | selectattr('entity_id', 'search', 'blitzwolf') | map(attribute='entity_id') | list | join('\n- ') }}
          # - {{ states.device_tracker | selectattr('entity_id', 'search', 'plug') | map(attribute='entity_id') | list | join('\n- ') }}
        - device_tracker.plug_10gb_switch
        - device_tracker.plug_washingmachine
        - device_tracker.plug_ambilight_amplifier
        - device_tracker.plug_epaper_ap
        - device_tracker.plug_poe_switch
        - device_tracker.plug_electric_car
        - device_tracker.plug_study_workbench
        - device_tracker.plug_dishwasher
        - device_tracker.plug_nuc
        - device_tracker.plug_watercooker
        - device_tracker.plug_3d_printer
        - device_tracker.plug_tv
        - device_tracker.plug_router
        - device_tracker.plug_nas
        - device_tracker.plug_study_desk

        # Shelly devices:
          # - {{ states.device_tracker | selectattr('entity_id', 'search', 'shelly') | map(attribute='entity_id') | list | join('\n- ') }}
        - device_tracker.shelly_washroom
        - device_tracker.shelly_kitchen
        - device_tracker.shelly_heatpump_power
        - device_tracker.shelly_tamaras_room
        - device_tracker.shelly_study
        - device_tracker.shelly_babyroom
        - device_tracker.shelly_bathroom_new
        - device_tracker.shelly_livingroom
        - device_tracker.shelly_hallway_1st_floor
        - device_tracker.shelly_hallway_2nd_floor
        - device_tracker.shelly_bedroom
        - device_tracker.shelly_closet_plus1mini
        - device_tracker.shelly_dinnertable
        - device_tracker.shelly_porch
        - device_tracker.shelly_backgarden
        - device_tracker.shelly_entry

        # Motion + door/window sensors:
          # - {{ states | selectattr('attributes.device_class', 'eq', 'motion') | map(attribute='entity_id') | list | join('\n- ') }}
          # - {{ states | selectattr('attributes.device_class', 'eq', 'door') | map(attribute='entity_id') | list | join('\n- ') }}
        - binary_sensor.kitchen_motion_2
        - binary_sensor.bedroom_motion_1
        - binary_sensor.study_motion_1
        - binary_sensor.study_motion_2
        - binary_sensor.bathroom_motion_1
        - binary_sensor.kitchen_motion_1
        - binary_sensor.entry_motion_1
        - binary_sensor.entry_motion_2
        - binary_sensor.livingroom_motion_1
        - binary_sensor.livingroom_motion_2
        # - binary_sensor.livingroom_motion_3 #Unused sensor. Fell behind fridge...
        - binary_sensor.hallway_2nd_floor_motion_1
        - binary_sensor.stairs_upper_motion_1
        - binary_sensor.hallway_1st_floor_motion_2
        - binary_sensor.hallway_1st_floor_motion_1
        - binary_sensor.hallway_2nd_floor_motion_2
        - binary_sensor.stairs_lower_motion_1
        - binary_sensor.babyroom_motion_1
        - binary_sensor.outside_motion_1
        - binary_sensor.babycam_motion
        - binary_sensor.stairs_cabinet_door_sensor
        - binary_sensor.front_door_sensor
        #- binary_sensor.bedroom_closet_door_sensor #Unused sensor.
        - binary_sensor.meterkast_door_sensor
        - binary_sensor.back_door_sensor
        - binary_sensor.washroom_door_sensor

        # Lights:
          # Select all lights: - {{ states.light | map(attribute='entity_id') | list | join('\n- ') }}
          # Remove AQM lights:
              # - {{ states.light 
              #   | rejectattr('entity_id', 'search', 'blitzwolf') 
              #   | rejectattr('entity_id', 'search', 'rgb_strip') 
              #   | reject('search', 'led[123]') 
              #   | map(attribute='entity_id') 
              #   | list 
              #   | sort 
              #   | join('\n- ') }}
        - light.atmoorb_left
        - light.atmoorb_right
        - light.babyroom_1
        - light.babyroom_2
        - light.babyroom_3
        - light.babyroom_4
        - light.back_garden
        - light.bathroom_1
        - light.bathroom_2
        - light.bathroom_3
        # - light.bedroom #Phoscon group
        - light.shelly_bedroom #Shelly
        # - light.bedside_guestroom
        # - light.bedside_right
        - switch.shelly_closet
        - light.shelly_dinner_table
        - light.entry_1
        - light.entry_2
        - light.entry_3
        - light.filament_lamp
        - light.guest_room
        - light.hallway_1st_floor_1
        - light.hallway_1st_floor_2
        - light.hallway_1st_floor_3
        - light.hallway_2nd_floor_1
        - light.hallway_2nd_floor_2
        - light.hallway_2nd_floor_3
        - light.kitchen_1
        - light.kitchen_2
        - light.kitchen_3
        - light.ledstrip_falcon
        - light.ledstrip_study_workbench
        - light.livingroom_1
        - light.livingroom_2
        - light.livingroom_3
        - light.livingroom_4
        - light.shelly_porch
        - light.study_1
        - light.study_2
        - light.study_3
        - light.study_4
        - light.study_5
        - light.study_cabinet_a_rgb_ledstrip
        # - light.study_candle
        - light.study_desk_a_rgb_ledstrip
        - light.shelly_tamara_s_room

        - sensor.humidity_bathroom

        #- calendar.gasten_in_huis
        - device_tracker.samsung_tv
        - group.study_motion_sensors
        - input_boolean.garbagereminder
        - input_boolean.sleep_tracking_on
        - input_boolean.tamara_mode
        - media_player.coreelec
        - media_player.plex_plexkodiconnect_kodi_coreelec
        #- sensor.last_triggered_motion_sensor
        - sensor.samba_backup
        - switch.shelly_closet
        - switch.shelly_kitchen
        - update.home_assistant_core_update
        - vacuum.alfred
        - vacuum.argus
        - vacuum.moeke

        - sensor.cheapest_night_price
        - sensor.energyzero_today_energy_lowest_price_time
        - sensor.heatpump_tapwater_temperature
        - sensor.moeke_error
        - sensor.moeke_low_water_warning
        - sensor.nordpool_energy_price
        - sensor.speedtest_download
        - sensor.temperature_fridge
        - sensor.unknown_power
        #- sensor.last_triggered_motion_sensor
        - sensor.samba_backup

        # New input booleans
        - input_boolean.garbagereminder
        - input_boolean.sleep_tracking_on
        - input_boolean.tamara_mode

        # New group
        #- group.study_motion_sensors

        # Temperature Sensors
        - sensor.temperature_bathroom
        - sensor.temperature_bedroom
        - sensor.temperature_fridge
        - sensor.temperature_livingroom
        - sensor.temperature_outside
        - sensor.temperature_utility_cabinet
        - sensor.study_multi_sensor_2_temperature
        - sensor.rabbits_temperature

        #Others
        - sensor.washer_washer_machine_state
