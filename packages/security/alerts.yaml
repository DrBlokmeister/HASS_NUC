homeassistant:
  customize:

timer:
  motion_detected:
    duration: '00:10:00'
#################
#    SENSORS    #
#################
sensor:
  # - platform: template
  #   sensors:
  #     location_of_last_motion:
  #       value_template: >-
  #         {%- set sensors = [states.binary_sensor.motion_sensor_bedroom,states.binary_sensor.motion_sensor_hallway,states.binary_sensor.motion_sensor_livingroom,states.binary_sensor.motion_sensor_livingroom2,states.binary_sensor.motion_sensor_study,states.binary_sensor.motion_sensor_livingroomnew,states.binary_sensor.motion_sensor_kitchen] %}
  #         {% for sensor in sensors %}
  #           {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max) %}
  #             {{ sensor.name }}
  #           {% endif %}
  #         {% endfor %}
          
########################
#    BINARY SENSORS    #
########################
binary_sensor:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[security|alert]Restart or Start timer when motion is detected'
    trigger:
      - platform: state
        entity_id: sensor.location_of_last_motion
    condition:
      - condition: state
        entity_id: person.sander_blok
        state: 'not_home'
      - condition: state
        entity_id: person.tamara
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      - service: timer.cancel
        data:
          entity_id: timer.motion_detected
      - service: timer.start
        data:
          entity_id: timer.motion_detected
          duration: '00:30:00'

  - alias: '[security|alert]Enable detection monitoring'
    trigger:
      - platform: event
        event_type: timer.started
        event_data:
          entity_id: timer.motion_detected
    action:
      - service: homeassistant.turn_on
        entity_id: automation.message_phone_if_motion_is_detected_when_im_not_home

  - alias: '[security|alert]Disable detection monitoring'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.motion_detected
    action:
      - service: homeassistant.turn_off
        entity_id: automation.message_phone_if_motion_is_detected_when_im_not_home

  - alias: '[security|alert]Message phone if motion is detected when Im not home'
    trigger:
      - platform: state
        entity_id: sensor.location_of_last_motion
    condition:
      - condition: state
        entity_id: person.sander_blok
        state: 'not_home'
      - condition: state
        entity_id: person.tamara
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      - service: script.message_someone_is_at_home
      # - delay: "00:02:00"
      # - service: light.turn_on
      #   data:
      #     entity_id: light.living_room
      #     color_name: "red"
      #     flash: long
      # - delay: "00:05:00"
      # - service: light.turn_off
      #   entity_id: light.living_room

  - alias: '[security|alert]Front door opened'
    trigger:
      platform: state
      entity_id: binary_sensor.door_window_sensor_frontdoor
      to: 'Open'
    condition:
      - condition: state
        entity_id: person.sander_blok
        state: 'not_home'
      - condition: state
        entity_id: person.tamara
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      service: notify.mobile_app_blokmeister_op6
      data:
        message: "Front door has been opened!"
        title: "Home Assistant - Front door opened!"
        data:
          icon: mdi:door-open
          image: mdi:door-open

  - alias: '[security|alert]Kitchen door opened'
    trigger:
      platform: state
      entity_id: binary_sensor.door_window_sensor_kitchen
      to: 'Open'
    condition:
      - condition: state
        entity_id: person.sander_blok
        state: 'not_home'
      - condition: state
        entity_id: person.tamara
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      service: notify.mobile_app_blokmeister_op6
      data:
        message: "Kitchen door has been opened!"
        title: "Home Assistant - Kitchen door opened!"
        data:
          icon: mdi:door-open
          image: mdi:door-open


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:
  security_alert_notifications:
    entities:
      - automation.security_alert_restart_or_start_timer_when_motion_is_detected
      - automation.security_alert_enable_detection_monitoring
      - automation.security_alert_disable_detection_monitoring
      - automation.security_alert_message_phone_if_motion_is_detected_when_im_not_home
      - automation.security_alert_front_door_opened
      - automation.security_alert_kitchen_door_opened
#################
#    SCRIPTS    #
#################
script:
  message_someone_is_at_home:
      alias: "Motion is detected at home"
      sequence:
        - service: notify.mobile_app_blokmeister_op6
          data:
            message: "Motion has been detected in the {{states('sensor.location_of_last_motion')}}!"
            title: "Home Assistant - Motion detected!"
            data:
              icon: http://192.168.1.252:8123/local/icons/motion-sensor.png
