homeassistant:
  customize:

timer:
  motion_detected:
    duration: '00:10:00'
#################
#    SENSORS    #
#################
sensor:
  # - platform: template
  #   sensors:
  #     location_of_last_motion:
  #       value_template: >-
  #         {%- set sensors = [states.binary_sensor.motion_sensor_bedroom,states.binary_sensor.motion_sensor_hallway,states.binary_sensor.motion_sensor_livingroom,states.binary_sensor.motion_sensor_livingroom2,states.binary_sensor.motion_sensor_study,states.binary_sensor.motion_sensor_livingroomnew,states.binary_sensor.motion_sensor_kitchen] %}
  #         {% for sensor in sensors %}
  #           {% if as_timestamp(sensor.last_changed) == as_timestamp(sensors | map(attribute='last_changed') | max) %}
  #             {{ sensor.name }}
  #           {% endif %}
  #         {% endfor %}
  - platform: template
    sensors:
      last_triggered_motion_sensor:
        friendly_name: Last Triggered Motion Sensor
        icon_template: mdi:motion-sensor
        value_template: >-
          {%- set lastchangedtime = (states.binary_sensor|selectattr('attributes.device_class','eq','motion')|rejectattr('entity_id', 'in', ['binary_sensor.entry_motion_combined', 'binary_sensor.livingroom_motion_combined', 'binary_sensor.study_motion_combined'])|map(attribute='last_changed')|max) %}
          {{ states.binary_sensor|selectattr('attributes.device_class','eq','motion')|selectattr('last_changed', 'eq', lastchangedtime)|map(attribute='attributes.friendly_name')|list|join(', ') }}
        attribute_templates:
          time: >-
            {%- set lastchangedtime = (states.binary_sensor|selectattr('attributes.device_class','eq','motion')|rejectattr('entity_id', 'in', ['binary_sensor.entry_motion_combined', 'binary_sensor.livingroom_motion_combined', 'binary_sensor.study_motion_combined'])|map(attribute='last_changed')|max) %}
            {{ lastchangedtime|as_timestamp|timestamp_custom('%d-%m-%Y %H:%M:%S') }}
          timestamp: >-
            {%- set lastchangedtime = (states.binary_sensor|selectattr('attributes.device_class','eq','motion')|rejectattr('entity_id', 'in', ['binary_sensor.entry_motion_combined', 'binary_sensor.livingroom_motion_combined', 'binary_sensor.study_motion_combined'])|map(attribute='last_changed')|max) %}
            {{ lastchangedtime }}
          entity_id: >-
            {%- set lastchangedtime = (states.binary_sensor|selectattr('attributes.device_class','eq','motion')|rejectattr('entity_id', 'in', ['binary_sensor.entry_motion_combined', 'binary_sensor.livingroom_motion_combined', 'binary_sensor.study_motion_combined'])|map(attribute='last_changed')|max) %}
            {{ states.binary_sensor|selectattr('attributes.device_class','eq','motion')|selectattr('last_changed', 'eq', lastchangedtime)|map(attribute='entity_id')|list|join(', ') }}

########################
#    BINARY SENSORS    #
########################
binary_sensor:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[security|alert]Restart or Start timer when motion is detected'
    trigger:
      - platform: state
        entity_id: sensor.last_triggered_motion_sensor
    condition:
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'off'
        for:
          minutes: 15
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      - service: timer.cancel
        data:
          entity_id: timer.motion_detected
      - service: timer.start
        data:
          entity_id: timer.motion_detected
          duration: '00:30:00'

  - alias: '[security|alert]Enable detection monitoring'
    trigger:
      - platform: event
        event_type: timer.started
        event_data:
          entity_id: timer.motion_detected
    action:
      - service: homeassistant.turn_on
        entity_id: automation.message_phone_if_motion_is_detected_when_im_not_home

  - alias: '[security|alert]Disable detection monitoring'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.motion_detected
    action:
      - service: homeassistant.turn_off
        entity_id: automation.message_phone_if_motion_is_detected_when_im_not_home

  - alias: '[security|alert]Message phone if motion is detected when Im not home'
    trigger:
      - platform: state
        entity_id: sensor.last_triggered_motion_sensor
    condition:
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'off'
        for:
          minutes: 15
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      - service: script.message_someone_is_at_home
      # - delay: "00:02:00"
      # - service: light.turn_on
      #   data:
      #     entity_id: light.living_room
      #     color_name: "red"
      #     flash: long
      # - delay: "00:05:00"
      # - service: light.turn_off
      #   entity_id: light.living_room

  - alias: '[security|alert]Door opened'
    trigger:
      - platform: state
        entity_id: binary_sensor.door_window_sensor_frontdoor
        to: 'on'
      - platform: state
        entity_id: binary_sensor.kitchen_door_window_sensor
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'off'
        for:
          minutes: 15
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
    action:
      - service: notify.mobile_app_blokmeister_op6_haapp
        data:
          message: >
            "{{ trigger.to_state.name }} has been triggered!!"
          title: "Home Assistant - Warning"
          data:
            group: info
            tag: security
            icon_url: local/icons/door-open.png
            timeout: 10800

  # - alias: '[security|alert]Kitchen door opened'
  #   trigger:
  #     - platform: state
  #       entity_id: binary_sensor.kitchen_door_window_sensor
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: person.sander_blok
  #       state: 'not_home'
  #     - condition: state
  #       entity_id: person.tamara
  #       state: 'not_home'
  #     - condition: state
  #       entity_id: input_boolean.guest_mode
  #       state: 'off'
  #   action:
  #     - service: notify.mobile_app_blokmeister_op6_haapp
  #       data:
  #         message: "Kitchen door has been opened!"
  #         title: "Home Assistant - Warning"
  #         data:
  #           group: info
  #           tag: security
  #           icon_url: local/icons/door-open.png
  #           timeout: 10800


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:
  security_alert_notifications:
    entities:
      - automation.security_alert_restart_or_start_timer_when_motion_is_detected
      - automation.security_alert_enable_detection_monitoring
      - automation.security_alert_disable_detection_monitoring
      - automation.security_alert_message_phone_if_motion_is_detected_when_im_not_home
      - automation.security_alert_front_door_opened
      - automation.security_alert_kitchen_door_opened
#################
#    SCRIPTS    #
#################
script:
  message_someone_is_at_home:
    alias: "Motion is detected at home"
    sequence:
      - service: camera.snapshot
        data:
          entity_id: camera.tapo_camera_d6d4_hd
          filename: "/config/www/snapshots/livingroom_last_snapshot.jpg"
      - delay:
          seconds: 2
      - service: notify.mobile_app_blokmeister_op6_haapp
        data:
          message: "Motion has been detected for sensor {{states('sensor.last_triggered_motion_sensor')}}!"
          title: "Home Assistant - Warning"
          data:
            group: info
            tag: security
            icon_url: local/icons/motion-sensor.png
            timeout: 10800
            image: !secret last_snapshot_url
