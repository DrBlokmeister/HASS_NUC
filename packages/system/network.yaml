homeassistant:
  customize:
    sensor.speedtest_download:
      templates:
        icon: >
          if (state > 800) return 'mdi:speedometer';
          if (state > 500) return 'mdi:speedometer-medium';
          return 'mdi:speedometer-slow'
        icon_color: >
          var maxval = 1000;
          var minval = 400;
          var maxhue = 120;
          var minhue = 0;
          if (state > maxval) return 'hsl(' + maxhue.toString() + ',80%,50%)';
          if (state < minval) return 'hsl(' + minhue.toString() + ',80%,50%)';
          var hue = Math.round((Number(state) - minval) / (maxval - minval) * (maxhue - minhue) + minhue );
          return 'hsl(' + hue.toString() + ',80%,50%)';
    sensor.speedtest_upload:
      icon: mdi:speedometer
      templates:
        icon: >
          if (state > 800) return 'mdi:speedometer';
          if (state > 500) return 'mdi:speedometer-medium';
          return 'mdi:speedometer-slow'
        icon_color: >
          var maxval = 1000;
          var minval = 400;
          var maxhue = 120;
          var minhue = 0;
          if (state > maxval) return 'hsl(' + maxhue.toString() + ',80%,50%)';
          if (state < minval) return 'hsl(' + minhue.toString() + ',80%,50%)';
          var hue = Math.round((Number(state) - minval) / (maxval - minval) * (maxhue - minhue) + minhue );
          return 'hsl(' + hue.toString() + ',80%,50%)';
    sensor.speedtest_ping:
      icon: mdi:speedometer
      templates:
        icon_color: >
          var maxval = 30;
          var minval = 1;
          var maxhue = 0;
          var minhue = 120;
          if (state > maxval) return 'hsl(' + maxhue.toString() + ',80%,50%)';
          if (state < minval) return 'hsl(' + minhue.toString() + ',80%,50%)';
          var hue = Math.round((Number(state) - minval) / (maxval - minval) * (maxhue - minhue) + minhue );

  # - sensor:
  #     name: "NAS CPU Usage"
  #     icon: mdi:cpu-64-bit
  #     unit_of_measurement: '%'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "top -bn1 | grep 'Cpu(s)' | sed 's/.*, *\([0-9.]*\)%* id.*/\\1/' | awk '{print 100 - \$1}'"
  # - sensor:
  #     name: "NAS CPU Temperature"
  #     icon: mdi:cpu-64-bit
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "sensors | grep 'CPU Temp:' | awk '{print \$3}'"
  #     value_template: "{{ value | replace('+','') | replace('°C','') }}"
  #     scan_interval: 60
  # - sensor:
  #     name: "NAS Total Memory"
  #     icon: mdi:memory
  #     unit_of_measurement: 'MB'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "free -m | awk '/Mem:/ {print \$2}'"
  #     scan_interval: 60
  # - sensor:
  #     name: "NAS Used Memory"
  #     icon: mdi:memory
  #     unit_of_measurement: 'MB'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "free -m | awk '/Mem:/ {print \$7}'"
  #     scan_interval: 60
  # - sensor:
  #     name: "NAS Used Disk Space"
  #     icon: mdi:disk
  #     unit_of_measurement: 'GB'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "df -h | grep /mnt/user/ | awk '{print \$3}' | sed 's/T//g' | awk '{print \$1 * 1024}'"
  #     scan_interval: 60
  # - sensor:
  #     name: "NAS NVMe Composite Temperature"
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "sensors | grep 'Composite:' | awk '{print \$2}'"
  #     value_template: "{{ value | replace('+','') | replace('°C','') }}"
  #     scan_interval: 60

  # - sensor:
  #     name: "NAS Parity Temperature"
  #     icon: mdi:harddisk
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "smartctl -A /dev/sdb | grep Temperature_Celsius | awk '{print \$10}'"
  #     scan_interval: 600
  # - sensor:
  #     name: "NAS Disk 1 Temperature"
  #     icon: mdi:harddisk
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "smartctl -A /dev/sdc | grep Temperature_Celsius | awk '{print \$10}'"
  #     scan_interval: 600
  # - sensor:
  #     name: "NAS Disk 3 Temperature"
  #     icon: mdi:harddisk
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "smartctl -A /dev/sdd | grep Temperature_Celsius | awk '{print \$10}'"
  #     scan_interval: 600
  # - sensor:
  #     name: "NAS Disk 2 Temperature"
  #     icon: mdi:harddisk
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "smartctl -A /dev/sde | grep Temperature_Celsius | awk '{print \$10}'"
  #     scan_interval: 600
  # - sensor:
  #     name: "NAS Dev 2 Temperature"
  #     icon: mdi:harddisk
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "smartctl -A /dev/sdf | grep Temperature_Celsius | awk '{print \$10}'"
  #     scan_interval: 600
  # - sensor:
  #     name: "NAS Dev 1 Temperature"
  #     icon: mdi:harddisk
  #     unit_of_measurement: '°C'
  #     command: >-
  #       ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
  #       root@10.0.0.250
  #       "smartctl -A /dev/sdg | grep Temperature_Celsius | awk '{print \$10}'"
  #     scan_interval: 600

#################
#    SENSORS    #
#################
sensor:
  - platform: template
    sensors:
      ping_router_avg:
        value_template: "{{ state_attr('binary_sensor.udm_pro', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "Router ping average"
        availability_template: "{{ state_attr('binary_sensor.udm_pro', 'round_trip_time_avg')|is_number }}"

      ping_blokmeisternas_avg:
        value_template: "{{ state_attr('binary_sensor.blokmeisternas', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "BlokmeisterNAS ping average"
        availability_template: "{{ state_attr('binary_sensor.blokmeisternas', 'round_trip_time_avg')|is_number }}"

      ping_phone_avg:
        value_template: "{{ state_attr('binary_sensor.phone', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "Phone ping average"
        availability_template: "{{ state_attr('binary_sensor.phone', 'round_trip_time_avg')|is_number }}"

      ping_odroid_c2_avg:
        value_template: "{{ state_attr('binary_sensor.odroid_c2', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "Odroid C2 ping average"
        availability_template: "{{ state_attr('binary_sensor.odroid_c2', 'round_trip_time_avg')|is_number }}"

      ping_ambilight_rpi_avg:
        value_template: "{{ state_attr('binary_sensor.ambilight_rpi', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "Ambilight RPI ping average"
        availability_template: "{{ state_attr('binary_sensor.ambilight_rpi', 'round_trip_time_avg')|is_number }}"

      ping_snlr_avg:
        value_template: "{{ state_attr('binary_sensor.snlr', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "Plinq ping average"
        availability_template: "{{ state_attr('binary_sensor.snlr', 'round_trip_time_avg')|is_number }}"

      ping_google_dns_avg:
        value_template: "{{ state_attr('binary_sensor.google_dns', 'round_trip_time_avg')|round(2) }}"
        unit_of_measurement: ms
        friendly_name: "Google DNS ping average"
        availability_template: "{{ state_attr('binary_sensor.google_dns', 'round_trip_time_avg')|is_number }}"

      udmp_download_speed_mbs:
        value_template: "{{ (states('sensor.unifi_dream_machine_kib_s_received')|float/1024)|round(1) }}"
        unit_of_measurement: MB/s
        friendly_name: "Router Download Speed"
        availability_template: "{{ states('sensor.unifi_dream_machine_kib_s_received')|is_number }}"
      udmp_upload_speed_mbs:
        value_template: "{{ (states('sensor.unifi_dream_machine_kib_s_sent')|float/1024)|round(1) }}"
        unit_of_measurement: MB/s
        friendly_name: "Router Download Speed"
        availability_template: "{{ states('sensor.unifi_dream_machine_kib_s_sent')|is_number }}"
      udmp_download_gb:
        value_template: "{{ (states('sensor.unifi_dream_machine_b_received')|float/1024**3)|round(1) }}"
        unit_of_measurement: GB
        friendly_name: "Router Total Download"
        availability_template: "{{ states('sensor.unifi_dream_machine_b_received')|is_number }}"
      udmp_upload_gb:
        value_template: "{{ (states('sensor.unifi_dream_machine_b_sent')|float/1024**3)|round(1) }}"
        unit_of_measurement: GB
        friendly_name: "Router Total Upload"
        availability_template: "{{ states('sensor.unifi_dream_machine_b_sent')|is_number }}"

      ap_groundfloor_number_of_clients:
        value_template: "{{ states.device_tracker | selectattr('attributes.ap_mac','defined') | selectattr('attributes.ap_mac','eq','d0:21:f9:64:06:39') | list | count }}"
        friendly_name: "AP Ground Floor Number of Clients"
        unit_of_measurement: "Clients"
        availability_template: "{{ is_state('device_tracker.udmpro', 'home' ) }}"
      ap_firstfloor_number_of_clients:
        value_template: "{{ states.device_tracker | selectattr('attributes.ap_mac','defined') | selectattr('attributes.ap_mac','eq','d0:21:f9:b7:9c:88') | list | count }}"
        friendly_name: "AP First Floor Number of Clients"
        unit_of_measurement: "Clients"
        availability_template: "{{ is_state('device_tracker.udmpro', 'home' ) }}"
      ap_secondfloor_number_of_clients:
        value_template: "{{ states.device_tracker | selectattr('attributes.ap_mac','defined') | selectattr('attributes.ap_mac','eq','d0:21:f9:b7:ea:68') | list | count }}"
        friendly_name: "AP Second Floor Number of Clients"
        unit_of_measurement: "Clients"
        availability_template: "{{ is_state('device_tracker.udmpro', 'home' ) }}"
      number_of_guests_connected:
        value_template: "{{ states.device_tracker | selectattr('attributes.essid','defined') | selectattr('attributes.essid','eq','BlokmeisterWIFI_Guest') | list | count }}"
        friendly_name: "Number of Guests Connected"
        unit_of_measurement: "Clients"
        availability_template: "{{ is_state('device_tracker.udmpro', 'home' ) }}"

  - platform: min_max
    name: USW Lite 16 Total PoE Power
    entity_ids:
      - sensor.usw_lite_16_poe_port_1_poe_power
      - sensor.usw_lite_16_poe_port_2_poe_power
      - sensor.usw_lite_16_poe_port_3_poe_power
      - sensor.usw_lite_16_poe_port_4_poe_power
      - sensor.usw_lite_16_poe_port_5_poe_power
      - sensor.usw_lite_16_poe_port_6_poe_power
      - sensor.usw_lite_16_poe_port_7_poe_power
      - sensor.usw_lite_16_poe_port_8_poe_power
    type: sum
    round_digits: 2

########################
#    BINARY SENSORS    #
########################
binary_sensor:
  # - platform: ping
  #   name: BlokmeisterNAS
  #   host: tower.local
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: UDM Pro
  #   host: 10.0.0.1
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: "10 Gbe Switch"
  #   host: 10.0.0.74
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: PoE Switch
  #   host: 10.0.0.212
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: USW Switch Mini
  #   host: 10.0.0.48
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: AP Ground Floor
  #   host: 10.0.0.251
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: AP 1st Floor
  #   host: 10.0.0.197
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: AP 2nd Floor
  #   host: 10.0.0.155
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: AP Outside
  #   host: 10.0.0.186
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Phone
  #   host: 10.0.0.100
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Odroid_C2
  #   host: CoreELEC.local
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Ambilight_RPI
  #   host: HyperBian.local
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: SNLR
  #   host: 45.145.109.105
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Google_DNS
  #   host: 8.8.8.8
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Blokmeisterdesktop
  #   host: 10.0.0.101
  #   count: 5
  #   scan_interval: 60

  # - platform: ping
  #   name: Heatpump Controller
  #   host: 10.0.20.10
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Alpha Home Gateway
  #   host: 10.0.20.11
  #   count: 5
  #   scan_interval: 60
  # - platform: ping
  #   name: Alpha Home Control Box
  #   host: 10.0.20.12
  #   count: 5
  #   scan_interval: 60

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[network|notify]Alert phone when network speed is too low'
    trigger:
      - platform: numeric_state
        entity_id: sensor.speedtest_download
        below: 100
        for:
          minutes: 70
    action:
      service: notify.mobile_app_blokmeisters21u
      data:
        title: "Network speed 100mbit!"
        message: "Current network speed {{ states('sensor.speedtest_download') }} Mbit/s."
        data:
          group: reminder
          tag: networkspeed
          timeout: 1800


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:
