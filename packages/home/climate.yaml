homeassistant:
  customize: {}

#######################
#    INPUT SELECTS    #
#######################
input_select:
  heatpump_price_control:
    name: Heat Pump Price Control
    options:
      - "Off"
      - "Quartile Price"
      - "Fixed Price"
    icon: mdi:cash-multiple

#######################
#    INPUT NUMBERS    #
#######################
input_number:
  heatpump_fixed_price_threshold:
    name: Heat Pump Fixed Price Threshold
    min: 0
    max: 1
    step: 0.01
    unit_of_measurement: "€/kWh"
    icon: mdi:currency-eur

  heatpump_target_correction:
    name: Heat Pump Target Correction
    min: -5
    max: 5
    step: 1
    unit_of_measurement: "°C"
    icon: mdi:thermometer

#################
#    SENSORS    #
#################
sensor:
  - platform: min_max
    type: mean
    name: Home Mean Humidity
    unique_id: sensor_home_mean_humidity
    entity_ids:
      - sensor.humidity_livingroom
      - sensor.livingroom_aqm_humidity

      - sensor.humidity_bathroom

      - sensor.humidity_bedroom
      - sensor.bedroom_aqm_humidity

      - sensor.study_multi_sensor_2_humidity
      - sensor.study_aqm_humidity
      - sensor.guest_room_aqm_humidity
  - platform: min_max
    type: median
    name: Home Median Humidity
    unique_id: sensor_home_median_humidity
    entity_ids:
      - sensor.humidity_livingroom
      - sensor.livingroom_aqm_humidity

      - sensor.humidity_bathroom

      - sensor.humidity_bedroom
      - sensor.bedroom_aqm_humidity

      - sensor.study_multi_sensor_2_humidity
      - sensor.study_aqm_humidity
      - sensor.guest_room_aqm_humidity
  - platform: min_max
    type: max
    name: Home Max Humidity
    unique_id: sensor_home_max_humidity
    entity_ids:
      - sensor.humidity_livingroom
      - sensor.livingroom_aqm_humidity

      - sensor.humidity_bathroom

      - sensor.humidity_bedroom
      - sensor.bedroom_aqm_humidity

      - sensor.study_multi_sensor_2_humidity
      - sensor.study_aqm_humidity
      - sensor.guest_room_aqm_humidity
  - platform: min_max
    type: mean
    name: Home Mean Humidity Without Bathroom
    unique_id: sensor_home_mean_humidity_without_bathroom
    entity_ids:
      - sensor.humidity_livingroom
      - sensor.livingroom_aqm_humidity

      - sensor.humidity_bedroom
      - sensor.bedroom_aqm_humidity

      - sensor.study_multi_sensor_2_humidity
      - sensor.study_aqm_humidity
      - sensor.guest_room_aqm_humidity

  - platform: min_max
    type: mean
    name: Home Mean CO2
    unique_id: sensor_home_mean_co2
    entity_ids:
      - sensor.living_room_co2
      - sensor.bedroom_co2
      - sensor.study_co2
      - sensor.guest_room_co2
  - platform: min_max
    type: median
    name: Home Median CO2
    unique_id: sensor_home_median_co2
    entity_ids:
      - sensor.living_room_co2
      - sensor.bedroom_co2
      - sensor.study_co2
      - sensor.guest_room_co2
  - platform: min_max
    type: max
    name: Home Max CO2
    unique_id: sensor_home_max_co2
    entity_ids:
      - sensor.living_room_co2
      - sensor.bedroom_co2
      - sensor.study_co2
      - sensor.guest_room_co2

  - platform: min_max
    type: mean
    name: Home Mean Room Temperature
    unique_id: sensor_min_max_home_median_room_temperature
    entity_ids:
      - sensor.temperature_livingroom
      - sensor.livingroom_aqm_temperature
      - sensor.study_multi_sensor_2_temperature
      - sensor.study_aqm_temperature
      - sensor.temperature_bedroom
      - sensor.bedroom_aqm_temperature
      - sensor.temperature_bathroom
      - sensor.guest_room_aqm_temperature

  - platform: min_max
    type: mean
    name: Study Mean Room Temperature
    unique_id: yaml_min_max_sensor_study_mean_temperature
    entity_ids:
      - sensor.study_aqm_temperature
      - sensor.study_multi_sensor_2_temperature
      - sensor.study_alphahome_temperature
  - platform: min_max
    type: mean
    name: Living Room Mean Room Temperature
    unique_id: yaml_min_max_sensor_livingroom_mean_temperature
    entity_ids:
      - sensor.livingroom_aqm_temperature
      - sensor.temperature_livingroom
      - sensor.living_room_alphahome_temperature
  - platform: min_max
    type: mean
    name: Bedroom Mean Room Temperature
    unique_id: yaml_min_max_sensor_bedroom_mean_temperature
    entity_ids:
      - sensor.bedroom_aqm_temperature
      - sensor.temperature_bedroom
      - sensor.bedroom_alphahome_temperature
  - platform: min_max
    type: mean
    name: Bathroom Mean Room Temperature
    unique_id: yaml_min_max_sensor_bathroom_mean_temperature
    entity_ids:
      - sensor.temperature_bathroom
      - sensor.bathroom_alphahome_temperature
  - platform: min_max
    type: mean
    name: Baby Room Mean Room Temperature
    unique_id: yaml_min_max_sensor_baby_room_mean_temperature
    entity_ids:
      - sensor.baby_room_aqm_temperature
      - sensor.baby_room_alphahome_temperature
  - platform: min_max
    type: mean
    name: Guest Room Mean Room Temperature
    unique_id: yaml_min_max_sensor_guest_room_mean_temperature
    entity_ids:
      - sensor.guest_room_aqm_temperature
      - sensor.guestroom_alphahome_temperature

  - platform: template
    sensors:
      warmtebron_in_uit_delta:
        friendly_name: Warmtebron in-uit Delta T
        unique_id: yaml_template_sensor_warmtebron_in_uit_delta
        icon_template: mdi:thermometer-lines
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.heatpump_heat_source_output_temperature')|float - states('sensor.heatpump_heat_source_input_temperature')|float}}"
        availability_template: "{{ states.sensor.heatpump_heat_source_output_temperature not in ['unavailable', 'unknown', 'none', None] and states.sensor.heatpump_heat_source_input_temperature not in ['unavailable', 'unknown', 'none', None] }}"
      vloerverwarming_in_uit_delta:
        friendly_name: Vloerverwarming in-uit Delta T
        unique_id: yaml_template_sensor_vloerverwarming_in_uit_delta
        icon_template: mdi:thermometer-lines
        unit_of_measurement: '°C'
        value_template: "{{ states('sensor.heatpump_flow_in_temperature')|float - states('sensor.heatpump_flow_out_temperature')|float}}"
        availability_template: "{{ states.sensor.heatpump_flow_in_temperature not in ['unavailable', 'unknown', 'none', None] and states.sensor.heatpump_flow_in_temperature not in ['unavailable', 'unknown', 'none', None] }}"
      # tapwater_heat_amount_updating:
      #   friendly_name: Tapwater Heat Amount Updating
      #   unit_of_measurement: "kWh"
      #   value_template: "{{ states('sensor.heatpump_tapwater_heat_amount')|float() + ((((now().minute % 2) | float) - 0.5) / 100) }}"
      #   attribute_templates:
      #     update_minute: "{{ now().minute }}"
      #   availability_template: "{{ states('sensor.heatpump_tapwater_heat_amount')|is_number() }}"
      # heating_heat_amount_updating:
      #   friendly_name: Heating Heat Amount Updating
      #   unit_of_measurement: "kWh"
      #   value_template: "{{ states('sensor.heatpump_heat_amount_heating')|float() + ((((now().minute % 2) | float) - 0.5) / 100) }}"
      #   attribute_templates:
      #     update_minute: "{{ now().minute }}"
      #   availability_template: "{{ states('sensor.heatpump_heat_amount_heating')|is_number() }}"
      heatpump_efficiency:
        friendly_name: Heatpump Efficiency
        unique_id: yaml_template_sensor_heatpump_efficiency
        icon_template: mdi:percent
        unit_of_measurement: '%'
        value_template: "{{ (100 * (states('sensor.heatpump_current_heat_output')|float(0)) / states('sensor.shelly_heat_pump_power')|float(1))|round(0) }}"
        availability_template: "{{ states.sensor.heatpump_current_heat_output not in ['unavailable', 'unknown', 'none', None] and states.sensor.shelly_heat_pump_power not in ['unavailable', 'unknown', 'none', None] }}"
      heatpump_source_heat_dissipation:
        friendly_name: Heatpump Source Heat Dissipation
        unique_id: yaml_template_sensor_heatpump_source_heat_dissipation
        icon_template: mdi:fire
        unit_of_measurement: 'kW'
        value_template: "{{ (states('sensor.warmtebron_in_uit_delta')|float * states('sensor.heatpump_heat_source_flow_rate')|float * 4186 / 3600 / 1000)|round(2) }}"
        availability_template: "{{ states('sensor.warmtebron_in_uit_delta')|is_number and states('sensor.heatpump_heat_source_flow_rate')|is_number}}"
      # heatpump_floor_heat_dissipation:
      #   friendly_name: Heatpump Floor Heat Dissipation
      #   unit_of_measurement: 'kW'
      #   value_template: "{{ states('sensor.vloerverwarming_in_uit_delta')|float * states('sensor.heatpump_heat_source_flow_rate')|float * 4186 / 3600 / 1000}}"
      bathroom_alphahome_temperature:
        friendly_name: Bathroom Alpha Home Temperature
        unique_id: "yaml_template_sensor_bathroom_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.badkamer', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.badkamer', 'current_temperature')|is_number }}"
      bedroom_alphahome_temperature:
        friendly_name: Bedroom Alpha Home Temperature
        unique_id: "yaml_template_sensor_bedroom_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.slaapkamer', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.slaapkamer', 'current_temperature')|is_number }}"
      baby_room_alphahome_temperature:
        friendly_name: Baby Room Alpha Home Temperature
        unique_id: "yaml_template_sensor_nursery_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.babykamer', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.babykamer', 'current_temperature')|is_number }}"
      study_alphahome_temperature:
        friendly_name: Study Alpha Home Temperature
        unique_id: "yaml_template_sensor_study_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.studeerkamer', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.studeerkamer', 'current_temperature')|is_number }}"
      tamaras_room_alphahome_temperature:
        friendly_name: Tamara's Room Alpha Home Temperature
        unique_id: "yaml_template_sensor_tamaras_room_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.tamara', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.tamara', 'current_temperature')|is_number }}"
      guestroom_alphahome_temperature:
        friendly_name: Guest Room Alpha Home Temperature
        unique_id: "yaml_template_sensor_guest_room_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.logeerkamer', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.logeerkamer', 'current_temperature')|is_number }}"
      living_room_alphahome_temperature:
        friendly_name: Living Room Alpha Home Temperature
        unique_id: "yaml_template_sensor_living_room_alphahome_temperature"
        device_class: temperature
        unit_of_measurement: "°C"
        icon_template: mdi:thermostat
        value_template: "{{ state_attr('climate.woonkamer', 'current_temperature') }}"
        availability_template: "{{ state_attr('climate.woonkamer', 'current_temperature')|is_number }}"
      tapwater_heat_up_energy_required:
        friendly_name: Tapwater Heat-Up Energy Required
        unique_id: yaml_template_sensor_tapwater_heat_up_energy_required
        device_class: energy
        unit_of_measurement: kWh
        icon_template: mdi:lightning-bolt
        value_template: >-
          {{ (((0.0012 * states('input_number.tapwater_heat_up_temperature')|float()**2) + (-0.0593 * states('input_number.tapwater_heat_up_temperature')|float) + 0.6177) -
             ((0.0012 * states('sensor.heatpump_tapwater_temperature')|float()**2) + (-0.0593 * states('sensor.heatpump_tapwater_temperature')|float) + 0.6177))|round(2) }}
        availability_template: "{{ states('input_number.tapwater_heat_up_temperature')|is_number and states('sensor.heatpump_tapwater_temperature')|is_number }}"


  # CO2 calibration notification helpers
  - platform: statistics
    name: "Guest Room CO2 Seven Day Moving Range"
    entity_id: sensor.guest_room_co2
    state_characteristic: distance_absolute
    max_age:
      days: 7
  - platform: statistics
    name: "Living Room CO2 Seven Day Moving Range"
    entity_id: sensor.livingroom_co2
    state_characteristic: distance_absolute
    max_age:
      days: 7
  - platform: statistics
    name: "Bedroom CO2 Seven Day Moving Range"
    entity_id: sensor.bedroom_co2
    state_characteristic: distance_absolute
    max_age:
      days: 7
  - platform: statistics
    name: "Shed CO2 Seven Day Moving Range"
    entity_id: sensor.shed_co2
    state_characteristic: distance_absolute
    max_age:
      days: 7
  - platform: statistics
    name: "Study CO2 Seven Day Moving Range"
    entity_id: sensor.study_co2
    state_characteristic: distance_absolute
    max_age:
      days: 7

########################
#    BINARY SENSORS    #
########################
binary_sensor:

########################
#    INPUT BOOLEANS    #
########################
input_boolean:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: "[home|climate] CO2 Sensor Calibration Notification"
    id: yaml_automation_home_climate_co2_sensor_calibration_notification
    mode: restart
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.guest_room_co2_seven_day_moving_range
          - sensor.living_room_co2_seven_day_moving_range
          - sensor.bedroom_co2_seven_day_moving_range
          - sensor.shed_co2_seven_day_moving_range
          - sensor.study_co2_seven_day_moving_range
        below: 50
    action:
      - service: notify.persistent_notification
        data_template:
          message: >
            {% if trigger.entity_id == 'sensor.guest_room_co2_seven_day_moving_range' %}
              Calibration may be needed for the Guest Room CO2 sensor.
            {% elif trigger.entity_id == 'sensor.living_room_co2_seven_day_moving_range' %}
              Calibration may be needed for the Living Room CO2 sensor.
            {% elif trigger.entity_id == 'sensor.bedroom_co2_seven_day_moving_range' %}
              Calibration may be needed for the Bedroom CO2 sensor.
            {% elif trigger.entity_id == 'sensor.shed_co2_seven_day_moving_range' %}
              Calibration may be needed for the Shed CO2 sensor.
            {% elif trigger.entity_id == 'sensor.study_co2_seven_day_moving_range' %}
              Calibration may be needed for the Study CO2 sensor.
            {% else %}
              Calibration is needed for an unknown sensor, triggered by: {{ trigger.entity_id }}
            {% endif %}

  - alias: "[home|climate] Ventilation Control based on Temperature"
    id: yaml_automation_home_climate_ventilation_control_based_on_temperature
    description: >
      Turns on ventilation to the max when the outside temperature drops below the 
      mean home temperature. Keeps checking every 30 minutes and maintains the state 
      if the condition is still met. Turns off the fan speed override afterwards.
    mode: single
    initial_state: off
    trigger:
      - platform: numeric_state
        entity_id: sensor.shed_aqm_temperature
        below: sensor.home_median_room_temperature
    condition:
      - condition: time
        after: '22:00:00'
        before: '06:00:00'
    action:
      - service: number.set_value
        data:
          entity_id: number.override_fan_speed
          value: 100
      - service: number.set_value
        data:
          entity_id: number.override_fan_duration
          value: 600
      - delay:
          seconds: 1
      - service: switch.turn_on
        target:
          entity_id: switch.fan_speed_override
      - alias: Repeat ventilation check
        repeat:
          while:
            - condition: numeric_state
              entity_id: sensor.shed_aqm_temperature
              below: sensor.home_median_room_temperature
          sequence:
            - delay: "00:30:00"
            - service: switch.turn_on
              target:
                entity_id: switch.fan_speed_override
      - service: switch.turn_off
        target:
          entity_id: switch.fan_speed_override

  - alias: "[home|climate] Heat Pump Cooling Control based on Electricity Price"
    id: yaml_automation_home_climate_heat_pump_cooling_control_based_on_electricity_price
    description: >
      Turns off the heat pump cooling when the electricity price is higher than the highest quartile.
      Turns it back on when the price drops below the highest quartile. This automation triggers on
      both rising above and dropping below the quartile threshold.
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.nordpool_energy_price
        value_template: "{{ state.state | float() - 0.001 }}"
        above: sensor.highest_quartile_electricity_price_today
        id: "high_price"
      - platform: numeric_state
        entity_id: sensor.nordpool_energy_price
        below: sensor.highest_quartile_electricity_price_today
        id: "low_price"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'high_price' }}"
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.heatpump_cooling
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'low_price' }}"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.heatpump_cooling
        # default: []

  - alias: "[home|climate] Heat Pump Heating Control based on Electricity Price"
    description: >
      Controls the heat pump heating power based on electricity price conditions.
      The heat pump turns on when the price is below a fixed threshold or the first quartile of today's prices.
      Turns off when the price condition is no longer met or when manually set to "Off".
    id: yaml_automation_home_climate_heatpump_heating_controL_based_on_electricity_price
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.nordpool_energy_price
      - platform: state
        entity_id: input_select.heatpump_price_control
      - platform: state
        entity_id: input_number.heatpump_fixed_price_threshold
      - platform: state
        entity_id: input_number.heatpump_target_correction
    condition: []
    action:
      - choose:
          # If control mode is Off, turn off heat pump
          - conditions:
              - condition: state
                entity_id: input_select.heatpump_price_control
                state: "Off"
            sequence:
              - service: number.set_value
                target:
                  entity_id: number.heatpump_heating_target_correction
                data:
                  value: -5

          # If control mode is Fixed Price and price is below threshold
          - conditions:
              - condition: state
                entity_id: input_select.heatpump_price_control
                state: "Fixed Price"
              - condition: template
                value_template: "{{ states('sensor.nordpool_energy_price') | float <= states('input_number.heatpump_fixed_price_threshold') | float }}"
            sequence:
              - service: number.set_value
                target:
                  entity_id: number.heatpump_heating_target_correction
                data:
                  value: "{{ states('input_number.heatpump_target_correction') | int }}"

          # If control mode is Quartile Price and price is below quartile sensor
          - conditions:
              - condition: state
                entity_id: input_select.heatpump_price_control
                state: "Quartile Price"
              - condition: template
                value_template: "{{ states('sensor.nordpool_energy_price') | float <= states('sensor.lowest_quartile_electricity_price_today') | float }}"
            sequence:
              - service: number.set_value
                target:
                  entity_id: number.heatpump_heating_target_correction
                data:
                  value: "{{ states('input_number.heatpump_target_correction') | int }}"

      # Default action (turn off if none of the conditions above were met)
        default:
          - service: number.set_value
            target:
              entity_id: number.heatpump_heating_target_correction
            data:
              value: -5


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:

########################
#    SHELL COMMANDS    #
########################
shell_command:
  # poll_alphahome_sensors: "python3 /config/python_scripts/gateway.py > /config/python_scripts/gateway.json"
