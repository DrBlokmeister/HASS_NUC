homeassistant:
  customize:
    automation.auto_clean_litterbox_when_not_home_check_every_10_min:
      icon: mdi:robot-vacuum
    automation.auto_clean_whole_house_when_not_home_check_every_10_min:
      icon: mdi:robot-vacuum
    automation.notification_when_consuela_is_done_cleaning:
      icon: mdi:robot-vacuum
    automation.turn_input_boolean_vacuumed_today_off:
      icon: mdi:robot-vacuum
    automation.drive_vacuum_to_trash_bin:
      icon: mdi:robot-vacuum
  customize_glob:
    "script.vacuum_*":
      icon: mdi:robot-vacuum

input_number:

camera:
  - platform: xiaomi_cloud_map_extractor
    name: "Argus Map"
    host: !secret argus_IP
    token: !secret argus_token
    username: !secret xiaomi_cloud_user
    password: !secret xiaomi_cloud_pass
    draw: ['all']
    scan_interval: 36000 # 10 hours to see if this works
    attributes:
      - calibration_points
    map_transformation:
      scale: 2
      rotate: 90
      trim:
        top: 20
        bottom: 22
        left: 33
        right: 28
    colors:
      color_path: [10, 10, 10]
  - platform: xiaomi_cloud_map_extractor
    name: "Alfred Map"
    host: !secret alfred_IP
    token: !secret alfred_token
    username: !secret xiaomi_cloud_user
    password: !secret xiaomi_cloud_pass
    draw: ['all']
    scan_interval: 36000 # 10 hours to see if this works
    attributes:
      - calibration_points
    map_transformation:
      scale: 2
      rotate: 0
      trim:
        top: 30
        bottom: 8
        left: 5
        right: 15
    colors:
      color_path: [10, 10, 10]

utility_meter:
  moeke_area_cleaned_today:
    name: Moeke Area Cleaned Today
    source: sensor.moeke_cleaned_area
    cycle: daily
    offset:
      hours: 3
  argus_area_cleaned_today:
    name: Argus Area Cleaned Today
    source: sensor.argus_current_clean_area
    cycle: daily
    offset:
      hours: 3
    periodically_resetting: true
  alfred_area_cleaned_today:
    name: Alfred Area Cleaned Today
    source: sensor.alfred_current_clean_area
    cycle: daily
    offset:
      hours: 3
    periodically_resetting: true

#################
#    SENSORS    #
#################
sensor:
  - platform: template
    sensors:
##### BATTERY ESTIMATIONS #####
      alfred_battery:
        friendly_name: "Alfred Battery"
        unit_of_measurement: "%"
        device_class: "battery"
        #icon: mdi:battery
        value_template: "{{ state_attr('vacuum.alfred', 'battery_level') }}"
        availability_template: "{{ states('vacuum.alfred') not in ['None', 'Unavailable', 'unknown', None] }}"
      argus_battery:
        friendly_name: "Argus Battery"
        unit_of_measurement: "%"
        device_class: "battery"
        #icon: mdi:battery
        value_template: "{{ state_attr('vacuum.argus', 'battery_level') }}"
        availability_template: "{{ states('vacuum.argus') not in ['None', 'Unavailable', 'unknown', None] }}"

##### POWER ESTIMATION #####
      moeke_power_estimate:
        value_template: >-
          {% if is_state('vacuum.moeke', 'docked') and states('sensor.moeke_battery_level')|int < 100 and is_state('sensor.moeke_self_wash_base_status', 'drying') %}
            60
          {% elif is_state('vacuum.moeke', 'docked') and states('sensor.moeke_battery_level')|int < 100 and not is_state('sensor.moeke_self_wash_base_status', 'drying') %}
            20
          {% elif is_state('vacuum.moeke', 'docked') and states('sensor.moeke_battery_level')|int == 100 and is_state('sensor.moeke_self_wash_base_status', 'drying') %}
            50
          {% elif is_state('vacuum.moeke', 'docked') %}
            3
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        device_class: 'power'
        availability_template: "{{ states('vacuum.moeke') not in ['unavailable', 'unknown', 'none', None, 'None'] }}"
      argus_power_estimate:
        value_template: >-
          {% if states.vacuum.argus == None or states.vacuum.argus.state in ['unknown', 'unavailable', None] %}
            0
          {% elif is_state('vacuum.argus', 'docked') and state_attr('vacuum.argus', 'battery_level')|int < 100 %}
            20
          {% elif is_state('vacuum.argus', 'docked') and state_attr('vacuum.alfred', 'battery_level')|int == 100 %}
            3
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        device_class: 'power'
        availability_template: "{{ states('vacuum.argus') not in ['unavailable', 'unknown', 'none', None, 'None'] }}"
      alfred_power_estimate:
        value_template: >-
          {% if states.vacuum.alfred == None or states.vacuum.alfred.state in ['unknown', 'unavailable', None] %}
            0
          {% elif is_state('vacuum.alfred', 'docked') and state_attr('vacuum.alfred', 'battery_level')|int < 100 %}
            20
          {% elif is_state('vacuum.alfred', 'docked') and state_attr('vacuum.alfred', 'battery_level')|int == 100 %}
            3
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        device_class: 'power'
        availability_template: "{{ states('vacuum.alfred') not in ['unavailable', 'unknown', 'none', None, 'None'] }}"

  - platform: min_max
    name: Vacuums Power Estimate
    type: sum
    round_digits: 0
    entity_ids:
      - sensor.moeke_power_estimate
      - sensor.argus_power_estimate
      - sensor.alfred_power_estimate

##### ENERGY ESTIMATION #####
  - platform: integration
    source: sensor.moeke_power_estimate
    name: Moeke Energy
    unique_id: integration_moeke_energy
    unit_time: h
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.argus_power_estimate
    name: Argus Energy
    unique_id: integration_argus_energy
    unit_time: h
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.alfred_power_estimate
    name: Alfred Energy
    unique_id: integration_alfred_energy
    unit_time: h
    unit_prefix: k
    method: left
    round: 2

  - platform: min_max
    name: Vacuums Energy Estimate
    type: sum
    round_digits: 2
    entity_ids:
      - sensor.moeke_energy
      - sensor.argus_energy
      - sensor.alfred_energy
########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      tamara_or_sander_downstairs:
        value_template: "{{ is_state_attr('device_tracker.tamaraphone_unifi', 'ap_mac', 'd0:21:f9:64:06:39') or is_state_attr('device_tracker.blokmeisters21u_unifi', 'ap_mac', 'd0:21:f9:64:06:39') }}"
        availability_template: "{{ not is_state('device_tracker.tamaraphone_unifi', 'unavailable') or not is_state('device_tracker.blokmeisters21u_unifi', 'unavailable') }}"
##################
#    SWITCHES    #
##################
switch:

########################
#    INPUT BOOLEANS    #
########################
input_boolean:

##################
#    COUNTERS    #
##################
counter:

#####################
#    AUTOMATIONS    #
#####################
automation:
#Auto clean whole house when I'm not home on mon, wed, fri
  - alias: '[home|vacuum]scheduled_cleanup'
    id: home_vacuum_scheduled_cleanup
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.house_occupied
        to: 'off'
        # for: 00:10:00
      - platform: time
        at: '07:00:00'
    condition:
      - condition: time
        after: '7:00:00'
        before: '22:00:00'
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'off'
    action:
      - if:
          - condition: numeric_state
            entity_id: sensor.alfred_area_cleaned_today
            below: 20
        then:
          - service: vacuum.set_fan_speed
            entity_id: vacuum.alfred
            continue_on_error: true
            data:
              fan_speed: Medium
          - service: vacuum.start
            entity_id: vacuum.alfred
            continue_on_error: true
      - if:
          - condition: numeric_state
            entity_id: sensor.argus_area_cleaned_today
            below: 20
        then:
          - service: vacuum.set_fan_speed
            entity_id: vacuum.argus
            continue_on_error: true
            data:
              fan_speed: Medium
          - service: vacuum.start
            entity_id: vacuum.argus
            continue_on_error: true
      - if:
          - condition: numeric_state
            entity_id: sensor.moeke_area_cleaned_today
            below: 20
        then:
          - service: vacuum.set_fan_speed
            entity_id: vacuum.moeke
            continue_on_error: true
            data:
              fan_speed: Strong
          - service: select.select_option
            continue_on_error: true
            target:
              entity_id: select.moeke_cleaning_mode
            data:
              option: >
                  {% if
                    is_state('sensor.moeke_error', 'the_dirty_water_tank_is_full_or_not_installed') or
                    not is_state('sensor.moeke_low_water_warning', 'no_warning') or
                    is_state('binary_sensor.moeke_reservoir_leak_sensor', 'off')
                  %}
                    sweeping
                  {% else %}
                    sweeping_and_mopping
                  {% endif %}
              #option: "sweeping_and_mopping"
              #option: "sweeping"
          - delay:
              seconds: 3
          - service: vacuum.start
            continue_on_error: true
            entity_id: vacuum.moeke
      - delay:
          seconds: 10
      - if:
          - condition: state
            entity_id:
              - vacuum.moeke
              - vacuum.argus
              - vacuum.alfred
            match: any
            state: 'cleaning'
        then:
          - service: notify.mobile_app_blokmeisterp9pro
            data:
              message: "Started scheduled cleanup"
              title: "Home Assistant - Vacuum"
              data:
                group: info
                tag: vacuum
                icon_url: local/icons/robot-vacuum.png
                timeout: 1800

  - alias: '[home|vacuum]backup cleanup' #If we stay home until 15:00, be more agressive in trying to find a cleaning slot
    id: home_vacuum_backup_cleanup
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.tamara_or_sander_downstairs
        to: 'off'
        for:
          minutes: 15
      - platform: time
        at: '15:00:00'
    condition:
      - condition: time
        after: '15:00:00'
        before: '22:00:00'
      - condition: numeric_state
        entity_id: sensor.moeke_area_cleaned_today
        below: 20
      - condition: state
        entity_id: binary_sensor.tamara_or_sander_downstairs
        state: 'off'
        for:
          minutes: 15
    action:
      - service: vacuum.set_fan_speed
        entity_id: vacuum.moeke
        data:
          fan_speed: Strong
      - service: select.select_option
        target:
          entity_id: select.moeke_cleaning_mode
        data:
          option: >
              {% if
                is_state('sensor.moeke_error', 'the_dirty_water_tank_is_full_or_not_installed') or
                not is_state('sensor.moeke_low_water_warning', 'no_warning') or
                is_state('binary_sensor.moeke_reservoir_leak_sensor', 'off')
              %}
                sweeping
              {% else %}
                sweeping_and_mopping
              {% endif %}
          #option: "sweeping_and_mopping"
          #option: "sweeping"
      - delay:
          seconds: 2
      - service: vacuum.start
        entity_id: vacuum.moeke

  - alias: '[home|vacuum] Button control moeke'
    id: home_vacuum_button_control_moeke
    mode: restart
    trigger:
      # - platform: event
      #   event_type: deconz_event
      #   event_data:
      #     id: smart_switch
      - platform: event
        event_type: deconz_event
        event_data:
          id: moeke_switch
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1003 }}" #long press release
              - condition: template
                value_template: "{{ is_state('vacuum.moeke', 'docked') }}"
            sequence:
              - service: button.press
                target:
                  entity_id: button.moeke_clear_warning
              - service: persistent_notification.dismiss
                data:
                  notification_id: "NOTIFICATION_ID_WARNING"
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1002 }}" #single
              - condition: template
                value_template: "{{ not is_state('vacuum.moeke', 'cleaning') }}"
            sequence:
              - service: vacuum.set_fan_speed
                entity_id: vacuum.moeke
                data:
                  fan_speed: Strong
              - service: select.select_option
                target:
                  entity_id: select.moeke_cleaning_mode
                data:
                  option: >
                      {% if
                        is_state('sensor.moeke_error', 'the_dirty_water_tank_is_full_or_not_installed') or
                        not is_state('sensor.moeke_low_water_warning', 'no_warning') or
                        is_state('binary_sensor.moeke_reservoir_leak_sensor', 'off')
                      %}
                        sweeping
                      {% else %}
                        sweeping_and_mopping
                      {% endif %}
                  #option: "sweeping_and_mopping"
                  #option: "sweeping"
              - delay:
                  seconds: 2
              - service: vacuum.start
                entity_id: vacuum.moeke
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1002 }}" #single
              - condition: state
                entity_id: vacuum.moeke
                state: cleaning
            sequence:
              - service: vacuum.pause
                entity_id: vacuum.moeke
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1004 }}" #double
              - condition: template
                value_template: "{{ not is_state('vacuum.moeke', 'docked') }}"
            sequence:
              - service: vacuum.return_to_base
                entity_id: vacuum.moeke

########## NOTIFICATIONS ##########
  - alias: '[home|vacuum]Notify Phone if Vacuum is in Error'
    id: home_vacuum_notify_phone_if_vacuum_is_in_error
    mode: parallel
    trigger:
      - platform: state
        entity_id: vacuum.argus
        to: "error"
        id: "Argus"
      - platform: state
        entity_id: vacuum.alfred
        to: "error"
        id: "Alfred"
      - platform: template
        value_template: "{{ not (states('sensor.moeke_error') in ['no_error', 'clean_mop_pad', 'unavailable']) and (states('vacuum.moeke') in ['docked', 'paused', 'unavailable']) }}"
        id: "Moeke"
    action:
      - variables:
          vacuumentityid: "{{ trigger.entity_id }}"
          vacuumentityname: "{{ 'vacuum.moeke' if trigger.id == 'Moeke' else trigger.entity_id }}"
          errordescription: "{{ states('sensor.moeke_error') if trigger.id == 'Moeke' else 'Error' }}"
      - service: homeassistant.update_entity
        target:
          entity_id: "camera.{{ vacuumentityname.split('.')[1] }}_map"
      - delay:
          minutes: 1
      - service: camera.snapshot
        continue_on_error: true
        data:
          entity_id: "camera.{{ vacuumentityname.split('.')[1] }}_map"
          filename: "/config/www/tmp/snapshot_vacuum_error.jpg"
      - delay:
          seconds: 5
      - service: notify.mobile_app_blokmeisterp9pro
        continue_on_error: true
        data:
          title: "Error with {{ trigger.id }}"
          message: "Vacuum {{ trigger.id }} has an error{% if trigger.id == 'Moeke' %} with description '{{ errordescription }}'.{% else %}.{% endif %}"
          data:
            group: vacuum
            tag: vacuumerror
            icon_url: "/local/icons/robot-vacuum.png"
            image: "/local/tmp/snapshot_vacuum_error.jpg"
      - service: scene.create
        data:
          scene_id: "atmoorb_bulbs_before"
          snapshot_entities:
            - light.atmoorb_left
            - light.atmoorb_right
      - service: light.turn_on
        target:
          entity_id:
            - light.atmoorb_left
            - light.atmoorb_right
        data:
          rgb_color: [255, 0, 0]
          effect: "Fast Pulse"
      - wait_template: >-
          {% if trigger.id == 'Moeke' %}
            {{ states('sensor.moeke_error') in ['no_error', 'clean_mop_pad'] }}
          {% else %}
            {{ not is_state(vacuumentityid, 'error') and not is_state(vacuumentityid, 'paused') }}
          {% endif %}
      - service: scene.turn_on
        data:
          entity_id: "scene.atmoorb_bulbs_before"
          transition: 1
      - service: notify.mobile_app_blokmeisterp9pro
        data:
          message: "clear_notification"
          data:
            tag: "vacuumerror"

  - alias: '[home|vacuum]Notify if Moeke Clean Water Reservoir is Empty'
    id: home_vacuum_notify_if_moeke_clean_water_reservoir_is_empty
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.moeke_low_water_warning
        not_to:
          - "No warning"
          - no_warning
          - unavailable
        for:
          minutes: 5
      - platform: state
        entity_id: binary_sensor.moeke_reservoir_leak_sensor
        to: 'off'
        for:
          minutes: 5
    action:
      - service: notify.mobile_app_blokmeisterp9pro
        continue_on_error: true
        data:
          title: "Moeke water reservoir empty"
          message: "Please refill Moeke reservoir."
          data:
            group: vacuum
            tag: vacuumerror
            icon_url: local/icons/robot-vacuum.png
      - service: scene.create
        data:
          scene_id: atmoorb_right_bulb_before
          snapshot_entities:
            - light.atmoorb_right
      - service: light.turn_on
        target:
          entity_id:
            - light.atmoorb_right
        data:
          rgb_color: [70,70,255]
          effect: Fast Pulse
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.moeke_reservoir_leak_sensor
            to: 'on'
            for:
              seconds: 30
          - platform: state
            entity_id: sensor.moeke_low_water_warning
            to:
              - "No warning"
              - no_warning
            for:
              seconds: 30
      - service: button.press
        target:
          entity_id: button.moeke_clear_warning
      - service: scene.turn_on
        data:
          entity_id: scene.atmoorb_right_bulb_before
          transition: 1
      - service: notify.mobile_app_blokmeisterp9pro
        data:
          message: "clear_notification"
          data:
            tag: vacuumerror

  - alias: "[home|vacuum] Update Argus Map When Running"
    description: Update Argus Map every 5 minutes when Argus vacuum is running
    mode: restart
    trigger:
      - platform: state
        entity_id: vacuum.argus
        to: 'cleaning'
        id: vacuum_cleaning
      - platform: state
        entity_id: vacuum.argus
        to: 'error'
        id: vacuum_error
    condition: []
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'vacuum_cleaning' }}"
            sequence:
              - alias: "Update Argus map loop"
                repeat:
                  while:
                    - condition: state
                      entity_id: vacuum.argus
                      state: 'cleaning'
                  sequence:
                    - service: homeassistant.update_entity
                      target:
                        entity_id: camera.argus_map
                    - delay:
                        minutes: 5
              - service: homeassistant.update_entity
                target:
                  entity_id: camera.argus_map
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'vacuum_error' }}"
            sequence:
              - delay:
                  minutes: 1
              - service: homeassistant.update_entity
                target:
                  entity_id: camera.argus_map

  - alias: "[home|vacuum] Update Alfred Map When Running"
    description: Update Alfred Map every 5 minutes when Alfred vacuum is running
    mode: restart
    trigger:
      - platform: state
        entity_id: vacuum.alfred
        to: 'cleaning'
        id: vacuum_cleaning
      - platform: state
        entity_id: vacuum.alfred
        to: 'error'
        id: vacuum_error
    condition: []
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'vacuum_cleaning' }}"
            sequence:
              - alias: "Start updating Alfred map"
                repeat:
                  while:
                    - condition: state
                      entity_id: vacuum.alfred
                      state: 'cleaning'
                  sequence:
                    - service: homeassistant.update_entity
                      target:
                        entity_id: camera.alfred_map
                    - delay:
                        minutes: 5
              - service: homeassistant.update_entity
                target:
                  entity_id: camera.alfred_map
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'vacuum_error' }}"
            sequence:
              - delay:
                  minutes: 1
              - service: homeassistant.update_entity
                target:
                  entity_id: camera.alfred_map

  - alias: "[home|vacuum] Reset Utility Meter on Sudden Area Jump"
    id: home_vacuum_reset_utility_meter_on_sudden_area_jump
    description: Reset the utility meter if there's an abnormal sudden increase in cleaned area
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.moeke_area_cleaned_today
    condition:
      - condition: template
        value_template: >-
          {% set old = trigger.from_state.state | float(0) %}
          {% set new = trigger.to_state.state | float(0) %}
          {{ (new - old) > 10 }}
      - condition: template
        value_template: "{{ not is_state('vacuum.moeke', 'cleaning') }}"
      - condition: state
        entity_id: vacuum.moeke
        state:
          - 'docked'
          - 'paused'
          - 'idle'
    action:
      - service: utility_meter.calibrate
        target:
          entity_id: sensor.moeke_area_cleaned_today
        data:
          value: "0"
      - service: system_log.write
        data:
          message: >-
            Reset moeke_area_cleaned_today due to sudden jump from
            {{ trigger.from_state.state }} to {{ trigger.to_state.state }} m²
          level: info

################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:
  vacuum_automations:
    name: "Vacuum Automations Group"
    entities:
      - automation.home_vacuum_scheduled_cleanup
      - automation.home_vacuum_backup_cleanup
      # - automation.home_vacuum_drive_alfred_to_hallway_when_dust_bin_is_full
      # - automation.home_vacuum_drive_argus_to_hallway_when_dust_bin_is_full
      # - automation.home_vacuum_drive_consuela_to_hallway_when_dust_bin_is_full
      # - automation.home_vacuum_reset_area_cleaned_input_number
#################
#    SCRIPTS    #
#################
script:
  vacuum_around_litterbox_twice:
    alias: "Clean around litterbox"
    sequence:
      - service: vacuum.set_fan_speed
        entity_id: vacuum.moeke
        data:
          fan_speed: Strong
      - service: select.select_option
        target:
          entity_id: select.moeke_cleaning_mode
        data:
          option: "sweeping"
      - service: dreame_vacuum.vacuum_clean_zone
        data:
          entity_id: vacuum.moeke
          repeats: 2
          zone: [[-8593,1877,-6279,3078]]
      - service: select.select_option
        target:
          entity_id: select.moeke_cleaning_mode
        data:
          option: >
              {% if
                is_state('sensor.moeke_error', 'the_dirty_water_tank_is_full_or_not_installed') or
                not is_state('sensor.moeke_low_water_warning', 'no_warning') or
                is_state('binary_sensor.moeke_reservoir_leak_sensor', 'off')
              %}
                sweeping
              {% else %}
                sweeping_and_mopping
              {% endif %}
          #option: "sweeping_and_mopping"
  vacuum_entry_twice:
    alias: "Clean Entry"
    sequence:
      - service: vacuum.set_fan_speed
        entity_id: vacuum.moeke
        data:
          fan_speed: Strong
      - service: select.select_option
        target:
          entity_id: select.moeke_cleaning_mode
        data:
          option: "sweeping"
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          entity_id: vacuum.argus
          repeats: 2
          zone: [[-8593,1866,-4718,3163]]
  vacuum_kitchen_twice:
    alias: "Clean kitchen"
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          entity_id: vacuum.moeke
          repeats: 2
          zone: [[-7781,-464,-5148,1452]]
  vacuum_kitchen_around_counter_twice:
    alias: "Clean Kitchen Around Counter"
    sequence:
      - service: dreame_vacuum.vacuum_clean_zone
        data:
          entity_id: vacuum.moeke
          repeats: 2
          zone: [[-7742,-441,-6036,1379]]
  vacuum_study_twice:
    alias: "Clean study"
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          entity_id: vacuum.alfred
          repeats: 2
          zone: [[24672,21043,27477,26937]]
  vacuum_guestroom_twice:
    alias: "Clean Guest Room"
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          entity_id: vacuum.alfred
          repeats: 2
          zone: [[24672,26937,27651,30439]]
  vacuum_tamarasroom_twice:
    alias: "Clean Tamara's Room"
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          entity_id: vacuum.alfred
          repeats: 2
          zone: [[27563,21239,29912,25220]]
  vacuum_washroom_twice:
    alias: "Clean Wash Room"
    sequence:
      - service: xiaomi_miio.vacuum_clean_zone
        data:
          entity_id: vacuum.alfred
          repeats: 2
          zone: [[27565,28133,29848,30439]]
  # vacuum_bedroom_twice:
  #   alias: "Clean bedroom"
  #   sequence:
  #   - service: xiaomi_miio.vacuum_clean_zone
  #     data:
  #       entity_id: vacuum.consuela
  #       repeats: 2
  #       zone: [[26952,24836,30911,30071]]
  # vacuum_bathroom_twice:
  #   alias: "Clean bathroom"
  #   sequence:
  #   - service: xiaomi_miio.vacuum_clean_zone
  #     data:
  #       entity_id: vacuum.consuela
  #       repeats: 2
  #       zone: [[21388,27120,23885,30072]]
  vacuum_livingroom_twice:
    alias: "Clean Living Room"
    sequence:
    - service: xiaomi_miio.vacuum_clean_zone
      data:
        entity_id: vacuum.argus
        repeats: 2
        zone: [[23482,25044,29387,30204]]

  start_all_vacuums:
    alias: "Start All Vacuums"
    sequence:
      - parallel:
          - sequence:
              - service: select.select_option
                target:
                  entity_id: select.moeke_cleaning_mode
                data:
                  option: "sweeping_and_mopping"
                  #option: "sweeping"
              - delay:
                  seconds: 2
              - service: vacuum.start
                target:
                  entity_id: vacuum.moeke
          - service: vacuum.start
            target:
              entity_id: vacuum.argus
          - service: vacuum.start
            target:
              entity_id: vacuum.alfred
