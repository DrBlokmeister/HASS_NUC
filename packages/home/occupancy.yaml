homeassistant:
  customize: {}


template:
  - trigger:
      - platform: state
        entity_id:
          - binary_sensor.bedroom_motion_1
          - binary_sensor.entry_motion_1
          - binary_sensor.entry_motion_2
          - binary_sensor.hallway_1st_floor_motion_1
          - binary_sensor.hallway_1st_floor_motion_2
          - binary_sensor.stairs_lower_motion_1
          - binary_sensor.hallway_2nd_floor_motion_1
          - binary_sensor.hallway_2nd_floor_motion_2
          - binary_sensor.stairs_upper_motion_1
          - binary_sensor.livingroom_motion_1
          - binary_sensor.livingroom_motion_2
          - binary_sensor.livingroom_motion_3
          - binary_sensor.kitchen_motion_1
          - binary_sensor.kitchen_motion_2
          - binary_sensor.study_motion_1
          - binary_sensor.study_motion_2
          - binary_sensor.bathroom_motion_1
          - binary_sensor.babyroom_motion_1
          - binary_sensor.babycam_motion
          - binary_sensor.outside_motion_1
        to: 'on'
        id: motion
    sensor:
      - name: "Last Triggered Motion Sensor"
        unique_id: yaml_template_sensor_last_triggered_motion_sensor
        state: "{{ trigger.entity_id }}"
        attributes:
          friendly_name: "{{ state_attr(trigger.entity_id, 'friendly_name') if state_attr(trigger.entity_id, 'friendly_name') else trigger.entity_id }}"
          time: "{{ now().strftime('%d-%m-%Y %H:%M:%S') }}"
      - name: "Total Motion Events"
        unique_id: yaml_template_sensor_total_motion_events
        unit_of_measurement: "events"
        state: >
          {{ (states('sensor.total_motion_events') | int(0)) + 1 }}

#################
#    SENSORS    #
#################
sensor:
  - platform: template
    sensors:
      guest_wifi_clients:
        friendly_name: "Guest WiFi Clients"
        unique_id: yaml_template_sensor_guest_wifi_clients
        icon_template: mdi:account-group
        unit_of_measurement: "clients"
        value_template: >-
          {% set ns = namespace(counter=0) %}
          {% for entity in states.device_tracker %}
            {% if 'essid' in entity['attributes'].keys() %}
              {% if 'BlokmeisterWIFI_Guest' in entity['attributes'].values() %}
                {%- set ns.counter = ns.counter + 1 %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {{ ns.counter }}
        attribute_templates:
          clients: >-
            {% set clients = namespace(list=[]) %}
            {%- for entity in states.device_tracker -%}
              {%- set attrs = entity.attributes -%}
              {%- if 'essid' in attrs and attrs.essid == 'BlokmeisterWIFI_Guest' -%}
                {%- set name = attrs.friendly_name if attrs.friendly_name is defined else entity.entity_id -%}
                {%- set clients.list = clients.list + [name] -%}
              {%- endif -%}
            {%- endfor -%}
            {{ clients.list | join(', ') if clients.list else 'No clients' }}

  # - platform: statistics
  #   name: "Motion Events per Minute"
  #   entity_id: sensor.total_motion_events
  #   state_characteristic: count
  #   max_age:
  #     minutes: 5
  - platform: derivative
    name: "Motion Events per Minute"
    source: sensor.total_motion_events
    unit_time: min
    time_window: "00:05:00"

########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      house_occupied:
        friendly_name: "House occupied"
        unique_id: yaml_template_binary_sensor_house_occupied
        icon_template: mdi:home
        device_class: occupancy
        value_template: >-
          {{
            is_state('person.sander_blok','home') or
            is_state('person.tamara','home') or
            is_state('device_tracker.phone_toos', 'home') or
            is_state('device_tracker.phone_eddy', 'home') or
            is_state('device_tracker.a55_van_ben', 'home') or
            is_state('device_tracker.a55_van_heidi', 'home') or
            states('sensor.guest_wifi_clients')|int(0) > 0
          }}
        availability_template: >-
          {{
            states('person.sander_blok') not in ['unavailable', 'unknown', 'none', None] or
            states('person.tamara') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.phone_toos') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.phone_eddy') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.a55_van_ben') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.a55_van_heidi') not in ['unavailable', 'unknown', 'none', None] or
            states('sensor.guest_wifi_clients') | is_number()
          }}
      sander_home_alone:
        friendly_name: "Sander home alone"
        unique_id: yaml_template_binary_sensor_sander_home_alone
        icon_template: mdi:home
        device_class: occupancy
        value_template: >-
          {{
            is_state('person.sander_blok','home') and
            not is_state('person.tamara','home') and
            not is_state('device_tracker.phone_toos', 'home') and
            not is_state('device_tracker.phone_eddy', 'home') and
            not is_state('device_tracker.a55_van_ben', 'home') and
            not is_state('device_tracker.a55_van_heidi', 'home') and
            states('sensor.guest_wifi_clients')|int(0) == 0
          }}
        availability_template: >-
          {{
            states('person.sander_blok') not in ['unavailable', 'unknown', 'none', None] or
            states('person.tamara') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.phone_toos') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.phone_eddy') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.a55_van_ben') not in ['unavailable', 'unknown', 'none', None] or
            states('device_tracker.a55_van_heidi') not in ['unavailable', 'unknown', 'none', None] or
            states('sensor.guest_wifi_clients') | is_number()
          }}
########################
#    INPUT BOOLEANS    #
########################
input_boolean:
  enable_tamara_mode:
    name: "Enable Tamara mode"
    icon: mdi:person
  tamara_mode:
    name: "Tamara Mode"
    icon: mdi:person

##################
#    SWITCHES    #
##################
switch:
  - platform: template
    switches:
      tamara_mode:
        friendly_name: "Tamara mode"
        unique_id: yaml_template_switch_tamara_mode
        icon_template: mdi:account-heart
        value_template: "{{ is_state('input_boolean.tamara_mode', 'on') }}"
        turn_on:
          service: input_boolean.turn_on
          entity_id: input_boolean.tamara_mode
        turn_off:
          service: input_boolean.turn_off
          entity_id: input_boolean.tamara_mode


#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[occupancy|lights]execute_tamara_mode'
    mode: restart
    trigger:
      - platform: state
        entity_id: input_boolean.tamara_mode
    condition:
      condition: state
      entity_id: input_boolean.enable_tamara_mode
      state: 'on'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.tamara_mode
                state: "on"
            sequence:
              - service: automation.turn_off
                entity_id: group.all_lighting_automations
              - service: tts.cloud_say
                entity_id: media_player.living_room_speaker
                data:
                  message: "Tamara mode enabled. All motion-activated light automations have been turned off."
                  language: en-IE
          - conditions:
              - condition: state
                entity_id: input_boolean.tamara_mode
                state: "off"
            sequence:
              - service: automation.turn_on
                entity_id: group.all_lighting_automations
              - service: tts.cloud_say
                entity_id: media_player.living_room_speaker
                data:
                  message: "Tamara mode disabled. The house is now fully automated again!"
                  language: en-IE

  - alias: '[occupancy|sensors]Deconz Xiaomi Aqara Motion attributes fix'
    id: occupancy_sensors_deconz_xiaomi_aqara_motion_attributes_fix
    trigger:
      - platform: homeassistant
        event: start
    action:
      - delay:
          minutes: 1
      # set hacked motion sensor timout duration to 5 seconds
      - parallel:
          - service: deconz.configure
            data:
              entity: binary_sensor.bedroom_motion_1
              field: "/config"
              data: {"duration": 5}
          - delay:
              seconds: 1
          - service: deconz.configure
            data:
              entity: binary_sensor.study_motion_1
              field: "/config"
              data: {"duration": 5}
          - delay:
              seconds: 1
          - service: deconz.configure
            data:
              entity: binary_sensor.livingroom_motion_3
              field: "/config"
              data: {"duration": 5}
          - delay:
              seconds: 1
          - service: deconz.configure
            data:
              entity: binary_sensor.livingroom_motion_2
              field: "/config"
              data: {"duration": 5}
          - delay:
              seconds: 1
          - service: deconz.configure
            data:
              entity: binary_sensor.kitchen_motion_1
              field: "/config"
              data: {"duration": 5}
          - service: deconz.configure
            data:
              entity: binary_sensor.hallway_1st_floor_motion_1
              field: "/config"
              data: {"duration": 60}
          - service: deconz.configure
            data:
              entity: binary_sensor.hallway_1st_floor_motion_2
              field: "/config"
              data: {"duration": 60}
          - service: deconz.configure
            data:
              entity: binary_sensor.hallway_2nd_floor_motion_1
              field: "/config"
              data: {"duration": 5}
          - service: deconz.configure
            data:
              entity: binary_sensor.hallway_2nd_floor_motion_2
              field: "/config"
              data: {"duration": 5}
          - delay:
              seconds: 1
          # Set study chair vibration sensitivity to 1 (highest)
          - service: deconz.configure
            data:
              entity: binary_sensor.vibration_sensor_desk_chair
              data: {"sensitivity": 3}
              field: "/config"
          - service: deconz.configure
            data:
              entity: binary_sensor.vibration_sensor_new_desk_chair
              data: {"sensitivity": 3}
              field: "/config"

################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:
