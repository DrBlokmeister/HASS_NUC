homeassistant:
  customize_glob:
    "switch.blitzwolf_*":
      icon: mdi:power-socket-eu
    "sensor.blitzwolf_*_energy_power":
      icon: mdi:lightning-bolt
    "sensor.blitzwolf_*_energy_total":
      icon: mdi:lightning-bolt
    "sensor.blitzwolf_*_energy_today":
      icon: mdi:lightning-bolt

  customize:

    sensor.waterverbruik_vandaag:
      icon: mdi:water
    sensor.water_consumption_per_hour:
      icon: mdi:water

utility_meter:
  hourly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: hourly
    unique_id: yaml_template_sensor_hourly_energy_use
    net_consumption: true
  daily_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: daily
    unique_id: yaml_template_sensor_daily_energy_use
    net_consumption: true
  weekly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: weekly
    unique_id: yaml_template_sensor_weekly_energy_use
    net_consumption: true
  monthly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: monthly
    unique_id: yaml_template_sensor_monthly_energy_use
    net_consumption: true
  yearly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: yearly
    unique_id: yaml_template_sensor_yearly_energy_use
    net_consumption: true
  
  hourly_water_use:
    source: sensor.water_meter_water_consumption
    delta_values: True
    cycle: hourly
    unique_id: yaml_template_sensor_hourly_water_use
  daily_water_use:
    source: sensor.water_meter_water_consumption
    delta_values: True
    cycle: daily
    unique_id: yaml_template_sensor_daily_water_use
  weekly_water_use:
    source: sensor.water_meter_water_consumption
    delta_values: True
    cycle: weekly
    unique_id: yaml_template_sensor_weekly_water_use
  monthly_water_use:
    source: sensor.water_meter_water_consumption
    delta_values: True
    cycle: monthly
    unique_id: yaml_template_sensor_monthly_water_use
  yearly_water_use:
    source: sensor.water_meter_water_consumption
    delta_values: True
    cycle: yearly
    unique_id: yaml_template_sensor_yearly_water_use

  #Warmtepomp monitor:
  heatpump_tapwater_hourly_energy_use:
    source: sensor.tapwater
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_tapwater_hourly_energy_use
  heatpump_tapwater_daily_energy_use:
    source: sensor.tapwater
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_tapwater_daily_energy_use
  heatpump_tapwater_weekly_energy_use:
    source: sensor.tapwater
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_tapwater_weekly_energy_use
  heatpump_tapwater_monthly_energy_use:
    source: sensor.tapwater
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_tapwater_monthly_energy_use
  heatpump_tapwater_yearly_energy_use:
    source: sensor.tapwater
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_tapwater_yearly_energy_use

  heatpump_verwarming_hourly_energy_use:
    source: sensor.verwarming
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_verwarming_hourly_energy_use
  heatpump_verwarming_daily_energy_use:
    source: sensor.verwarming
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_verwarming_daily_energy_use
  heatpump_verwarming_weekly_energy_use:
    source: sensor.verwarming
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_verwarming_weekly_energy_use
  heatpump_verwarming_monthly_energy_use:
    source: sensor.verwarming
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_verwarming_monthly_energy_use
  heatpump_verwarming_yearly_energy_use:
    source: sensor.verwarming
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_verwarming_yearly_energy_use

  heatpump_circulation_hourly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_circulation_hourly_energy_use
  heatpump_circulation_daily_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_circulation_daily_energy_use
  heatpump_circulation_weekly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_circulation_weekly_energy_use
  heatpump_circulation_monthly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_circulation_monthly_energy_use
  heatpump_circulation_yearly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_circulation_yearly_energy_use
#######################
#    INPUT NUMBERS    #
#######################
input_number:
  water_meter_daily_consumption:
    min: 0
    max: 2000000
    name: Daily Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_weekly_consumption:
    min: 0
    max: 2000000
    name: Weekly Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_monthly_consumption:
    min: 0
    max: 2000000
    name: Monthly Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_yearly_consumption:
    min: 0
    max: 2000000
    name: Yearly Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_total_consumption:
    min: 0
    max: 2000000
    name: Total Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water

#################
#    SENSORS    #
#################
sensor:
  - platform: integration
    source: sensor.water_meter_water_consumption
    unit_time: min
    
  - platform: template
    sensors:
      net_energy_usage:
        unit_of_measurement: 'kW'
        value_template: >-
          {{ states( 'sensor.electricity_meter_power_consumption' )|float(0) - states( 'sensor.electricity_meter_power_production' )|float(0) }}
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number and states('sensor.electricity_meter_power_production')|is_number }}"
      # total_power_blitzwolf:
      #   unit_of_measurement: 'W'
      #   value_template: >-
      #     {{
      #       (states( 'sensor.blitzwolf_electricblanket_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_computer_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_mediacenter_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_watercooker_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_router_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_3dprinter_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_washingmachine_energy_power' )|float(0)) |round(2)
      #     }}
      #   availability_template: >-
      #     {{
      #       states( 'sensor.blitzwolf_electricblanket_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_computer_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_mediacenter_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_watercooker_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_router_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_3dprinter_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_washingmachine_energy_power' )|is_number
      #     }}
      # total_blitzwolf_energy_today:
      #   unit_of_measurement: 'kWh'
      #   value_template: >-
      #     {{
      #       (
      #         states( 'sensor.blitzwolf_electricblanket_energy_today' )|float
      #         + states( 'sensor.blitzwolf_computer_energy_today' )|float
      #         + states( 'sensor.blitzwolf_mediacenter_energy_today' )|float
      #         + states( 'sensor.blitzwolf_watercooker_energy_today' )|float
      #         + states( 'sensor.blitzwolf_router_energy_today' )|float
      #         + states( 'sensor.blitzwolf_3dprinter_energy_today' )|float
      #         + states( 'sensor.blitzwolf_washingmachine_energy_today' )|float
      #       )|round(2)
      #     }}
      #   availability_template: >-
      #     {{
      #       states( 'sensor.blitzwolf_electricblanket_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_computer_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_mediacenter_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_watercooker_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_router_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_3dprinter_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_washingmachine_energy_today' )|is_number
      #     }}
      # electricblanket_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_electricblanket_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_electricblanket_energy_today')|is_number }}"
      # mediacenter_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_mediacenter_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_mediacenter_energy_today')|is_number }}"
      # watercooker_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_watercooker_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_watercooker_energy_today')|is_number }}"
      # computer_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_computer_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_computer_energy_today')|is_number }}"
      # coffeeplant_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_router_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_router_energy_today')|is_number }}"
      # ender3_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_3dprinter_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_3dprinter_energy_today')|is_number }}"
      # washingmachine_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_washingmachine_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_washingmachine_energy_today')|is_number }}"
  #     unknown_power:
  #       unit_of_measurement: 'W'
  #       value_template: "{{ ( states( 'sensor.home_power_consumption' )|float - states( 'sensor.total_power_blitzwolf' )|float - states( 'sensor.light_power_estimate' )|float )|round(2) }}"
  #       availability_template: "{{ states('sensor.home_power_consumption')|is_number and states('sensor.total_power_blitzwolf')|is_number and states('sensor.light_power_estimate')|is_number }}"
  # - platform: filter
  #   name: "filtered unknown power"
  #   entity_id: sensor.unknown_power
  #   filters:
  #     - filter: lowpass
  #       time_constant: 10
      electricity_meter_power_watt:
        value_template: "{{ states('sensor.electricity_meter_power_consumption') | float(0) * 1000 | float | round(2) }}"
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number }}"
      current_costs_per_hour:
        value_template: "{{ ( states('sensor.electricity_meter_power_consumption') | float(0) * ( 0.2221 | float) | float ) | round(2) }}"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number }}"
      electricity_meter_power_production_watt:
        value_template: "{{ states('sensor.electricity_meter_power_production') | float * 1000 }}"
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.electricity_meter_power_production')|is_number }}"
      total_power_consumption_watt:
        value_template: >-
          {% if states('sensor.pv_power')|is_number %}
            {{ (states('sensor.electricity_meter_power_consumption')|float - states('sensor.electricity_meter_power_production')|float + states('sensor.pv_power')|float/1000)*1000 }}
          {% else %}
            {{ (states('sensor.electricity_meter_power_consumption')|float - states('sensor.electricity_meter_power_production')|float)*1000 }}
          {% endif %}
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number and states('sensor.electricity_meter_power_production')|is_number }}"
      total_power_consumption_kilowatt:
        value_template: "{{ states('sensor.total_power_consumption_watt')|float/1000 }}"
        unit_of_measurement: "kW"
        availability_template: "{{ states('sensor.total_power_consumption_watt')|is_number }}"

      total_energy_consumption_kilowatt:
        value_template: "{{ states('sensor.electricity_meter_energy_consumption_tarif_1')|float(0) + states('sensor.electricity_meter_energy_consumption_tarif_2')|float(0) }}"
        unit_of_measurement: "kW"
        availability_template: "{{ states('sensor.electricity_meter_energy_consumption_tarif_1')|is_number and states('sensor.electricity_meter_energy_consumption_tarif_2')|is_number }}"

      known_power:
        friendly_name: "Known Power"
        unit_of_measurement: 'W'
        value_template: >-
          {{ expand('group.power_entities') |rejectattr('domain','eq','group')
                                            |rejectattr('state', 'in', ['unavailable', 'unknown', 'none'])|map(attribute='state')|map('float')|sum}}
      unknown_power:
        friendly_name: "Unknown Power"
        unit_of_measurement: 'W'
        value_template: "{{ states('sensor.total_power_consumption_watt')|float - states('sensor.known_power')|float }}"
        availability_template: "{{ states('sensor.total_power_consumption_watt')|is_number and states('sensor.known_power')|is_number }}"

  - platform: integration
    source: sensor.total_power_consumption_watt
    name: Total Energy Usage
    unique_id: integration_total_energy_usage
    unit_time: h
    unit_prefix: k
    round: 2
  - platform: integration
    source: sensor.total_energy_consumption_kilowatt
    name: Total Energy Consumption
    unit_time: h
    round: 2
  - platform: integration
    source: sensor.water_meter_current_water_consumption
    name: Total Water Usage
    unique_id: integration_total_water_usage
    unit_time: min
    round: 0

  - platform: derivative
    source: sensor.waterverbruik_vandaag
    name: Total Water Consumption
    unit_time: h
    time_window: "00:02:00"

  # - platform: template
  #   sensors:
  #     known_power:
  #       friendly_name: "Known Power"
  #       unit_of_measurement: 'W'
  #       value_template: >-
  #         {{ expand('group.power_entities') |rejectattr('domain','eq','group')
  #                                           |rejectattr('state', 'in', ['unavailable', 'unknown', 'none'])|map(attribute='state')|map('float')|sum}}

  # - platform: template
  #   sensors:
  #     unknown power:
  #       friendly_name: "Unknown Power"
  #       unit_of_measurement: 'W'
  #       value_template: "{{ states('sensor.total_power_consumption_watt')|float - states('sensor.known_power')|float }}"
  #       availability_template: "{{ states('sensor.total_power_consumption_watt')|is_number and states('sensor.known_power')|is_number }}"


  # - platform: template
  #   sensors:
  #     light_power_estimate: #I fitted power monitoring data to the power consumption using a trendline in Excel. Formula is 0.35*exp(brightness*0.0096)
  #       unit_of_measurement: 'W'
  #       value_template: >-
  #         {% set lights = [
  #           states.light.bedroom_1,
  #           states.light.bedroom_2,
  #           states.light.bedroom_3,
  #           states.light.tvarea_1,
  #           states.light.tvarea_2,
  #           states.light.tvarea_3,
  #           states.light.tvarea_4,
  #           states.light.tvarea_5,
  #           states.light.kitchen_1,
  #           states.light.kitchen_2,
  #           states.light.kitchen_3,
  #           states.light.study_1,
  #           states.light.study_2,
  #           states.light.study_3,
  #           states.light.plant_1,
  #           states.light.plant_2,
  #           states.light.entry_1
  #         ] %}
  #         {%- set ns = namespace(power = 0) -%}
  #         {%- set threshold = 100 -%}
  #         {%- for item in lights if (item.attributes.brightness is defined) -%}
  #           {%- set ns.power = ns.power + (0.35*2.72**(item.attributes['brightness']|round(1) * 0.0096))|round(2) -%}
  #         {%- endfor -%}
  #         {{ ns.power|round(1) }}


########################
#    BINARY SENSORS    #
########################
binary_sensor:

########################
#    INPUT BOOLEANS    #
########################
input_boolean:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: "Power state on HA start-up"
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "sonoffs/cmnd/state"
          payload: ""

# Example automations.yaml entry
  - id: 'sonoff_firmware_installed'
    alias: Sonoff Firmware Installed
    trigger:
    - event: start
      platform: homeassistant
    action:
    - data:
        payload: '2'
        topic: sonoffs/cmnd/status
      service: mqtt.publish
    initial_state: 'true'

# Example automations.yaml entry
  - alias: "Enable MQTT discovery for all devices"
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "cmnd/sonoffs/SetOption19"
          payload: "1"

  - alias: "[power|warning] Send message when power usage is too high and not at home"
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.unknown_power
        above: 1500
        # for:
        #   minutes: 1
      - platform: state
        entity_id: binary_sensor.house_occupied
        to: 'off'
    condition:
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.unknown_power
        above: 1500
        # for:
        #   minutes: 1
    action:
      - service: notify.mobile_app_blokmeisters21u
        data:
          title: "Warning: Power Usage!"
          message: "Unknown power is <b>{{ states( 'sensor.unknown_power' )}} W</b> for a total of <b>{{ states('sensor.home_power_consumption') }}</b>"
          data:
            group: notification
            tag: powerwarning
            clickAction: '/lovelace-dashboard/view/6' # action when clicking main notification
            ledColor: "orange"
            channel: warning

  - alias: "[power|watermeter] Save watermeter states to HA"
    trigger:
      - platform: state
        entity_id: sensor.water_meter_main_water_consumption
    condition:
      - "{{ ( now() - states('sensor.uptime_10')|as_datetime ).seconds > 60 }}"
    action:
      - service: input_number.set_value
        data:
          entity_id: input_number.water_meter_daily_consumption
          value: "{{ states('sensor.water_meter_daily_water_consumption')|int }}"
      - service: input_number.set_value
        data:
          entity_id: input_number.water_meter_weekly_consumption
          value: "{{ states('sensor.water_meter_weekly_water_consumption')|int }}"
      - service: input_number.set_value
        data:
          entity_id: input_number.water_meter_monthly_consumption
          value: "{{ states('sensor.water_meter_monthly_water_consumption')|int }}"
      - service: input_number.set_value
        data:
          entity_id: input_number.water_meter_yearly_consumption
          value: "{{ states('sensor.water_meter_yearly_water_consumption')|int }}"
      - service: input_number.set_value
        data:
          entity_id: input_number.water_meter_total_consumption
          value: "{{ states('sensor.water_meter_main_water_consumption')|int }}"


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:
  blitzwolf_router:
    entities:
      - switch.blitzwolf_router
      - sensor.blitzwolf_router_status
      - sensor.blitzwolf_router_energy_voltage
      - sensor.blitzwolf_router_energy_current
      - sensor.blitzwolf_router_energy_power
      - sensor.blitzwolf_router_energy_apparentpower
      - sensor.blitzwolf_router_energy_reactivepower
      - sensor.blitzwolf_router_energy_today
      - sensor.blitzwolf_router_energy_yesterday
      - sensor.blitzwolf_router_energy_total
      - sensor.blitzwolf_router_energy_totalstarttime
  blitzwolf_computer:
    entities:
      - switch.blitzwolf_computer
      - sensor.blitzwolf_computer_status
      - sensor.blitzwolf_computer_energy_voltage
      - sensor.blitzwolf_computer_energy_current
      - sensor.blitzwolf_computer_energy_power
      - sensor.blitzwolf_computer_energy_apparentpower
      - sensor.blitzwolf_computer_energy_reactivepower
      - sensor.blitzwolf_computer_energy_today
      - sensor.blitzwolf_computer_energy_yesterday
      - sensor.blitzwolf_computer_energy_total_2
      - sensor.blitzwolf_computer_energy_totalstarttime
  blitzwolf_electricblanket:
    entities:
      - switch.blitzwolf_electricblanket
      - sensor.blitzwolf_electricblanket_status
      - sensor.blitzwolf_electricblanket_energy_voltage
      - sensor.blitzwolf_electricblanket_energy_current
      - sensor.blitzwolf_electricblanket_energy_power
      - sensor.blitzwolf_electricblanket_energy_apparentpower
      - sensor.blitzwolf_electricblanket_energy_reactivepower
      - sensor.blitzwolf_electricblanket_energy_today
      - sensor.blitzwolf_electricblanket_energy_yesterday
      - sensor.blitzwolf_electricblanket_energy_total
      - sensor.blitzwolf_electricblanket_energy_totalstarttime
  blitzwolf_mediacenter:
    entities:
      - switch.blitzwolf_mediacenter
      - sensor.blitzwolf_mediacenter_status
      - sensor.blitzwolf_mediacenter_energy_voltage
      - sensor.blitzwolf_mediacenter_energy_current
      - sensor.blitzwolf_mediacenter_energy_power
      - sensor.blitzwolf_mediacenter_energy_apparentpower
      - sensor.blitzwolf_mediacenter_energy_reactivepower
      - sensor.blitzwolf_mediacenter_energy_today
      - sensor.blitzwolf_mediacenter_energy_yesterday
      - sensor.blitzwolf_mediacenter_energy_total
      - sensor.blitzwolf_mediacenter_energy_totalstarttime
  blitzwolf_watercooker:
    entities:
      - switch.blitzwolf_watercooker
      - sensor.blitzwolf_watercooker_status
      - sensor.blitzwolf_watercooker_energy_voltage
      - sensor.blitzwolf_watercooker_energy_current
      - sensor.blitzwolf_watercooker_energy_power
      - sensor.blitzwolf_watercooker_energy_apparentpower
      - sensor.blitzwolf_watercooker_energy_reactivepower
      - sensor.blitzwolf_watercooker_energy_today
      - sensor.blitzwolf_watercooker_energy_yesterday
      - sensor.blitzwolf_watercooker_energy_total
      - sensor.blitzwolf_watercooker_energy_totalstarttime
  blitzwolf_nuc:
    entities:
      - switch.blitzwolf_nuc
      - sensor.blitzwolf_nuc_status
      - sensor.blitzwolf_nuc_energy_voltage
      - sensor.blitzwolf_nuc_energy_current
      - sensor.blitzwolf_nuc_energy_power
      - sensor.blitzwolf_nuc_energy_apparentpower
      - sensor.blitzwolf_nuc_energy_reactivepower
      - sensor.blitzwolf_nuc_energy_today
      - sensor.blitzwolf_nuc_energy_yesterday
      - sensor.blitzwolf_nuc_energy_total
      - sensor.blitzwolf_nuc_energy_totalstarttime
  blitzwolf_ender3:
    entities:
      - switch.blitzwolf_3dprinter
      - sensor.blitzwolf_3dprinter_status
      - sensor.blitzwolf_3dprinter_energy_voltage
      - sensor.blitzwolf_3dprinter_energy_current
      - sensor.blitzwolf_3dprinter_energy_power
      - sensor.blitzwolf_3dprinter_energy_apparentpower
      - sensor.blitzwolf_3dprinter_energy_reactivepower
      - sensor.blitzwolf_3dprinter_energy_today
      - sensor.blitzwolf_3dprinter_energy_yesterday
      - sensor.blitzwolf_3dprinter_energy_total
      - sensor.blitzwolf_3dprinter_energy_totalstarttime
      - sensor.blitzwolf_3dprinter_energy_bl0940_temperature
  blitzwolf_washingmachine:
    entities:
      - switch.blitzwolf_washingmachine
      - sensor.blitzwolf_washingmachine_status
      - sensor.blitzwolf_washingmachine_energy_voltage
      - sensor.blitzwolf_washingmachine_energy_current
      - sensor.blitzwolf_washingmachine_energy_power
      - sensor.blitzwolf_washingmachine_energy_apparentpower
      - sensor.blitzwolf_washingmachine_energy_reactivepower
      - sensor.blitzwolf_washingmachine_energy_today
      - sensor.blitzwolf_washingmachine_energy_yesterday
      - sensor.blitzwolf_washingmachine_energy_total
      - sensor.blitzwolf_washingmachine_energy_totalstarttime
      - sensor.blitzwolf_washingmachine_energy_bl0940_temperature
  blitzwolf_plug1:
    entities:
      - switch.blitzwolf_nas
      - sensor.blitzwolf_nas_status
      - sensor.blitzwolf_nas_energy_voltage
      - sensor.blitzwolf_nas_energy_current
      - sensor.blitzwolf_nas_energy_power
      - sensor.blitzwolf_nas_energy_apparentpower
      - sensor.blitzwolf_nas_energy_reactivepower
      - sensor.blitzwolf_nas_energy_today
      - sensor.blitzwolf_nas_energy_yesterday
      - sensor.blitzwolf_nas_energy_total
      - sensor.blitzwolf_nas_energy_totalstarttime
      - sensor.blitzwolf_nas_energy_bl0940_temperature
  blitzwolf_ambilight:
    entities:
      - switch.blitzwolf_ambilight
      - sensor.blitzwolf_ambilight_status
      - sensor.blitzwolf_ambilight_energy_voltage
      - sensor.blitzwolf_ambilight_energy_current
      - sensor.blitzwolf_ambilight_energy_power
      - sensor.blitzwolf_ambilight_energy_apparentpower
      - sensor.blitzwolf_ambilight_energy_reactivepower
      - sensor.blitzwolf_ambilight_energy_today
      - sensor.blitzwolf_ambilight_energy_yesterday
      - sensor.blitzwolf_ambilight_energy_total
      - sensor.blitzwolf_ambilight_energy_totalstarttime
      - sensor.blitzwolf_plug2_energy_bl0940_temperature
  meter_readings:
    name: Meter readings
    entities:
      - sensor.timestamp_local
      - sensor.timestamp_utc
      - sensor.consumption_gas_m3
      - sensor.consumption_kwh_high
      - sensor.consumption_kwh_low
      - sensor.consumption_kw
      - sensor.tarifcode
      - sensor.record_is_processed
      - sensor.consumption_l1_w
      - sensor.l1_v
      - sensor.l1_a

  power_entities:
    name: Power Entities
    entities:
      - sensor.blitzwolf_10gb_switch_energy_power
      - sensor.blitzwolf_3dprinter_energy_power
      - sensor.blitzwolf_ambilight_amplifier_power
      - sensor.blitzwolf_computer_energy_reactivepower
      - sensor.blitzwolf_dishwasher_energy_power
      - sensor.blitzwolf_nas_energy_power
      - sensor.blitzwolf_nuc_energy_power
      - sensor.blitzwolf_poe_switch_energy_power
      - sensor.blitzwolf_router_energy_power
      - sensor.blitzwolf_washingmachine_energy_power
      - sensor.blitzwolf_watercooker_energy_power

#################
#    SCRIPTS    #
#################
script:
