homeassistant:
  customize_glob:
    "switch.blitzwolf_*":
      icon: mdi:power-socket-eu
    "sensor.blitzwolf_*_energy_power":
      icon: mdi:lightning-bolt
    "sensor.blitzwolf_*_energy_total":
      icon: mdi:lightning-bolt
    "sensor.blitzwolf_*_energy_today":
      icon: mdi:lightning-bolt

  customize:

    sensor.waterverbruik_vandaag:
      icon: mdi:water
    sensor.water_consumption_per_hour:
      icon: mdi:water

powercalc:

utility_meter:
  hourly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: hourly
    unique_id: yaml_template_sensor_hourly_energy_use
    net_consumption: true
  daily_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: daily
    unique_id: yaml_template_sensor_daily_energy_use
    net_consumption: true
  weekly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: weekly
    unique_id: yaml_template_sensor_weekly_energy_use
    net_consumption: true
  monthly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: monthly
    unique_id: yaml_template_sensor_monthly_energy_use
    net_consumption: true
  yearly_energy_use:
    source: sensor.total_energy_usage
    delta_values: False
    cycle: yearly
    unique_id: yaml_template_sensor_yearly_energy_use
    net_consumption: true

  daily_unknown_energy:
    source: sensor.unknown_energy
    delta_values: False
    cycle: daily
    unique_id: yaml_template_sensor_daily_unknown_energy
    net_consumption: true

  hourly_water_use:
    source: sensor.total_water
    delta_values: false
    cycle: hourly
    periodically_resetting: true
    unique_id: yaml_template_sensor_hourly_water_use
  daily_water_use:
    source: sensor.total_water
    delta_values: false
    cycle: daily
    periodically_resetting: true
    unique_id: yaml_template_sensor_daily_water_use
  weekly_water_use:
    source: sensor.total_water
    delta_values: false
    cycle: weekly
    periodically_resetting: true
    unique_id: yaml_template_sensor_weekly_water_use
  monthly_water_use:
    source: sensor.total_water
    delta_values: false
    cycle: monthly
    periodically_resetting: true
    unique_id: yaml_template_sensor_monthly_water_use
  yearly_water_use:
    source: sensor.total_water
    delta_values: false
    cycle: yearly
    periodically_resetting: true
    unique_id: yaml_template_sensor_yearly_water_use

  #Warmtepomp monitor:
  heatpump_tapwater_hourly_energy_use:
    source: sensor.heatpump_tapwater_energy_usage
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_tapwater_hourly_energy_use
  heatpump_tapwater_daily_energy_use:
    source: sensor.heatpump_tapwater_energy_usage
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_tapwater_daily_energy_use
  heatpump_tapwater_weekly_energy_use:
    source: sensor.heatpump_tapwater_energy_usage
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_tapwater_weekly_energy_use
  heatpump_tapwater_monthly_energy_use:
    source: sensor.heatpump_tapwater_energy_usage
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_tapwater_monthly_energy_use
  heatpump_tapwater_yearly_energy_use:
    source: sensor.heatpump_tapwater_energy_usage
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_tapwater_yearly_energy_use

  heatpump_verwarming_hourly_energy_use:
    source: sensor.heatpump_heating_energy_usage
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_verwarming_hourly_energy_use
  heatpump_verwarming_daily_energy_use:
    source: sensor.heatpump_heating_energy_usage
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_verwarming_daily_energy_use
  heatpump_verwarming_weekly_energy_use:
    source: sensor.heatpump_heating_energy_usage
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_verwarming_weekly_energy_use
  heatpump_verwarming_monthly_energy_use:
    source: sensor.heatpump_heating_energy_usage
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_verwarming_monthly_energy_use
  heatpump_verwarming_yearly_energy_use:
    source: sensor.heatpump_heating_energy_usage
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_verwarming_yearly_energy_use


  heatpump_tapwater_hourly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_tapwater_hourly_heat_production
  heatpump_tapwater_daily_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_tapwater_daily_heat_production
  heatpump_tapwater_weekly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_tapwater_weekly_heat_production
  heatpump_tapwater_monthly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_tapwater_monthly_heat_production
  heatpump_tapwater_yearly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_tapwater_yearly_heat_production

  heatpump_verwarming_hourly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_verwarming_hourly_heat_production
  heatpump_verwarming_daily_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_verwarming_daily_heat_production
  heatpump_verwarming_weekly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_verwarming_weekly_heat_production
  heatpump_verwarming_monthly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_verwarming_monthly_heat_production
  heatpump_verwarming_yearly_heat_production:
    source: sensor.heatpump_tapwater_heat_amount
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_verwarming_yearly_heat_production


  heatpump_circulation_hourly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_heatpump_circulation_hourly_energy_use
  heatpump_circulation_daily_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_heatpump_circulation_daily_energy_use
  heatpump_circulation_weekly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_heatpump_circulation_weekly_energy_use
  heatpump_circulation_monthly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_heatpump_circulation_monthly_energy_use
  heatpump_circulation_yearly_energy_use:
    source: sensor.blitzwolf_heatpump_consumption
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_heatpump_circulation_yearly_energy_use

  vacuums_hourly_energy_use:
    source: sensor.vacuums_energy_estimate
    delta_values: false
    cycle: hourly
    unique_id: yaml_utilitymeter_vacuums_hourly_energy_use
  vacuums_daily_energy_use:
    source: sensor.vacuums_energy_estimate
    delta_values: false
    cycle: daily
    unique_id: yaml_utilitymeter_vacuums_daily_energy_use
  vacuums_weekly_energy_use:
    source: sensor.vacuums_energy_estimate
    delta_values: false
    cycle: weekly
    unique_id: yaml_utilitymeter_vacuums_weekly_energy_use
  vacuums_monthly_energy_use:
    source: sensor.vacuums_energy_estimate
    delta_values: false
    cycle: monthly
    unique_id: yaml_utilitymeter_vacuums_monthly_energy_use
  vacuums_yearly_energy_use:
    source: sensor.vacuums_energy_estimate
    delta_values: false
    cycle: yearly
    unique_id: yaml_utilitymeter_vacuums_yearly_energy_use

template:
  - trigger:
      - platform: time_pattern
        seconds: /1
    sensor:
      - name: "Known Power"
        unit_of_measurement: 'W'
        state: >-
          {{ expand('group.power_entities') |rejectattr('domain','eq','group')
                                            |rejectattr('state', 'in', ['unavailable', 'unknown', 'none'])|map(attribute='state')|map('float')|sum|round() }}
  - trigger:
      - platform: time_pattern
        seconds: /1
    sensor:
      - name: "Unknown Power"
        unit_of_measurement: 'W'
        state: >-
          {{ states('sensor.total_power_consumption_watt')|float - states('sensor.known_power')|float|round() }}
        #availability_template: "{{ states('sensor.total_power_consumption_watt')|is_number and states('sensor.known_power')|is_number }}"
  - trigger:
      - platform: time_pattern
        seconds: /1
    sensor:
      - name: "Shellies Power Estimate"
        unit_of_measurement: 'W'
        state: >-
            {% set shellies = states.device_tracker | map(attribute='entity_id') | select('match', 'device_tracker.shelly') | list() %}
            {{ (0.4 * (states.device_tracker | selectattr('entity_id', 'in', shellies) | selectattr('state', 'eq', 'home') | list() | count()) )| int() }}
#######################
#    INPUT NUMBERS    #
#######################
input_number:
  water_meter_daily_consumption:
    min: 0
    max: 2000000
    name: Daily Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_weekly_consumption:
    min: 0
    max: 2000000
    name: Weekly Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_monthly_consumption:
    min: 0
    max: 2000000
    name: Monthly Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_yearly_consumption:
    min: 0
    max: 2000000
    name: Yearly Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water
  water_meter_total_consumption:
    min: 0
    max: 2000000
    name: Total Water Consumption
    step: 1
    mode: box
    unit_of_measurement: L
    icon: mdi:water

#################
#    SENSORS    #
#################
sensor:
  - platform: integration
    source: sensor.water_meter_water_consumption
    method: left
    unit_time: min

  - platform: template
    sensors:
      net_energy_usage:
        unit_of_measurement: 'kW'
        value_template: >-
          {{ states( 'sensor.electricity_meter_power_consumption' )|float(0) - states( 'sensor.electricity_meter_power_production' )|float(0) }}
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number and states('sensor.electricity_meter_power_production')|is_number }}"
      # total_power_blitzwolf:
      #   unit_of_measurement: 'W'
      #   value_template: >-
      #     {{
      #       (states( 'sensor.blitzwolf_electricblanket_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_computer_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_mediacenter_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_watercooker_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_router_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_3dprinter_energy_power' )|float(0)
      #       + states( 'sensor.blitzwolf_washingmachine_energy_power' )|float(0)) |round(2)
      #     }}
      #   availability_template: >-
      #     {{
      #       states( 'sensor.blitzwolf_electricblanket_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_computer_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_mediacenter_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_watercooker_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_router_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_3dprinter_energy_power' )|is_number
      #       or states( 'sensor.blitzwolf_washingmachine_energy_power' )|is_number
      #     }}
      # total_blitzwolf_energy_today:
      #   unit_of_measurement: 'kWh'
      #   value_template: >-
      #     {{
      #       (
      #         states( 'sensor.blitzwolf_electricblanket_energy_today' )|float
      #         + states( 'sensor.blitzwolf_computer_energy_today' )|float
      #         + states( 'sensor.blitzwolf_mediacenter_energy_today' )|float
      #         + states( 'sensor.blitzwolf_watercooker_energy_today' )|float
      #         + states( 'sensor.blitzwolf_router_energy_today' )|float
      #         + states( 'sensor.blitzwolf_3dprinter_energy_today' )|float
      #         + states( 'sensor.blitzwolf_washingmachine_energy_today' )|float
      #       )|round(2)
      #     }}
      #   availability_template: >-
      #     {{
      #       states( 'sensor.blitzwolf_electricblanket_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_computer_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_mediacenter_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_watercooker_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_router_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_3dprinter_energy_today' )|is_number
      #       or states( 'sensor.blitzwolf_washingmachine_energy_today' )|is_number
      #     }}
      # electricblanket_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_electricblanket_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_electricblanket_energy_today')|is_number }}"
      # mediacenter_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_mediacenter_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_mediacenter_energy_today')|is_number }}"
      # watercooker_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_watercooker_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_watercooker_energy_today')|is_number }}"
      # computer_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_computer_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_computer_energy_today')|is_number }}"
      # coffeeplant_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_router_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_router_energy_today')|is_number }}"
      # ender3_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_3dprinter_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_3dprinter_energy_today')|is_number }}"
      # washingmachine_cost_today:
      #   unit_of_measurement: '€'
      #   value_template: "{{ (states( 'sensor.blitzwolf_washingmachine_energy_today' )|float * (0.2221|float))|round(2) }}"
      #   availability_template: "{{ states('sensor.blitzwolf_washingmachine_energy_today')|is_number }}"
  #     unknown_power:
  #       unit_of_measurement: 'W'
  #       value_template: "{{ ( states( 'sensor.home_power_consumption' )|float - states( 'sensor.total_power_blitzwolf' )|float - states( 'sensor.light_power_estimate' )|float )|round(2) }}"
  #       availability_template: "{{ states('sensor.home_power_consumption')|is_number and states('sensor.total_power_blitzwolf')|is_number and states('sensor.light_power_estimate')|is_number }}"
  # - platform: filter
  #   name: "filtered unknown power"
  #   entity_id: sensor.unknown_power
  #   filters:
  #     - filter: lowpass
  #       time_constant: 10
      electricity_meter_power_watt:
        value_template: "{{ states('sensor.electricity_meter_power_consumption') | float(0) * 1000 | float | round(2) }}"
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number }}"
      current_costs_per_hour:
        value_template: "{{ ( states('sensor.electricity_meter_power_consumption') | float(0) * ( 0.2221 | float) | float ) | round(2) }}"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number }}"
      electricity_meter_power_production_watt:
        value_template: "{{ states('sensor.electricity_meter_power_production') | float * 1000 }}"
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.electricity_meter_power_production')|is_number }}"
      total_power_consumption_watt:
        value_template: >-
          {% if states('sensor.pv_power')|is_number %}
            {{ (states('sensor.electricity_meter_power_consumption')|float - states('sensor.electricity_meter_power_production')|float + states('sensor.pv_power')|float/1000)*1000 }}
          {% else %}
            {{ (states('sensor.electricity_meter_power_consumption')|float - states('sensor.electricity_meter_power_production')|float)*1000 }}
          {% endif %}
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number and states('sensor.electricity_meter_power_production')|is_number }}"
      total_power_consumption_kilowatt:
        value_template: "{{ states('sensor.total_power_consumption_watt')|float/1000 }}"
        unit_of_measurement: "kW"
        availability_template: "{{ states('sensor.total_power_consumption_watt')|is_number }}"

      total_energy_consumption_kilowatt:
        value_template: "{{ states('sensor.electricity_meter_energy_consumption_tarif_1')|float(0) + states('sensor.electricity_meter_energy_consumption_tarif_2')|float(0) }}"
        unit_of_measurement: "kW"
        availability_template: "{{ states('sensor.electricity_meter_energy_consumption_tarif_1')|is_number and states('sensor.electricity_meter_energy_consumption_tarif_2')|is_number }}"

    #Fitted powers using model based on temperatures
      heatpump_tapwater_power_estimate:
        value_template: >-
          {% if is_state('binary_sensor.heatpump_tapwater_recirculation_pump', 'on')%}
            {% if (255.5 + (states('sensor.heatpump_tapwater_temperature')|float * 16.66)) > (states('sensor.electricity_meter_power_consumption_phase_l2')|float * 1000) %}
              {{ states('sensor.electricity_meter_power_consumption_phase_l2')|float*1000 }}
            {% else %}
              {{ 255.5 + (states('sensor.heatpump_tapwater_temperature')|float * 16.66) }}
            {% endif %}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.heatpump_tapwater_temperature')|is_number }}" #Should also include recirculation pump being available
      heatpump_heating_power_estimate:
        value_template: >-
          {% if is_state('binary_sensor.heatpump_additional_circulation_pump', 'on') and is_state('binary_sensor.heatpump_tapwater_recirculation_pump', 'off') %}
            {% if (-1323.9 + (states('sensor.heatpump_hot_gas_temperature')|float * 38.59)) > (states('sensor.electricity_meter_power_consumption_phase_l2')|float * 1000) %}
              {{ states('sensor.electricity_meter_power_consumption_phase_l2')|float*1000 }}
            {% elif (-1323.9 + (states('sensor.heatpump_hot_gas_temperature')|float * 38.59)) < 0 %}
              0
            {% else %}
              {{ -1323.9 + (states('sensor.heatpump_hot_gas_temperature')|float * 38.59) }}
            {% endif %}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.heatpump_hot_gas_temperature')|is_number }}" #Should also include recirculation pump being available

    #Actual data from shelly sensor
      heatpump_tapwater_power:
        value_template: >-
          {% if is_state('sensor.heatpump_status', 'hot water')%}
            {{ states('sensor.tasmota_energy_power') }}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.tasmota_energy_power')|is_number }}" #Should also include sensor.heatpump_status being available
      heatpump_heating_power:
        value_template: >-
          {% if is_state('sensor.heatpump_status', 'heating')%}
            {{ states('sensor.tasmota_energy_power') }}
          {% else %}
            0
          {% endif %}
        unit_of_measurement: "W"
        availability_template: "{{ states('sensor.tasmota_energy_power')|is_number }}" #Should also include sensor.heatpump_status being available

      # Template sensor for projected costs per hour
      current_electricity_cost_per_hour:
        friendly_name: "Current Electricity Cost per Hour"
        unit_of_measurement: "€/h"  # Adjust this based on your currency
        value_template: "{{ (states('sensor.electricity_meter_power_consumption') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) | round(3) }}"
        availability_template: "{{ states('sensor.electricity_meter_power_consumption')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
      # Template sensor for lowest possible costs based on lowest price
      potential_electricity_usage_cost_lowest_price:
        friendly_name: "Potential Electricity Usage Costs (Lowest Price)"
        unit_of_measurement: "€"  # Adjust this based on your currency
        value_template: "{{ (states('sensor.daily_energy_use') | float * state_attr('sensor.nordpool_kwh_nl_eur_3_10_021', 'min') | float ) | round(3) }}"
        availability_template: "{{ states('sensor.daily_energy_use')|is_number and state_attr('sensor.nordpool_kwh_nl_eur_3_10_021', 'min')|is_number }}"
      # Template sensor for lowest possible costs based on lowest price
      potential_electricity_usage_cost_highest_price:
        friendly_name: "Potential Electricity Usage Costs (Highest Price)"
        unit_of_measurement: "€"  # Adjust this based on your currency
        value_template: "{{ (states('sensor.daily_energy_use') | float * state_attr('sensor.nordpool_kwh_nl_eur_3_10_021', 'max') | float ) | round(3) }}"
        availability_template: "{{ states('sensor.daily_energy_use')|is_number and state_attr('sensor.nordpool_kwh_nl_eur_3_10_021', 'max')|is_number }}"
      potential_electricity_usage_cost_mean_price:
        friendly_name: "Potential Electricity Usage Costs (Mean Price)"
        unit_of_measurement: "€"  # Adjust this based on your currency
        value_template: "{{ (states('sensor.daily_energy_use') | float * state_attr('sensor.nordpool_kwh_nl_eur_3_10_021', 'mean') | float ) | round(3) }}"
        availability_template: "{{ states('sensor.daily_energy_use')|is_number and state_attr('sensor.nordpool_kwh_nl_eur_3_10_021', 'mean')|is_number }}"
      # # Template sensor for potential savings based on lowest price
      # potential_savings_lowest_price:
      #   friendly_name: "Potential Savings (Lowest Price)"
      #   unit_of_measurement: "currency"  # Adjust this based on your currency
      #   value_template: "{{ (states('sensor.current_total_usage') | float * states('sensor.lowest_price') | float) - states('sensor.projected_total_cost_per_day') | float }}"
      # # Template sensor for potential savings based on average price
      # potential_savings_average_price:
      #   friendly_name: "Potential Savings (Average Price)"
      #   unit_of_measurement: "currency"  # Adjust this based on your currency
      #   value_template: "{{ (states('sensor.current_total_usage') | float * states('sensor.current_electricity_price') | float) - states('sensor.projected_total_cost_per_day') | float }}"
      # # Template sensor for already saved costs
      # already_saved_costs:
      #   friendly_name: "Already Saved Costs"
      #   unit_of_measurement: "currency"  # Adjust this based on your currency
      #   value_template: "{{ states('sensor.projected_total_cost_per_day') | float - (states('sensor.current_total_usage') | float * states('sensor.current_electricity_price') | float) }}"

        # Device cost per hour sensors
      blitzwolf_10gb_switch_energy_cost_hourly:
        friendly_name: "Blitzwolf 10GB Switch Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_10gb_switch_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_10gb_switch_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_10gb_switch_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_3dprinter_energy_cost_hourly:
        friendly_name: "Blitzwolf 3D Printer Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_3dprinter_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_3dprinter_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_3dprinter_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_ambilight_amplifier_energy_cost_hourly:
        friendly_name: "Blitzwolf Ambilight Amplifier Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_ambilight_amplifier_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_ambilight_amplifier_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_ambilight_amplifier_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_computer_energy_cost_hourly:
        friendly_name: "Blitzwolf Computer Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_computer_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_computer_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_computer_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_dishwasher_energy_cost_hourly:
        friendly_name: "Blitzwolf Dishwasher Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_dishwasher_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_dishwasher_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_dishwasher_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_nas_energy_cost_hourly:
        friendly_name: "Blitzwolf NAS Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_nas_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_nas_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_nas_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_nuc_energy_cost_hourly:
        friendly_name: "Blitzwolf NUC Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_nuc_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_nuc_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_nuc_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_poe_switch_energy_cost_hourly:
        friendly_name: "Blitzwolf POE Switch Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_poe_switch_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_poe_switch_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_poe_switch_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_router_energy_cost_hourly:
        friendly_name: "Blitzwolf Router Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_router_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_router_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_router_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_washingmachine_energy_cost_hourly:
        friendly_name: "Blitzwolf Washing Machine Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_washingmachine_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_washingmachine_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_washingmachine_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_watercooker_energy_cost_hourly:
        friendly_name: "Blitzwolf Water Cooker Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_watercooker_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_watercooker_energy_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_watercooker_energy_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      blitzwolf_heatpump_energy_cost_hourly:
        friendly_name: "Blitzwolf Heat Pump Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_blitzwolf_heatpump_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.blitzwolf_heatpump_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.blitzwolf_heatpump_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      all_lights_power_estimate_energy_cost_hourly:
        friendly_name: "All Lights Power Estimate Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_all_lights_power_estimate_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.all_lights_power_estimate_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.all_lights_power_estimate_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      heatpump_heating_energy_cost_hourly:
        friendly_name: "Heat Pump Heating Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_heatpump_heating_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.heatpump_heating_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.heatpump_heating_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      heatpump_tapwater_energy_cost_hourly:
        friendly_name: "Heat Pump Tap Water Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_heatpump_tapwater_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.heatpump_tapwater_power')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.heatpump_tapwater_power') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      ventilation_power_estimate_energy_cost_hourly:
        friendly_name: "Ventilation Power Estimate Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_ventilation_power_estimate_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.ventilation_power_estimate')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.ventilation_power_estimate') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      alfred_power_estimate_energy_cost_hourly:
        friendly_name: "Alfred Power Estimate Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_alfred_power_estimate_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.alfred_power_estimate')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.alfred_power_estimate') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      argus_power_estimate_energy_cost_hourly:
        friendly_name: "Argus Power Estimate Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_argus_power_estimate_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.argus_power_estimate')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.argus_power_estimate') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

      moeke_power_estimate_energy_cost_hourly:
        friendly_name: "Moeke Power Estimate Electricity Cost per Hour"
        unique_id: "yaml_template_sensor_moeke_power_estimate_energy_cost_hourly"
        unit_of_measurement: "€/h"
        availability_template: "{{ states('sensor.moeke_power_estimate')|is_number and states('sensor.nordpool_kwh_nl_eur_3_10_021')|is_number }}"
        value_template: "{{ (states('sensor.moeke_power_estimate') | float * states('sensor.nordpool_kwh_nl_eur_3_10_021') | float) / 1000 }}"

        #Total cost sensors for above template cost per hour sensors
  - platform: integration
    source: sensor.blitzwolf_10gb_switch_energy_cost_hourly
    name: Blitzwolf 10GB Switch Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_10gb_switch_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_3dprinter_energy_cost_hourly
    name: Blitzwolf 3D Printer Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_3dprinter_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_ambilight_amplifier_energy_cost_hourly
    name: Blitzwolf Ambilight Amplifier Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_ambilight_amplifier_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_computer_energy_cost_hourly
    name: Blitzwolf Computer Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_computer_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_dishwasher_energy_cost_hourly
    name: Blitzwolf Dishwasher Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_dishwasher_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_nas_energy_cost_hourly
    name: Blitzwolf NAS Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_nas_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_nuc_energy_cost_hourly
    name: Blitzwolf NUC Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_nuc_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_poe_switch_energy_cost_hourly
    name: Blitzwolf POE Switch Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_poe_switch_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_router_energy_cost_hourly
    name: Blitzwolf Router Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_router_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_washingmachine_energy_cost_hourly
    name: Blitzwolf Washing Machine Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_washingmachine_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_watercooker_energy_cost_hourly
    name: Blitzwolf Water Cooker Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_watercooker_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.blitzwolf_heatpump_energy_cost_hourly
    name: Blitzwolf Heat Pump Total Electricity Cost
    unique_id: yaml_integration_blitzwolf_heatpump_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.all_lights_power_estimate_energy_cost_hourly
    name: All Lights Power Estimate Total Electricity Cost
    unique_id: yaml_integration_all_lights_power_estimate_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.heatpump_heating_energy_cost_hourly
    name: Heat Pump Heating Total Electricity Cost
    unique_id: yaml_integration_heatpump_heating_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.heatpump_tapwater_energy_cost_hourly
    name: Heat Pump Tap Water Total Electricity Cost
    unique_id: yaml_integration_heatpump_tapwater_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.ventilation_power_estimate_energy_cost_hourly
    name: Ventilation Power Estimate Total Electricity Cost
    unique_id: yaml_integration_ventilation_power_estimate_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.alfred_power_estimate_energy_cost_hourly
    name: Alfred Power Estimate Total Electricity Cost
    unique_id: yaml_integration_alfred_power_estimate_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.argus_power_estimate_energy_cost_hourly
    name: Argus Power Estimate Total Electricity Cost
    unique_id: yaml_integration_argus_power_estimate_total_electricity_cost
    unit_time: h
    method: left
    round: 2

  - platform: integration
    source: sensor.moeke_power_estimate_energy_cost_hourly
    name: Moeke Power Estimate Total Electricity Cost
    unique_id: yaml_integration_moeke_power_estimate_total_electricity_cost
    unit_time: h
    method: left
    round: 2



  - platform: integration
    source: sensor.total_power_consumption_watt
    name: Total Energy Usage
    unique_id: integration_total_energy_usage
    unit_time: h
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.total_energy_consumption_kilowatt
    name: Total Energy Consumption
    unit_time: h
    method: left
    round: 2
  - platform: integration
    source: sensor.heatpump_tapwater_power_estimate
    name: Tapwater Energy
    unique_id: sensor_integration_heatpump_energy_usage
    unit_time: h
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.unknown_power
    name: Unknown Energy
    unique_id: integration_unknown_energy_usage
    unit_time: h
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.water_meter_current_water_consumption
    name: Total Water Usage
    unique_id: integration_total_water_usage
    unit_time: min
    round: 0

  - platform: integration
    source: sensor.heatpump_tapwater_power
    name: Heatpump Tapwater Energy Usage
    unique_id: integration_heatpump_tapwater_energy_usage
    unit_time: h
    unit_prefix: k
    method: left
    round: 2
  - platform: integration
    source: sensor.heatpump_heating_power
    name: Heatpump Heating Energy Usage
    unique_id: integration_heatpump_heating_energy_usage
    unit_time: h
    unit_prefix: k
    method: left
    round: 2

  - platform: derivative
    source: sensor.water_meter_main_water_consumption
    name: Current Water Consumption
    unit_time: min
    time_window: "00:01:00"

  - platform: statistics
    entity_id: sensor.water_meter_water_consumption
    name: Statistics Water per Ten Minutes
    state_characteristic: sum
    max_age:
      minutes: 10

# Heat pump:
  - platform: derivative
    source: sensor.heatpump_heat_amount_heating
    name: Heat Pump Heating Power Production
    unit_time: min
    time_window: "00:01:00"
  - platform: derivative
    source: sensor.heatpump_tapwater_heat_amount
    name: Heat Pump Tapwater Power Production
    unit_time: min
    time_window: "00:01:00"

  - platform: filter
    entity_id: sensor.blitzwolf_computer_energy_power
    name: Averaged Computer Power
    unique_id: filter_sensor_averaged_computer_power
    filters:
      - filter: time_simple_moving_average
        window_size: '00:15'
        precision: 0

  #Energy costs
  - platform: integration
    source: sensor.current_electricity_cost_per_hour
    name: "Actual Costs Today"
    method: left
    unit_time: h
    round: 2
  # - platform: template
  #   sensors:
  #     known_power:
  #       friendly_name: "Known Power"
  #       unit_of_measurement: 'W'
  #       value_template: >-
  #         {{ expand('group.power_entities') |rejectattr('domain','eq','group')
  #                                           |rejectattr('state', 'in', ['unavailable', 'unknown', 'none'])|map(attribute='state')|map('float')|sum}}

  # - platform: template
  #   sensors:
  #     unknown power:
  #       friendly_name: "Unknown Power"
  #       unit_of_measurement: 'W'
  #       value_template: "{{ states('sensor.total_power_consumption_watt')|float - states('sensor.known_power')|float }}"
  #       availability_template: "{{ states('sensor.total_power_consumption_watt')|is_number and states('sensor.known_power')|is_number }}"


  # - platform: template
  #   sensors:
  #     light_power_estimate: #I fitted power monitoring data to the power consumption using a trendline in Excel. Formula is 0.35*exp(brightness*0.0096)
  #       unit_of_measurement: 'W'
  #       value_template: >-
  #         {% set lights = [
  #           states.light.bedroom_1,
  #           states.light.bedroom_2,
  #           states.light.bedroom_3,
  #           states.light.tvarea_1,
  #           states.light.tvarea_2,
  #           states.light.tvarea_3,
  #           states.light.tvarea_4,
  #           states.light.tvarea_5,
  #           states.light.kitchen_1,
  #           states.light.kitchen_2,
  #           states.light.kitchen_3,
  #           states.light.study_1,
  #           states.light.study_2,
  #           states.light.study_3,
  #           states.light.plant_1,
  #           states.light.plant_2,
  #           states.light.entry_1
  #         ] %}
  #         {%- set ns = namespace(power = 0) -%}
  #         {%- set threshold = 100 -%}
  #         {%- for item in lights if (item.attributes.brightness is defined) -%}
  #           {%- set ns.power = ns.power + (0.35*2.72**(item.attributes['brightness']|round(1) * 0.0096))|round(2) -%}
  #         {%- endfor -%}
  #         {{ ns.power|round(1) }}

  - platform: min_max
    name: Phase 1 Known Power
    unique_id: yaml_minmax_phase_1_known_power
    round_digits: 0
    type: sum
    entity_ids:
      - sensor.blitzwolf_10gb_switch_energy_power #in W
      - sensor.blitzwolf_3dprinter_energy_power #in W
      - sensor.blitzwolf_computer_energy_power #in W
      - sensor.blitzwolf_nas_energy_power #in W
      - sensor.blitzwolf_washingmachine_energy_power #in W
      - sensor.blitzwolf_watercooker_energy_power #in W
      - sensor.moeke_power_estimate
      - sensor.alfred_power_estimate
      - sensor.argus_power_estimate

      # - sensor.blitzwolf_ambilight_amplifier_power Should be included, but this is in kW

  - platform: min_max
    name: Phase 2 Known Power
    unique_id: yaml_minmax_phase_2_known_power
    round_digits: 0
    type: sum
    entity_ids:
      - sensor.blitzwolf_dishwasher_energy_power
      - sensor.tasmota_energy_power #Heatpump

  - platform: min_max
    name: Phase 3 Known Power
    unique_id: yaml_minmax_phase_3_known_power
    round_digits: 0
    type: sum
    entity_ids:
      - sensor.blitzwolf_poe_switch_energy_power
      - sensor.blitzwolf_router_energy_power
      - sensor.blitzwolf_nuc_energy_power
      - sensor.ventilation_power_estimate
      - sensor.blitzwolf_heatpump_power

########################
#    BINARY SENSORS    #
########################
binary_sensor:
  # Time of day helper. I use this to check if it's after 15:00 to display tomorrow's energy prices on the dashboard
  - platform: tod
    name: "After 15:00"
    after: "15:00"
    before: "23:59"
    unique_id: yaml_tod_binary_sensor_after_1500
########################
#    INPUT BOOLEANS    #
########################
input_boolean:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: "Power state on HA start-up"
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "sonoffs/cmnd/state"
          payload: ""

# Example automations.yaml entry
  - id: 'sonoff_firmware_installed'
    alias: Sonoff Firmware Installed
    trigger:
    - event: start
      platform: homeassistant
    action:
    - data:
        payload: '2'
        topic: sonoffs/cmnd/status
      service: mqtt.publish
    initial_state: 'true'

# Example automations.yaml entry
  - alias: "Enable MQTT discovery for all devices"
    trigger:
      platform: homeassistant
      event: start
    action:
      - service: mqtt.publish
        data:
          topic: "cmnd/sonoffs/SetOption19"
          payload: "1"

  - alias: "[power|warning] Send message when power usage is too high and not at home"
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.unknown_power
        above: 1500
        # for:
        #   minutes: 1
      - platform: state
        entity_id: binary_sensor.house_occupied
        to: 'off'
    condition:
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.unknown_power
        above: 1500
        # for:
        #   minutes: 1
    action:
      - service: notify.mobile_app_blokmeisters21u
        data:
          title: "Warning: Power Usage!"
          message: "Unknown power is <b>{{ states( 'sensor.unknown_power' )}} W</b> for a total of <b>{{ states('sensor.home_power_consumption') }}</b>"
          data:
            group: notification
            tag: powerwarning
            clickAction: '/lovelace-dashboard/view/6' # action when clicking main notification
            ledColor: "orange"
            channel: warning

  # - alias: "[power|watermeter] Save watermeter states to HA"
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.water_meter_main_water_consumption
  #   condition:
  #     - "{{ ( now() - states('sensor.uptime_10')|as_datetime ).seconds > 60 }}"
  #   action:
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.water_meter_daily_consumption
  #         value: "{{ states('sensor.water_meter_daily_water_consumption')|int }}"
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.water_meter_weekly_consumption
  #         value: "{{ states('sensor.water_meter_weekly_water_consumption')|int }}"
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.water_meter_monthly_consumption
  #         value: "{{ states('sensor.water_meter_monthly_water_consumption')|int }}"
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.water_meter_yearly_consumption
  #         value: "{{ states('sensor.water_meter_yearly_water_consumption')|int }}"
  #     - service: input_number.set_value
  #       data:
  #         entity_id: input_number.water_meter_total_consumption
  #         value: "{{ states('sensor.water_meter_main_water_consumption')|int }}"


################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:
  # blitzwolf_router:
  #   entities:
  #     - switch.blitzwolf_router
  #     - sensor.blitzwolf_router_status
  #     - sensor.blitzwolf_router_energy_voltage
  #     - sensor.blitzwolf_router_energy_current
  #     - sensor.blitzwolf_router_energy_power
  #     - sensor.blitzwolf_router_energy_apparentpower
  #     - sensor.blitzwolf_router_energy_reactivepower
  #     - sensor.blitzwolf_router_energy_today
  #     - sensor.blitzwolf_router_energy_yesterday
  #     - sensor.blitzwolf_router_energy_total
  #     - sensor.blitzwolf_router_energy_totalstarttime
  # blitzwolf_computer:
  #   entities:
  #     - switch.blitzwolf_computer
  #     - sensor.blitzwolf_computer_status
  #     - sensor.blitzwolf_computer_energy_voltage
  #     - sensor.blitzwolf_computer_energy_current
  #     - sensor.blitzwolf_computer_energy_power
  #     - sensor.blitzwolf_computer_energy_apparentpower
  #     - sensor.blitzwolf_computer_energy_reactivepower
  #     - sensor.blitzwolf_computer_energy_today
  #     - sensor.blitzwolf_computer_energy_yesterday
  #     - sensor.blitzwolf_computer_energy_total_2
  #     - sensor.blitzwolf_computer_energy_totalstarttime
  # blitzwolf_electricblanket:
  #   entities:
  #     - switch.blitzwolf_electricblanket
  #     - sensor.blitzwolf_electricblanket_status
  #     - sensor.blitzwolf_electricblanket_energy_voltage
  #     - sensor.blitzwolf_electricblanket_energy_current
  #     - sensor.blitzwolf_electricblanket_energy_power
  #     - sensor.blitzwolf_electricblanket_energy_apparentpower
  #     - sensor.blitzwolf_electricblanket_energy_reactivepower
  #     - sensor.blitzwolf_electricblanket_energy_today
  #     - sensor.blitzwolf_electricblanket_energy_yesterday
  #     - sensor.blitzwolf_electricblanket_energy_total
  #     - sensor.blitzwolf_electricblanket_energy_totalstarttime
  # blitzwolf_mediacenter:
  #   entities:
  #     - switch.blitzwolf_mediacenter
  #     - sensor.blitzwolf_mediacenter_status
  #     - sensor.blitzwolf_mediacenter_energy_voltage
  #     - sensor.blitzwolf_mediacenter_energy_current
  #     - sensor.blitzwolf_mediacenter_energy_power
  #     - sensor.blitzwolf_mediacenter_energy_apparentpower
  #     - sensor.blitzwolf_mediacenter_energy_reactivepower
  #     - sensor.blitzwolf_mediacenter_energy_today
  #     - sensor.blitzwolf_mediacenter_energy_yesterday
  #     - sensor.blitzwolf_mediacenter_energy_total
  #     - sensor.blitzwolf_mediacenter_energy_totalstarttime
  # blitzwolf_watercooker:
  #   entities:
  #     - switch.blitzwolf_watercooker
  #     - sensor.blitzwolf_watercooker_status
  #     - sensor.blitzwolf_watercooker_energy_voltage
  #     - sensor.blitzwolf_watercooker_energy_current
  #     - sensor.blitzwolf_watercooker_energy_power
  #     - sensor.blitzwolf_watercooker_energy_apparentpower
  #     - sensor.blitzwolf_watercooker_energy_reactivepower
  #     - sensor.blitzwolf_watercooker_energy_today
  #     - sensor.blitzwolf_watercooker_energy_yesterday
  #     - sensor.blitzwolf_watercooker_energy_total
  #     - sensor.blitzwolf_watercooker_energy_totalstarttime
  # blitzwolf_nuc:
  #   entities:
  #     - switch.blitzwolf_nuc
  #     - sensor.blitzwolf_nuc_status
  #     - sensor.blitzwolf_nuc_energy_voltage
  #     - sensor.blitzwolf_nuc_energy_current
  #     - sensor.blitzwolf_nuc_energy_power
  #     - sensor.blitzwolf_nuc_energy_apparentpower
  #     - sensor.blitzwolf_nuc_energy_reactivepower
  #     - sensor.blitzwolf_nuc_energy_today
  #     - sensor.blitzwolf_nuc_energy_yesterday
  #     - sensor.blitzwolf_nuc_energy_total
  #     - sensor.blitzwolf_nuc_energy_totalstarttime
  # blitzwolf_ender3:
  #   entities:
  #     - switch.blitzwolf_3dprinter
  #     - sensor.blitzwolf_3dprinter_status
  #     - sensor.blitzwolf_3dprinter_energy_voltage
  #     - sensor.blitzwolf_3dprinter_energy_current
  #     - sensor.blitzwolf_3dprinter_energy_power
  #     - sensor.blitzwolf_3dprinter_energy_apparentpower
  #     - sensor.blitzwolf_3dprinter_energy_reactivepower
  #     - sensor.blitzwolf_3dprinter_energy_today
  #     - sensor.blitzwolf_3dprinter_energy_yesterday
  #     - sensor.blitzwolf_3dprinter_energy_total
  #     - sensor.blitzwolf_3dprinter_energy_totalstarttime
  #     - sensor.blitzwolf_3dprinter_energy_bl0940_temperature
  # blitzwolf_washingmachine:
  #   entities:
  #     - switch.blitzwolf_washingmachine
  #     - sensor.blitzwolf_washingmachine_status
  #     - sensor.blitzwolf_washingmachine_energy_voltage
  #     - sensor.blitzwolf_washingmachine_energy_current
  #     - sensor.blitzwolf_washingmachine_energy_power
  #     - sensor.blitzwolf_washingmachine_energy_apparentpower
  #     - sensor.blitzwolf_washingmachine_energy_reactivepower
  #     - sensor.blitzwolf_washingmachine_energy_today
  #     - sensor.blitzwolf_washingmachine_energy_yesterday
  #     - sensor.blitzwolf_washingmachine_energy_total
  #     - sensor.blitzwolf_washingmachine_energy_totalstarttime
  #     - sensor.blitzwolf_washingmachine_energy_bl0940_temperature
  # blitzwolf_plug1:
  #   entities:
  #     - switch.blitzwolf_nas
  #     - sensor.blitzwolf_nas_status
  #     - sensor.blitzwolf_nas_energy_voltage
  #     - sensor.blitzwolf_nas_energy_current
  #     - sensor.blitzwolf_nas_energy_power
  #     - sensor.blitzwolf_nas_energy_apparentpower
  #     - sensor.blitzwolf_nas_energy_reactivepower
  #     - sensor.blitzwolf_nas_energy_today
  #     - sensor.blitzwolf_nas_energy_yesterday
  #     - sensor.blitzwolf_nas_energy_total
  #     - sensor.blitzwolf_nas_energy_totalstarttime
  #     - sensor.blitzwolf_nas_energy_bl0940_temperature
  # blitzwolf_ambilight:
  #   entities:
  #     - switch.blitzwolf_ambilight
  #     - sensor.blitzwolf_ambilight_status
  #     - sensor.blitzwolf_ambilight_energy_voltage
  #     - sensor.blitzwolf_ambilight_energy_current
  #     - sensor.blitzwolf_ambilight_energy_power
  #     - sensor.blitzwolf_ambilight_energy_apparentpower
  #     - sensor.blitzwolf_ambilight_energy_reactivepower
  #     - sensor.blitzwolf_ambilight_energy_today
  #     - sensor.blitzwolf_ambilight_energy_yesterday
  #     - sensor.blitzwolf_ambilight_energy_total
  #     - sensor.blitzwolf_ambilight_energy_totalstarttime
  #     - sensor.blitzwolf_plug2_energy_bl0940_temperature
  meter_readings:
    name: Meter readings
    entities:
      - sensor.timestamp_local
      - sensor.timestamp_utc
      - sensor.consumption_gas_m3
      - sensor.consumption_kwh_high
      - sensor.consumption_kwh_low
      - sensor.consumption_kw
      - sensor.tarifcode
      - sensor.record_is_processed
      - sensor.consumption_l1_w
      - sensor.l1_v
      - sensor.l1_a

  power_entities:
    name: Power Entities
    entities:
      - sensor.blitzwolf_10gb_switch_energy_power
      - sensor.blitzwolf_3dprinter_energy_power
      - sensor.blitzwolf_ambilight_amplifier_power
      - sensor.blitzwolf_computer_energy_power
      - sensor.blitzwolf_dishwasher_energy_power
      - sensor.blitzwolf_nas_energy_power
      - sensor.blitzwolf_nuc_energy_power
      - sensor.blitzwolf_poe_switch_energy_power
      - sensor.blitzwolf_router_energy_power
      - sensor.blitzwolf_washingmachine_energy_power
      - sensor.blitzwolf_watercooker_energy_power
      - sensor.blitzwolf_heatpump_power
      - sensor.all_lights_power_estimate_power
      - sensor.heatpump_heating_power
      - sensor.heatpump_tapwater_power
      - sensor.ventilation_power_estimate
      - sensor.alfred_power_estimate
      - sensor.argus_power_estimate
      - sensor.moeke_power_estimate

  electricity_cost_per_hour_sensors:
    name: Electricity Cost per Hour Sensors
    entities:
      - sensor.blitzwolf_10gb_switch_energy_cost_hourly
      - sensor.blitzwolf_3dprinter_energy_cost_hourly
      - sensor.blitzwolf_ambilight_amplifier_energy_cost_hourly
      - sensor.blitzwolf_computer_energy_cost_hourly
      - sensor.blitzwolf_dishwasher_energy_cost_hourly
      - sensor.blitzwolf_nas_energy_cost_hourly
      - sensor.blitzwolf_nuc_energy_cost_hourly
      - sensor.blitzwolf_poe_switch_energy_cost_hourly
      - sensor.blitzwolf_router_energy_cost_hourly
      - sensor.blitzwolf_washingmachine_energy_cost_hourly
      - sensor.blitzwolf_watercooker_energy_cost_hourly
      - sensor.blitzwolf_heatpump_energy_cost_hourly
      - sensor.all_lights_power_estimate_energy_cost_hourly
      - sensor.heatpump_heating_energy_cost_hourly
      - sensor.heatpump_tapwater_energy_cost_hourly
      - sensor.ventilation_power_estimate_energy_cost_hourly
      - sensor.alfred_power_estimate_energy_cost_hourly
      - sensor.argus_power_estimate_energy_cost_hourly
      - sensor.moeke_power_estimate_energy_cost_hourly

  total_electricity_cost_sensors:
    name: Integration Sensors
    entities:
      - sensor.blitzwolf_10gb_switch_total_electricity_cost
      - sensor.blitzwolf_3dprinter_total_electricity_cost
      - sensor.blitzwolf_ambilight_amplifier_total_electricity_cost
      - sensor.blitzwolf_computer_total_electricity_cost
      - sensor.blitzwolf_dishwasher_total_electricity_cost
      - sensor.blitzwolf_nas_total_electricity_cost
      - sensor.blitzwolf_nuc_total_electricity_cost
      - sensor.blitzwolf_poe_switch_total_electricity_cost
      - sensor.blitzwolf_router_total_electricity_cost
      - sensor.blitzwolf_washingmachine_total_electricity_cost
      - sensor.blitzwolf_watercooker_total_electricity_cost
      - sensor.blitzwolf_heatpump_total_electricity_cost
      - sensor.all_lights_power_estimate_total_electricity_cost
      - sensor.heatpump_heating_total_electricity_cost
      - sensor.heatpump_tapwater_total_electricity_cost
      - sensor.ventilation_power_estimate_total_electricity_cost
      - sensor.alfred_power_estimate_total_electricity_cost
      - sensor.argus_power_estimate_total_electricity_cost
      - sensor.moeke_power_estimate_total_electricity_cost
#################
#    SCRIPTS    #
#################
script:
