homeassistant:
  customize:
    automation.bedroom_light_turn_on_lights_through_motion:
      icon: mdi:lightbulb-outline
    automation.bedroom_light_match_scene_sensor:
      icon: mdi:lightbulb-outline
    automation.bedroom_light_switch_toggle:
      icon: mdi:light-switch
    automation.bedroom_light_switch_scene_cycle:
      icon: mdi:light-switch
    sensor.wakeup_time:
      icon: mdi:clock-outline
    sensor.bed_time:
      icon: mdi:clock-outline
    automation.bedroom_light_lights_timeout_start:
      icon: mdi:clock-outline
    automation.bedroom_light_lights_timeout_stop:
      icon: mdi:clock-outline
    sensor.bedroom_scene:
      icon: mdi:lightbulb-outline
    script.bed_preheating:
      icon: mdi:bed-empty
    light.ledstrip_bed:
      icon: mdi:led-strip-variant
  customize_glob:
    "scene.bedroom_*":
      icon: mdi:lightbulb-outline

climate:
  - platform: generic_thermostat
    name: Electric blanket
    heater: switch.blitzwolf_electricblanket
    target_sensor: sensor.temperature_electricblanket
    max_temp: 60
    cold_tolerance: 1
    hot_tolerance: 1
    min_cycle_duration:
      minutes: 5

timer:
  bedroom_button_pressed:
    duration: '00:30:00'
  get_out_of_bed:
    duration: '00:05:00'

input_number:
  bed_preheat_temp:
    name: Bed preheating temperature
    initial: 45
    min: 0
    max: 50
    step: 1
  bed_postheat_temp:
    name: Bed postheating temperature
    initial: 25
    min: 0
    max: 50
    step: 1
  bed_preheat_time:
    name: Bed postheating time
    initial: 60
    min: 10
    max: 120
    step: 1
  bedscalecalibration_lowvalue_raw:
    name: Bed scale calibration low value raw
    #initial: -1171748
    step: 1
    min: -2000000
    max: 2000000
    mode: box
  bedscalecalibration_lowvalue_kg:
    name: Bed scale calibration low value kg
    initial: 0
    step: 0.01
    min: -100
    max: 100
    mode: box
  bedscalecalibration_highvalue_raw:
    name: Bed scale calibration high value raw
    #initial: -1414105
    step: 1
    min: -2000000
    max: 2000000
    mode: box
  bedscalecalibration_highvalue_kg:
    name: Bed scale calibration high value kg
    #initial: 66.8
    step: 0.01
    min: -100
    max: 100
    mode: box
  bedscalecalibration_helper:
    name: Bed scale calibration helper
    initial: 0
    step: 1
    min: -2000000
    max: 2000000
    mode: box
  bedroom_illumination_limit:
    name: Bedroom illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  bedroom_light_timeout: #in minutes
    name: Bedroom light timeout
    step: 1
    min: 0
    max: 30
    mode: box
  

input_select:
  bedroom_scenes:
    options:
      - bright_cool
      - bright_warm
      - goodnight
      - readinglight
      - nightlight
    initial: bright_warm
    icon: mdi:lightbulb-on-outline

#################
#    SENSORS    #
#################
sensor:
  - platform: template
    sensors:
      wakeup_time:
        entity_id: sensor.time
        value_template: >-
          {% if states.input_boolean.override_alarm.state == 'on' %}
            {{ as_timestamp(states.input_datetime.wakeup_time.datetime) }}
          {% elif as_timestamp(states.calendar.asml_werkschema.attributes.start_time)|timestamp_custom('%y%m%d')|int>(now().strftime('%y%m%d')|int+1) %}
            {{ as_timestamp((as_timestamp(now())+24*3600)|timestamp_custom(('%Y-%m-%d')) + " 08:00:00") }}
          {% elif as_timestamp(states.calendar.asml_werkschema.attributes.start_time)|timestamp_custom('%H%M')|int >= 1100 %}
            {{ as_timestamp((as_timestamp(now())+24*3600)|timestamp_custom(('%Y-%m-%d')) + " 10:00:00") }}
          {% else %}
            {{ (as_timestamp(states.calendar.asml_werkschema.attributes.start_time)-3600) }}
          {% endif %}
      wakeup_time_human_readable:
        entity_id: sensor.wakeup_time
        device_class: timestamp
        value_template: >-
          {{ states.sensor.wakeup_time.state|int|timestamp_custom(('%d-%m-%Y %H:%M:%S')) }}
      bed_time:
        entity_id: sensor.wakeup_time
        device_class: timestamp
        value_template: >-
          {{ states.sensor.wakeup_time.state|int-8.5*3600 }}
      bed_time_human_readable:
        entity_id: sensor.bed_time
        device_class: timestamp
        value_template: >-
          {{ states.sensor.bed_time.state|int|timestamp_custom(('%d-%m-%Y %H:%M:%S')) }}
      wakeuplight_time:
        entity_id: sensor.wakeup_time
        device_class: timestamp
        value_template: >-
          {{ states.sensor.wakeup_time.state|int-0.5*3600 }}
      wakeuplight_time_human_readable:
        entity_id: sensor.time
        device_class: timestamp
        value_template: >-
          {{ states.sensor.wakeuplight_time.state|int|timestamp_custom(('%d-%m-%Y %H:%M:%S')) }}
      time_until_wakeuplight_time:
        entity_id: sensor.time
        device_class: timestamp
        value_template: >-
          {{ states.sensor.wakeuplight_time.state|int-as_timestamp(now()) }}
      time_until_wakeuplight_time_human_readable:
        entity_id: sensor.time
        value_template: >-
          {{ states.sensor.time_until_wakeuplight_time.state|int|timestamp_custom(('%H:%M:%S')) }}
      bedroom_scene:
        entity_id: sensor.time
        value_template: >-
          {% if states.input_boolean.sleep_tracking_on.state =='on' or
            (states.input_boolean.tamara_sleeping.state == 'on' and states.person.tamara.state == 'home')
          %}
          bedroom_nightlight
          {% elif states.sensor.bed_time.state|int <= (as_timestamp(now())+0.5*3600)%}
          bedroom_goodnight
          {% elif states.sensor.bed_time.state|int <= (as_timestamp(now())+2*3600)%}
          bedroom_bright_warm
          {% else %}
          bedroom_bright_cool
          {% endif %}
      bed_weight_calibrated:
        friendly_name: "Bed weight calibrated"
        unit_of_measurement: kg
        icon_template: mdi:scale
        value_template:  >-
          {{ ((states('sensor.hx711_raw_value')|round(1) - states('input_number.bedscalecalibration_lowvalue_raw')|round(1)) * ((states('input_number.bedscalecalibration_lowvalue_kg')|round(1) - states('input_number.bedscalecalibration_highvalue_kg')|round(1)) / (states('input_number.bedscalecalibration_lowvalue_raw')|round(1) - states('input_number.bedscalecalibration_highvalue_raw')|round(1))))|round(2) }}
      people_in_bed:
        value_template: >-
          {% if states('sensor.bed_weight_calibrated')|float < 10 %}
            0
          {% elif states('sensor.bed_weight_calibrated')|float < 80 %}
            1
          {% elif states('sensor.bed_weight_calibrated')|float < 150 %}
            2
          {% else %}
            3
          {% endif %}
        icon_template: >-
          {% if states('sensor.bed_weight_calibrated')|float < 10 %}
            mdi:account-cancel
          {% elif states('sensor.bed_weight_calibrated')|float < 80 %}
            mdi:account
          {% elif states('sensor.bed_weight_calibrated')|float < 150 %}
            mdi:account-multiple
          {% else %}
            mdi:account-group
          {% endif %}
      average_illumination_bedroom:
        device_class: illuminance
        unit_of_measurement: 'lx'
        value_template: >-
          {{ (states('sensor.illumination_bedroom')|round(1) + states('sensor.lightlevel_12')|round(1))/2 }}

  - platform: derivative
    source: sensor.bed_weight_calibrated
    name: Bed weight change per minute
    unit_time: min
    time_window: "00:00:20"

########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      bed_occupied:
        device_class: occupancy
        value_template: "{{ not is_state('sensor.people_in_bed', '0') }}"



  #     scene_bedroom_bright_cool:
  #       device_class: light
  #       value_template: >-
  #         {{
  #           states.light.bedroom_lights.attributes.brightness == 254 and
  #           states.light.bedroom_lights.attributes.color_temp == 280
  #         }}
  #     scene_bedroom_bright_warm:
  #       device_class: light
  #       value_template: >-
  #         {{
  #           states.light.bedroom_lights.attributes.brightness == 254 and
  #           states.light.bedroom_lights.attributes.color_temp == 454
  #         }}
  #     scene_bedroom_goodnight:
  #       device_class: light
  #       value_template: >-
  #         {{
  #           states.light.bedroom_1.attributes.brightness == 141 and
  #           states.light.bedroom_2.attributes.brightness == 141 and
  #           states.light.bedroom_3.state == 'off' and
  #           states.light.bedside_right.attributes.brightness == 20 and
  #           states.light.bedroom_1.attributes.color_temp == 454 and
  #           states.light.bedroom_2.attributes.color_temp == 454 and
  #           states.light.bedside_right.attributes.color_temp == 454
  #         }}
  #     scene_bedroom_nightlight:
  #       device_class: light
  #       value_template: >-
  #         {{
  #           states.light.bedroom_1.attributes.brightness == 1 and
  #           states.light.bedroom_2.attributes.brightness == 1 and
  #           states.light.bedroom_3.state == 'off' and
  #           states.light.bedside_right.state == 'off' and
  #           states.light.bedroom_1.attributes.color_temp == 454 and
  #           states.light.bedroom_2.attributes.color_temp == 454 and
  #           states.light.bedside_right.attributes.color_temp == 454
  #         }}
  #     curtains_likely_closed:
  #       device_class: opening
  #       value_template: >-
  #         {{ states.sensor.illumination_bedroom.state|int >= 50 }}

########################
#    INPUT BOOLEANS    #
########################
input_boolean:
  sleep_tracking_on:
    name: Sleep as android sleep tracking on
    icon: mdi:sleep
  wakeup_alarm_on:
    name: Sleep as android alarm on
    icon: mdi:alarm
  tamara_sleeping:
    name: Tamara is sleeping
    icon: mdi:sleep
  override_alarm:
    name: Override alarm
    icon: mdi:alarm
  bedroom_button_pressed:
    name: Bedroom button pressed
    icon: mdi:light-switch

##################
#    SWITCHES    #
##################
switch:
  # - platform: template
  #   switches:
  #     scene_bedroom_bright_cool:
  #       icon_template: mdi:lightbulb-outline
  #       value_template: "{{ states.binary_sensor.scene_bedroom_bright_cool.state }}"
  #       turn_on:
  #         service: scene.turn_on
  #         entity_id: scene.bedroom_bright_cool
  #       turn_off:
  #         service: light.turn_off
  #         data:
  #           entity_id: light.bedroom_lights
  #           transition: 2
  #     scene_bedroom_bright_warm:
  #       icon_template: mdi:lightbulb-outline
  #       value_template: "{{ states.binary_sensor.scene_bedroom_bright_warm.state }}"
  #       turn_on:
  #         service: scene.turn_on
  #         entity_id: scene.bedroom_bright_warm
  #       turn_off:
  #         service: light.turn_off
  #         data:
  #           entity_id: light.bedroom_lights
  #           transition: 2
  #     scene_bedroom_goodnight:
  #       icon_template: mdi:lightbulb-outline
  #       value_template: "{{ states.binary_sensor.scene_bedroom_goodnight.state }}"
  #       turn_on:
  #         service: scene.turn_on
  #         entity_id: scene.bedroom_goodnight
  #       turn_off:
  #         service: light.turn_off
  #         data:
  #           entity_id: light.bedroom_lights
  #           transition: 2
  #     scene_bedroom_nightlight:
  #       icon_template: mdi:lightbulb-outline
  #       value_template: "{{ states.binary_sensor.scene_bedroom_nightlight.state }}"
  #       turn_on:
  #         service: scene.turn_on
  #         entity_id: scene.bedroom_nightlight
  #       turn_off:
  #         service: light.turn_off
  #         data:
  #           entity_id: light.bedroom_lights
  #           transition: 2
  - platform: flux
    name: flux_bedroom
    mode: mired
    disable_brightness_adjust: true
    lights:
      - light.bedroom_1
      - light.bedroom_2
      - light.bedroom_3
      - light.bedside_left
      - light.bedside_right
      - light.ledstrip_bed
  - platform: flux
    name: flux_bedroom_fast
    mode: mired
    transition: 1
    disable_brightness_adjust: true
    lights:
      - light.bedroom_1
      - light.bedroom_2
      - light.bedroom_3
      - light.bedside_left
      - light.bedside_right
      - light.ledstrip_bed

#####################
#    AUTOMATIONS    #
#####################
automation:
  # - alias: '[bedroom|light] Turn on lights through motion' #was: bedroom_motion_lights
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_bedroom
  #     to: 'on'
  #   condition:
  #     condition: numeric_state
  #     entity_id: sensor.illumination_bedroom
  #     below: 10
  #   action:
  #     service: scene.turn_on
  #     data:
  #       entity_id: scene.{{ states.sensor.bedroom_scene.state }}
  # - alias: '[bedroom|light] Match scene sensor' #was: bedroom_time_lights
  #   trigger:
  #     platform: state
  #     entity_id: sensor.bedroom_scene
  #   condition:
  #     condition: state
  #     entity_id: light.bedroom_lights
  #     state: 'on'
  #   action:
  #     service: scene.turn_on
  #     data:
  #       entity_id: scene.{{ states.sensor.bedroom_scene.state }}
  - alias: '[bedroom|light] Toggle independent bedroom lights'
    mode: single
    trigger:
      platform: event
      event_type: deconz_event
      #event_data:
        #id: rw1021_13
        #event: 1000
    action:
      # - service: system_log.write
      #   data:
      #     message: >-
      #       "Deconz switch pressed with event data: {{ trigger.event.data.event == 1000 }}, {{ trigger.event.data.event == '1000' }}"
      #     level: info
      - choose:
          - conditions:   ################## CONDITIONS BELOW ARE FOR QUICK PRESS-RELEASE ##################
              - condition: template
                value_template: "{{ trigger.event.data.event == 1002 }}" # X000 means quick-press X002 means quick-press release
            sequence:
              - service: light.toggle
                entity_id:
                  - light.bedroom_1
                  - light.bedroom_2
                  - light.bedroom_3
              - delay:
                  milliseconds: 100
              - condition: state
                entity_id: light.bedroom_1
                state: 'on'
              - service: switch.flux_bedroom_fast_update
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 2002 }}"
            sequence:
              - service: light.toggle
                entity_id:
                  - light.bedside_left
              - delay:
                  milliseconds: 100
              - condition: state
                entity_id: light.bedside_left
                state: 'on'
              - service: switch.flux_bedroom_fast_update
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 3002 }}"
            sequence:
              - service: light.toggle
                entity_id:
                  - light.bedside_right
              - delay:
                  milliseconds: 100
              - condition: state
                entity_id: light.bedside_right
                state: 'on'
              - service: switch.flux_bedroom_fast_update
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 4002 }}"
            sequence:
              - service: light.toggle
                entity_id:
                  - light.ledstrip_bed
              - delay:
                  milliseconds: 100
              - condition: state
                entity_id: light.bedside_right
                state: 'on'
              - service: switch.flux_bedroom_fast_update
          - conditions: ################## CONDITIONS BELOW ARE FOR LONG PRESS ##################
            - condition: template
              value_template: "{{ trigger.event.data.event == 1001 }}"
            sequence:
              - service: light.turn_on
                data:
                  brightness_step_pct: 10
                  entity_id:
                    - light.bedroom_1
                    - light.bedroom_2
                    - light.bedroom_3
              - delay:
                  milliseconds: 100
              - service: switch.flux_bedroom_fast_update
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 2001 }}"
            sequence:
              - service: light.turn_on
                data:
                  brightness_step_pct: 10
                  entity_id:
                    - light.bedside_left
              - delay:
                  milliseconds: 100
              - service: switch.flux_bedroom_fast_update
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 3001 }}"
            sequence:
              - service: light.turn_on
                data:
                  brightness_step_pct: 10
                  entity_id:
                    - light.bedside_right
              - delay:
                  milliseconds: 100
              - service: switch.flux_bedroom_fast_update
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 4001 }}"
            sequence:
              - service: light.turn_on
                data:
                  brightness_step_pct: 10
                  entity_id:
                    - light.ledstrip_bed
              - delay:
                  milliseconds: 100
              - service: switch.flux_bedroom_fast_update
      # - delay:
      #     seconds: 1
      # - service: switch.flux_bedroom_fast_update


  #Toggle bedroom lights when switch is pressed
  - alias: '[bedroom|light] Switch toggle' #was: bedroom_switch_toggle
    mode: restart
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_bedroom
        click_type: single
    action:
      - service: script.toggle_bedroom_lights
      # - service: input_boolean.turn_on
      #   data:
      #     entity_id: input_boolean.bedroom_button_pressed
      - service: timer.cancel
        data:
          entity_id: timer.bedroom_button_pressed
      - service: timer.start
        data:
          entity_id: timer.bedroom_button_pressed
          duration: '00:30:00'


  #Cycle bedroom lights when switch is pressed twice
  - alias: '[bedroom|light] Cycle scenes with button'
    mode: restart
    trigger:
      platform: event
      event_type: xiaomi_aqara.click
      event_data:
        entity_id: binary_sensor.switch_bedroom
        click_type: double
    action:
    - service: input_select.select_next
      data:
        entity_id: input_select.bedroom_scenes
    - service: scene.turn_on
      data:
        entity_id: scene.bedroom_{{states.input_select.bedroom_scenes.state}}
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.bedroom_button_pressed
    - service: timer.cancel
      data:
        entity_id: timer.bedroom_button_pressed
    - service: timer.start
      data:
        entity_id: timer.bedroom_button_pressed
        duration: '00:30:00'

  - alias: '[bedroom|light] Lights timeout start' #was: timeout_bedroom_lights_button
    trigger:
      platform: event
      event_type: timer.started
      event_data:
        entity_id: timer.bedroom_button_pressed
    action:
      - service: scene.create
        data:
          scene_id: bedroom_lighting_automation_before
          snapshot_entities:
            - automation.bedroom_light_turn_on_lights_through_motion
            - automation.bedroom_light_turn_off_lights
            - automation.bedroom_light_match_scene_sensor
      - service: homeassistant.turn_off
        entity_id:
          - automation.bedroom_light_turn_on_lights_through_motion
          - automation.bedroom_light_turn_off_lights
          - automation.bedroom_light_match_scene_sensor
    
  - alias: '[bedroom|light] Lights timeout stop' #was: timeout_finished_bedroom_lights_button
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.bedroom_button_pressed
      # - platform: state
      #   entity_id: timer.button_pressed
      #   from: 'active'
      #   to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.sleep_tracking_on
        state: 'off'
    action:
      - service: scene.turn_on
        entity_id: scene.bedroom_lighting_automation_before
      - service: automation.trigger
        entity_id:
          - automation.bedroom_light_turn_off_lights

  #Turn off bedroom lights if no motion has been detected for 10 minutes
  # - alias: '[bedroom|light] Turn off lights' #was: bedroom_nomotion_turn_off
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.motion_sensor_bedroom
  #     from: 'on'
  #     to: 'off'
  #     for: 00:10:00
  #   action:
  #     service: light.turn_off
  #     entity_id:
  #       - light.bedroom_lights

  #Wakeup light
  # - alias: '[bedroom|light] Wakeup light' #was: bedroom_wakeup_light
    # trigger:
    #   platform: template
  #     value_template: "{% if (states.sensor.wakeup_time.state|int - as_timestamp(states.sensor.time.last_changed)|int)/3600 >= -0.5 and (as_timestamp(states.calendar.asml_werkschema.attributes.start_time)|timestamp_custom('%y%m%d')|int == now().strftime('%y%m%d')|int) and states.input_boolean.sleep_tracking_on.state == 'on' %}True{% else %}False{% endif %}"
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.sleep_tracking_on
  #       state: 'on'
  #   action:
  #     - service: script.wakeup_sunrise_sequence

########## SLEEP TRACKING ##########
  - alias: '[bedroom|light] Sleep tracking start' #was: "Turn off lights when sleep tracking starts"
    trigger:
      platform: state
      entity_id: input_boolean.sleep_tracking_on
      to: 'on'
    action:
      - service: tts.google_say
        entity_id: media_player.living_room_speaker
        data:
          message: "Good night"
      - service: light.turn_off
        data:
          entity_id: all
          transition: 10
      - service: automation.turn_off
        entity_id:
          - group.bedroom_lighting_automations
          - group.kitchen_lighting_automations
          - group.livingroom_lighting_automations
          - group.study_lighting_automations
          - automation.bathroom_light_turn_on_light_through_motion
          - automation.entry_light_turn_on_light_through_motion
      - service: climate.set_temperature
        data:
          entity_id: climate.heating
          temperature: 5
      - service: climate.turn_off
        entity_id: climate.heating
      - delay: '00:00:10'
      - service: light.turn_off
        entity_id: all

  - alias: '[bedroom|light] Wakeup alarm' #was: "Turn on lights during wakeup"
    trigger:
      platform: state
      entity_id: input_boolean.wakeup_alarm_on
      to: 'on'
    action:
      choose:
        - conditions:
            - condition: numeric_state
              entity_id: sensor.people_in_bed
              above: 1
          sequence:
            - service: light.turn_on
              data:
                entity_id: light.bedside_right
                brightness: 10
      default:
        - service: scene.turn_on
          entity_id: scene.bedroom_bright_wakeup

  - alias: '[bedroom|light] Sleep tracking stop' #was: "Automation to run when ending sleep tracking"
    trigger:
      platform: state
      entity_id: input_boolean.sleep_tracking_on
      to: 'off'
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.people_in_bed
                above: 1
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.wakeup_alarm_on
              - service: automation.turn_on
                entity_id:
                  - group.kitchen_lighting_automations
                  - group.livingroom_lighting_automations
                  - group.study_lighting_automations
                  - automation.bathroom_light_turn_on_light_through_motion
                  - automation.entry_light_turn_on_light_through_motion
              - wait_for_trigger:
                  - platform: numeric_state
                    entity_id: sensor.people_in_bed
                    below: 1
              - service: automation.turn_on
                entity_id: group.bedroom_lighting_automations
        default:
          - service: tts.google_say
            entity_id: media_player.living_room_speaker
            data:
              message: "Good morning!"
          - service: input_boolean.turn_off
            entity_id: input_boolean.wakeup_alarm_on
          - service: switch.turn_on
            entity_id: switch.blitzwolf_watercooker
          - service: automation.turn_on
            entity_id:
              - group.bedroom_lighting_automations
              - group.kitchen_lighting_automations
              - group.livingroom_lighting_automations
              - group.study_lighting_automations
              - automation.bathroom_light_turn_on_light_through_motion
              - automation.entry_light_turn_on_light_through_motion
          - service: homeassistant.turn_off
            entity_id: climate.electric_blanket

  #shelly toggle
  - alias: '[bedroom|light] Shelly toggle'
    mode: restart
    trigger:
      - platform: state
        entity_id: switch.shelly_bedroom
    condition:
      - condition: state
        entity_id: switch.shelly_bedroom
        state:
          - 'on'
          - 'off'
        for:
          seconds: 5
    action:
      - service: light.toggle
        data:
          entity_id:
            - light.bedroom_lights
          brightness: 255
          transition: 0.5
      - service: switch.flux_bedroom_update
      - service: automation.turn_off
        entity_id:
          - group.bedroom_lighting_automations
      - delay:
          seconds: 30
      - service: automation.turn_on
        entity_id:
          - group.bedroom_lighting_automations

  - alias: '[bedroom|light] Update illumination limit'
    mode: single
    trigger:
      - platform: state
        entity_id: switch.shelly_bedroom
    condition:
      - condition: state
        entity_id: switch.shelly_bedroom
        state:
          - 'on'
          - 'off'
        for:
          seconds: 5
    action:
      - delay:
          seconds: 1
      - choose:
          - conditions:
              - condition: state
                entity_id: light.bedroom_lights
                state: 'on'
            sequence:
              - service: input_number.increment
                entity_id: input_number.bedroom_illumination_limit
          - conditions:
              - condition: state
                entity_id: light.bedroom_lights
                state: 'off'
            sequence:
              - service: input_number.decrement
                entity_id: input_number.bedroom_illumination_limit


  - alias: '[bedroom|light]Lights_when_cabinet_is_open'
    mode: queued
    trigger:
      platform: state
      entity_id: binary_sensor.door_window_sensor_bedroom_closet
      to: 'on'
    action:
      - service: scene.create
        data:
          scene_id: bedroom_1_before
          snapshot_entities:
            light.bedroom_1
      - service: light.turn_on
        data:
          entity_id: light.bedroom_1
          brightness: 255
          color_temp: 280
          transition: 0.5
      - delay:
          seconds: 1
      - wait_template: "{{ is_state('binary_sensor.door_window_sensor_bedroom_closet', 'off')}}"
        timeout: '00:10:00'
        continue_on_timeout: false   #prevent restoring old light state if the closet remains open for a long time
      - service: scene.turn_on
        data:
          entity_id: scene.bedroom_1_before
          transition: 1
      - delay:
          seconds: 2

  - alias: '[bedroom|light]Gradual light automation'
    mode: restart
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_bedroom
      to: 'on'
    condition:
      # - condition: numeric_state
      #   entity_id: sensor.illumination_bedroom
      #   below: 10
      - condition: template
        value_template: "{{ states('sensor.average_illumination_bedroom')|int < states('input_number.bedroom_illumination_limit')|int }}"
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id:
            - light.bedroom_1
            - light.bedroom_2
          transition: "{% if is_state('light.bedroom_1', 'on') %}3{% else %}0.5{% endif %}"
          brightness: >-
            {% if now().hour < 4 %}
              50
            {% elif now().hour < 19 %}
              255
            {% elif now().hour < 22 %}
              {{ (255 - 205 * (now().hour - 19)/3)|int }}
            {% else %}
              50
            {% endif %}
      - service: light.turn_on
        data:
          entity_id:
            - light.bedroom_3
          transition: "{% if is_state('light.bedroom_3', 'on') %}3{% else %}0.5{% endif %}"
          brightness: >-
            {% if now().hour < 4 %}
              0
            {% elif now().hour < 19 %}
              255
            {% elif now().hour < 21 %}
              {{ (255 - 255 * (now().hour - 19)/2)|int }}
            {% else %}
              0
            {% endif %}
      - service: light.turn_on
        data:
          entity_id:
            - light.bedside_left
            - light.bedside_right
          transition: "{% if is_state('light.bedside_left', 'on') %}3{% else %}0.5{% endif %}"
          brightness: >-
            {% if now().hour < 4 %}
              0
            {% elif now().hour < 21 %}
              255
            {% elif now().hour < 22.5 %}
              {{ (255 - 255 * (now().hour - 19)/1.5)|int }}
            {% else %}
              0
            {% endif %}
      - service: light.turn_on
        data:
          entity_id:
            - light.ledstrip_bed
          transition: "{% if is_state('light.ledstrip_bed', 'on') %}3{% else %}0.5{% endif %}"
          brightness: >-
            {% if now().hour < 7 %}
              50
            {% elif now().hour < 20 %}
              0
            {% elif now().hour < 22.5 %}
              {{ (255 - 255 * (now().hour - 19)/2.5)|int }}
            {% else %}
              50
            {% endif %}
      - service: switch.flux_bedroom_update
      - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.motion_sensor_bedroom
            to: 'off'
            for:
              minutes: "{{ states('input_number.bedroom_light_timeout')|int }}"
      - service: light.turn_on
        data:
          entity_id: light.bedroom_lights
          brightness_step: -50
          transition: 0.5
      - delay:
          seconds: 15
      - service: light.turn_off
        entity_id: light.bedroom_lights

  # - alias: '[bedroom|light]Turn on LEDstrip when bed presence changes'
  #   mode: restart
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.bed_occupied
  #   action:
  #     - service: scene.create
  #       data:
  #         scene_id: bedroom_ledstrip_before
  #         snapshot_entities:
  #           light.ledstrip_bed
  #     - choose:
  #         - conditions:
  #             - condition: state
  #               entity_id: input_boolean.sleep_tracking_on
  #               state: 'on'
  #           sequence:
  #             - service: light.turn_on
  #               data:
  #                 entity_id: light.ledstrip_bed
  #                 brightness: 20
  #                 color_temp: 300
  #       default:
  #         - service: light.turn_on
  #           data:
  #             entity_id: light.ledstrip_bed
  #             brightness: 255
  #             color_temp: 300
  #     - delay:
  #         seconds: 30
  #     - service: scene.turn_on
  #       data:
  #         entity_id: scene.bedroom_ledstrip_before
  #         transition: 1
  #     - delay:
  #         seconds: 2

  - alias: '[bedroom|wakeup]GET OUT OF BED!'
    mode: single
    trigger:
      platform: state
      entity_id: input_boolean.sleep_tracking_on
      from: 'on'
      to: 'off'
    condition:
      - condition: state
        entity_id: person.sander_blok
        state: 'home'
      - condition: state
        entity_id: person.tamara
        state: 'not_home'
      - condition: numeric_state
        entity_id: sensor.people_in_bed
        below: 2
    action:
      - service: media_player.volume_set
        data:
          entity_id: media_player.living_room_speaker
          volume_level: 1
      - service: tts.cloud_say
        data:
          entity_id: media_player.living_room_speaker
          message: 'You have five minutes to get out of bed'
          language: en-US
          options:
            gender: female
      - wait_for_trigger:
          - platform: state
            entity_id: sensor.people_in_bed
        timeout:
          minutes: 3
        continue_on_timeout: true
      - choose:
          - conditions: "{{ wait.trigger != none }}"
            sequence:
              - service: tts.cloud_say
                data:
                  entity_id: media_player.living_room_speaker
                  message: 'You successfully got out of bed. Well done!'
                  language: en-US
                  options:
                    gender: female
        default:
          - service: light.turn_on
            data:
              entity_id: light.bedroom_lights
              flash: short
          - service: tts.cloud_say
            data:
              entity_id: media_player.living_room_speaker
              message: 'You have two minutes to get out of bed'
              language: en-US
              options:
                gender: female
          - wait_for_trigger:
              - platform: state
                entity_id: sensor.people_in_bed
            timeout:
              minutes: 2
            continue_on_timeout: true
          - choose:
              - conditions: "{{ wait.trigger != none }}"
                sequence:
                  - service: tts.cloud_say
                    data:
                      entity_id: media_player.living_room_speaker
                      message: 'You successfully got out of bed. Well done!'
                      language: en-US
                      options:
                        gender: female
            default:
              - service: tts.cloud_say
                data:
                  entity_id: media_player.living_room_speaker
                  message: 'You have five seconds to get out of bed'
                  language: en-US
                  options:
                    gender: female
              - wait_for_trigger:
                  - platform: state
                    entity_id: sensor.people_in_bed
                timeout:
                  seconds: 5
                continue_on_timeout: true
              - choose:
                  - conditions: "{{ wait.trigger != none }}"
                    sequence:
                      - service: tts.cloud_say
                        data:
                          entity_id: media_player.living_room_speaker
                          message: 'You successfully got out of bed. Well done!'
                          language: en-US
                          options:
                            gender: female
                default:
                  - service: tts.cloud_say
                    data:
                      entity_id: media_player.living_room_speaker
                      message: 'You did not get out of bed. Initiating self destruct sequence'
                      language: en-US
                      options:
                        gender: female



################
#    SCENES    #
################
scene:
  - name: bedroom_bright_cool
    entities:
      light.bedroom_lights:
        state: on
        brightness: 254
        color_temp: 280
        transition: 2
  - name: bedroom_bright_wakeup
    entities:
      light.bedroom_lights:
        state: on
        brightness: 254
        color_temp: 350
        transition: 25
  - name: bedroom_bright_warm
    entities:
      light.bedroom_lights:
        state: on
        brightness: 254
        color_temp: 454
        transition: 2
  - name: bedroom_goodnight
    entities:
      light.bedroom_1:
        state: on
        brightness: 141
        color_temp: 454
        transition: 2
      light.bedroom_2:
        state: on
        brightness: 141
        color_temp: 454
        transition: 2
      light.bedroom_3:
        state: off
        transition: 2
      light.bedside_right:
        state: on
        brightness: 141
        color_temp: 454
        transition: 2
      light.bedside_left:
        state: on
        brightness: 141
        color_temp: 454
        transition: 2
      light.ledstrip_bed:
        state: on
        brightness: 141
        color_temp: 454
  - name: bedroom_nightlight
    entities:
      light.bedroom_1:
        state: on
        brightness: 1
        color_temp: 454
        transition: 3
      light.bedroom_2:
        state: off
        transition: 3
      light.bedroom_3:
        state: off
        transition: 3
      light.bedside_right:
        state: off
        transition: 3
      light.bedside_left:
        state: off
        transition: 3
      light.ledstrip_bed:
        state: on
        brightness: 30
        color_temp: 454
  - name: bedroom_readinglight
    entities:
      light.bedside_right:
        state: on
        brightness: 50
        transition: 3
      light.bedside_left:
        state: on
        brightness: 50
        transition: 3
  - name: bedroom_midnight_walkaround
    entities:
      light.bedroom_1:
        state: on
        brightness: 1
        color_temp: 454
        transition: 3
      light.bedroom_2:
        state: off
      light.bedroom_3:
        state: off
      light.bedside_right:
        state: off
      light.bedside_left:
        state: off
      light.ledstrip_bed:
        state: on
        brightness: 30
        color_temp: 454

################
#    GROUPS    #
################
group:
  bedroom_lighting_automations:
    entities:
      # - automation.bedroom_light_turn_off_lights
      # - automation.bedroom_light_match_scene_sensor
      # - automation.bedroom_light_turn_on_lights_through_motion
      - automation.bedroom_light_gradual_light_automation
  bedroom_scenes:
    entities:
      - scene.bedroom_bright_cool
      - scene.bedroom_bright_wakeup
      - scene.bedroom_bright_warm
      - scene.bedroom_goodnight
      - scene.bedroom_nightlight
      - scene.bedroom_readinglight
      - scene.bedroom_midnight_walkaround
  bedscale_entities:
    entities:
      - input_number.bedscalecalibration_lowvalue_kg
      - input_number.bedscalecalibration_highvalue_kg
      - input_number.bedscalecalibration_lowvalue_raw
      - input_number.bedscalecalibration_highvalue_raw
      - sensor.bed_weight_calibrated
      - sensor.hx711_raw_value
      - sensor.hx711_value
      - sensor.people_in_bed
      - binary_sensor.bed_occupied



################
#    LIGHTS    #
################
light:
  - platform: group
    name: Bedroom Lights
    entities:
      - light.bedroom_1
      - light.bedroom_2
      - light.bedroom_3
      - light.bedside_right
      - light.bedside_left
      - light.ledstrip_bed

#################
#    SCRIPTS    #
#################
script:
  toggle_bedroom_lights:
    sequence:
    - service_template: script.toggle_bedroom_lights_{% if is_state('light.bedroom_lights', 'off')%}on{% else %}off{% endif %}

  toggle_bedroom_lights_on:
    sequence:
      service: scene.turn_on
      data:
        entity_id: scene.{{ states.sensor.bedroom_scene.state }}

  # toggle_bedroom_lights_bright:
  #   sequence:
  #       - service: scene.turn_on
  #         entity_id: scene.bedroom_bright_warm

  toggle_bedroom_lights_off:
    sequence:
        - service: light.turn_off
          entity_id: light.bedroom_lights

  wakeup_sunrise_sequence:
    sequence:
      - service: light.turn_on
        data:
          entity_id: light.bedroom_1
          color_temp: 454
          brightness: 1
      - delay:
          minutes: 3
      - service: light.turn_on
        data:
          entity_id: light.bedroom_2
          color_temp: 454
          brightness: 1
      - delay:
          minutes: 2
      - service: light.turn_on
        data:
          entity_id: light.bedroom_3
          color_temp: 454
          brightness: 1
      - delay:
          minutes: 5
      - service: light.turn_on
        data:
          entity_id:
            - light.bedroom1
            - light.bedroom2
            - light.bedroom3
          color_temp: 380
          brightness: 85
          transition: 600
      - delay:
          minutes: 10
      - service: light.turn_on
        data:
          entity_id: light.bedroom_lights
          color_temp: 350
          brightness: 254
          transition: 600

  bed_preheating:
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: climate.electric_blanket
      - service: climate.set_temperature
        data:
          entity_id: climate.electric_blanket
          temperature: >-
            {{ states.input_number.bed_preheat_temp.state }}
      - delay: '00:{{ states.input_number.bed_preheat_time.state|int }}:00'
      - service: climate.set_temperature
        data:
          entity_id: climate.electric_blanket
          temperature: >-
            {{ states.input_number.bed_postheat_temp.state }}
  tare_bed_scale:
    sequence:
      - service: input_number.set_value
        data:
          entity_id: input_number.bedscalecalibration_helper
          value: >-
            {{ states('input_number.bedscalecalibration_lowvalue_raw')|int - states('sensor.hx711_raw_value')|int }}
      - service: input_number.set_value
        data:
          entity_id: input_number.bedscalecalibration_lowvalue_raw
          value: >-
            {{ states('input_number.bedscalecalibration_lowvalue_raw')|int - states('input_number.bedscalecalibration_helper')|int }}
      - service: input_number.set_value
        data_template:
          entity_id: input_number.bedscalecalibration_highvalue_raw
          value: >-
            {{ (states('input_number.bedscalecalibration_highvalue_raw')|int - states('input_number.bedscalecalibration_helper')|int)|int}}

  test_ledstrip_autobrightness:
    sequence:
      - service: light.turn_on
        data:
          entity_id:
            - light.ledstrip_bed
          transition: "{% if is_state('light.ledstrip_bed', 'on') %}3{% else %}0.5{% endif %}"
          brightness: >-
            {% if now().hour < 7 %}
              50
            {% elif now().hour < 20 %}
              0
            {% elif now().hour < 22.5 %}
              {{ (255 - 255 * (now().hour - 19)/2.5)|int }}
            {% else %}
              50
            {% endif %}
