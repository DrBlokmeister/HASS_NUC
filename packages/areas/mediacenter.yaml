homeassistant:
  customize_glob:
    sensor.*elec_*_temp:
      device_class: 'temperature'
      unit_of_measurement: '°C'
      templates:
        icon_color: >-
          var maxval = 60;
          var minval = 30;
          var maxhue = 0;
          var minhue = 140;
          if (state > maxval) return 'hsl(' + maxhue.toString() + ',80%,50%)';
          if (state < minval) return 'hsl(' + minhue.toString() + ',80%,50%)';
          var hue = Math.round((Number(state) - minval) / (maxval - minval) * (maxhue - minhue) + minhue );
          return 'hsl(' + hue.toString() + ',80%,50%)';

command_line:
  - sensor:
      name: 'CoreELEC CPU temp'
      unit_of_measurement: '°C'
      scan_interval: 60
      icon: 'mdi:thermometer'
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        cputemp | awk '{print $1}' || echo -1
      value_template: "{{ value | float(-1) }}"
      #availability_template: '{{ is_state('device_tracker.coreelec', 'home') }}'
  - sensor:
      name: 'CoreELEC GPU temp'
      unit_of_measurement: '°C'
      scan_interval: 60
      icon: 'mdi:thermometer'
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        gputemp | awk '{print $1}' || echo -1
      value_template: "{{ value | float(-1) }}"
      #availability: '{{ is_state('device_tracker.coreelec', 'home') }}'
  - sensor:
      name: 'CoreELEC CPU Usage'
      unit_of_measurement: '%'
      scan_interval: 60
      icon: 'mdi:chip'
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        top -bn1 | awk '/%Cpu\(s\):/ {print $2}' | tr -d '%' || echo -1
      value_template: "{{ value | float(-1) }}"
  - sensor:
      name: 'CoreELEC Memory Usage'
      unit_of_measurement: '%'
      scan_interval: 60
      icon: 'mdi:memory'
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        free -m | awk 'NR==2{printf "%.0f\n", $3*100/$2 }' || echo -1
      #availability: '{{ is_state('device_tracker.coreelec', 'home') }}'
      value_template: "{{ value | float(-1) }}"
  - sensor:
      name: 'CoreELEC Disk Usage'
      unit_of_measurement: '%'
      scan_interval: 60
      icon: 'mdi:harddisk'
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        df -h /storage | awk '{ if (NR==2) print $5}' | tr -d '%' || echo -1
      #availability: '{{ is_state('device_tracker.coreelec', 'home') }}'
      value_template: "{{ value | float(-1) }}"
  - sensor:
      name: CoreELEC HDMI Info
      scan_interval: 60
      command_timeout: 40
      icon: mdi:television
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q root@10.0.20.50
        "awk 'BEGIN{print \"{\"}
              /VIC:/{printf \"  \\\"vic\\\": \\\"%s\\\",\\n  \\\"vic_desc\\\": \\\"%s\\\",\\n\", \
                     \$2, substr(\$0, index(\$0, \$3))}
              /Colour depth:/{printf \"  \\\"color_depth\\\": \\\"%s\\\",\\n\", \$3}
              /Colourspace:/{printf \"  \\\"color_space\\\": \\\"%s\\\",\\n\", \$2}
              /Colour range:/{printf \"  \\\"color_range\\\": \\\"%s\\\",\\n\", \$3}
              /EOTF:/{printf \"  \\\"eotf\\\": \\\"%s\\\",\\n\", \$2}
              /Colourimetry:/{printf \"  \\\"colorimetry\\\": \\\"%s\\\"\\n\", \$2}
              END{print \"}\"}' /sys/class/amhdmitx/amhdmitx0/config" || echo '{}'
      value_template: "{{ value_json.vic }}"
      json_attributes:
        - vic_desc
        - color_depth
        - color_space
        - color_range
        - eotf
        - colorimetry

template:
  - sensor:
      - name: "CoreELEC Resolution"
        unique_id: yaml_template_sensor_coreelec_resolution
        state: "{{ state_attr('sensor.coreelec_hdmi_info', 'vic_desc') }}"
        icon: mdi:television
      - name: "CoreELEC HDR Mode"
        unique_id: yaml_template_sensor_coreelec_hdr_mode
        state: "{{ state_attr('sensor.coreelec_hdmi_info', 'eotf') }}"
        icon: mdi:hdr
      - name: "CoreELEC Colorimetry"
        unique_id: yaml_template_sensor_coreelec_colorimetry
        state: "{{ state_attr('sensor.coreelec_hdmi_info', 'colorimetry') }}"
        icon: mdi:hdr
      - name: "CoreELEC Color Space"
        unique_id: yaml_template_sensor_coreelec_color_space
        state: "{{ state_attr('sensor.coreelec_hdmi_info', 'color_space') }}"
        icon: mdi:hdr


#################
#    SENSORS    #
#################
sensor:

########################
#    BINARY SENSORS    #
########################
binary_sensor:

##################
#    SWITCHES    #
##################
switch:
  - platform: template
    switches:
      ambilight:
        friendly_name: "Ambilight"
        unique_id: yaml_template_switch_ambilight
        icon_template: mdi:television-ambient-light
        value_template: >-
          {{
            is_state('switch.ambilight', 'on') and
            is_state('light.atmoorb_left', 'on') and is_state('light.atmoorb_right', 'on') and is_state('light.ledstrip_falcon', 'on') and
            is_state_attr('light.atmoorb_left', 'effect', 'E1.31') and is_state_attr('light.atmoorb_right', 'effect', 'E1.31') and is_state_attr('light.ledstrip_falcon', 'effect', 'E1.31') and
            is_state('switch.hyperion_atmoorb_left_component_led_device', 'on') and is_state('switch.hyperion_atmoorb_right_component_platform_capture', 'on') and is_state('switch.hyperion_ledstrip_falcon_component_platform_capture', 'on')
          }}
        turn_on:
          service: script.turn_on_ambilight
        turn_off:
          service: script.turn_off_ambilight
      ambilight_hyperhdr:
        friendly_name: "Ambilight HyperHDR"
        unique_id: yaml_template_switch_ambilight_hyperhdr
        icon_template: mdi:television-ambient-light
        value_template: >-
          {{
            is_state('switch.ambilight', 'on') and
            is_state('light.atmoorb_left', 'on') and is_state('light.atmoorb_right', 'on') and is_state('light.ledstrip_falcon', 'on') and
            is_state_attr('light.atmoorb_left', 'effect', 'E1.31') and is_state_attr('light.atmoorb_right', 'effect', 'E1.31') and is_state_attr('light.ledstrip_falcon', 'effect', 'E1.31') and
            is_state('light.hyperhdr_atmoorb_left', 'on') and is_state('light.hyperhdr_atmoorb_right', 'on') and is_state('light.hyperhdr_falconlights', 'on') and
            is_state('switch.hyperhdr_atmoorb_left_component_led_device', 'on') and is_state('switch.hyperhdr_atmoorb_right_component_led_device', 'on') and is_state('switch.hyperhdr_falconlights_component_led_device', 'on')
          }}
        turn_on:
          service: script.turn_on_ambilight_hyperhdr
        turn_off:
          service: script.turn_off_ambilight_hyperhdr
      tv_json_cec:
        friendly_name: "TV json CEC"
        unique_id: yaml_template_switch_tv_json_cec
        icon_template: mdi:television
        value_template: "{{ is_state('device_tracker.tv', 'home') }}"
        availability_template: "{{ is_state('device_tracker.coreelec', 'home') and not is_state('media_player.coreelec', 'unavailable') }}"
        turn_on:
          service: kodi.call_method
          data:
            entity_id: media_player.coreelec
            method: Addons.ExecuteAddon
            addonid: script.json-cec
            params:
              command: activate
        turn_off:
          service: kodi.call_method
          data:
            entity_id: media_player.coreelec
            method: Addons.ExecuteAddon
            addonid: script.json-cec
            params:
              command: standby

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[mediacenter|light] Turn off lights when mediaplayer starts'
    id: mediacenter_light_automation
    mode: single
    trigger:
      - platform: state
        entity_id: media_player.samsung_tv
        to: 'on'
      - platform: state
        entity_id: media_player.coreelec
        from: 'idle'
        to: 'playing'
      - platform: state
        entity_id: media_player.plex_plexkodiconnect_kodi_coreelec
        from: 'idle'
        to: 'playing'
      - platform: numeric_state
        entity_id: sensor.plug_tv_power
        above: 10
        for:
          seconds: 10
    action:
      - service: scene.create
        data:
          scene_id: amplifier_power_tv_before
          snapshot_entities:
            - switch.amplifier_power
      - service: scene.create
        data:
          scene_id: amplifier_channel_tv_before
          snapshot_entities:
            - select.livingroom_receiver_audio_channel
      - service: switch.turn_on
        continue_on_error: true
        entity_id: switch.amplifier_power
      - service: switch.turn_on
        continue_on_error: true
        entity_id: switch.ambilight_hyperhdr
      - service: button.press
        continue_on_error: true
        target:
          entity_id: button.set_livingroom_channel_to_tv
      - wait_for_trigger:
          - platform: state
            entity_id: media_player.samsung_tv
            to: 'off'
            for:
              minutes: 2
          - platform: numeric_state
            entity_id: sensor.plug_tv_power
            below: 10
            for:
              minutes: 2
      - service: switch.turn_off
        continue_on_error: true
        entity_id: switch.ambilight_hyperhdr
      - delay:
          seconds: 2
      - service: scene.turn_on
        data:
          entity_id: scene.amplifier_channel_tv_before
      - delay:
          seconds: 2
      - service: scene.turn_on
        data:
          entity_id: scene.amplifier_power_tv_before
      # - service: switch.turn_off
      #   continue_on_error: true
      #   entity_id: switch.amplifier_power

  - alias: "Kodi: turn on"
    trigger:
      - platform: device
        device_id: !secret kodi_device_id
        domain: kodi
        entity_id: media_player.coreelec
        type: turn_on
    action:
      - service: kodi.call_method
        data:
          entity_id: media_player.coreelec
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: activate

  - alias: "Kodi: turn off"
    trigger:
      - platform: device
        device_id: !secret kodi_device_id
        domain: kodi
        entity_id: media_player.coreelec
        type: turn_off
    action:
      - service: kodi.call_method
        data:
          entity_id: media_player.coreelec
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: standby

  - alias: "[mediacenter|amplifier] Toggle amplifier through switch press"
    id: toggle_amplifier_through_switch_press
    mode: queued
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: "turntable"
          event: 1002  # Single press
      - platform: event
        event_type: deconz_event
        event_data:
          id: "turntable"
          event: 1004  # Double press
    action:
      - service: scene.create
        data:
          scene_id: amplifier_power_turntable_before
          snapshot_entities:
            - switch.amplifier_power
      - service: scene.create
        data:
          scene_id: amplifier_channel_turntable_before
          snapshot_entities:
            - select.livingroom_receiver_audio_channel
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1002 }}"
            sequence:
              - service: switch.turn_on
                data:
                  entity_id: switch.amplifier_power
              - delay:
                  seconds: 3
              - service: button.press
                target:
                  entity_id: button.set_livingroom_channel_to_phono
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1004 }}"
            sequence:
              - service: button.press
                target:
                  entity_id: button.set_livingroom_channel_to_tv
              - delay:
                  seconds: 1
              - service: scene.turn_on
                data:
                  entity_id: scene.amplifier_channel_turntable_before
              - delay:
                  seconds: 2
              - service: scene.turn_on
                data:
                  entity_id: scene.amplifier_power_turntable_before

  - alias: "[areas|mediacenter]Update Plex library if torrent completed"
    id: areas_mediacenter_update_plex_library_if_torrent_completed
    mode: restart
    trigger:
      platform: event
      event_type: transmission_downloaded_torrent
    condition:
      - condition: template
        value_template: "{{ 'path' in trigger.event.data }}"
    action:
      - choose:
          - conditions: >
              {{ "Series" in trigger.event.data.path }}
            sequence:
              - delay:
                  minutes: 5
              - service: plex.refresh_library
                data:
                  #server_name: "Tower"
                  library_name: "TV Shows"
          - conditions: >
              {{ "Movies" in trigger.event.data.path }}
            sequence:
              - delay:
                  minutes: 5
              - service: plex.refresh_library
                data:
                  #server_name: "Tower"
                  library_name: "Movies"
################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:
  turn_on_ambilight:
    alias: "[home|mediacenter] Turn on Ambilight"
    #unique_id: yaml_script_home_mediacenter_turn_on_ambilight #Scripts do not support unique IDs yet
    icon: mdi:television-ambient-light
    description: "Turns on Ambilight setup, including software LED devices and physical lights with effects."
    sequence:
      - service: switch.turn_on
        continue_on_error: true
        entity_id:
          - switch.ambilight_power
      - delay:
          seconds: 2
      # Turn on software LED devices with retries
      - repeat:
          until:
            - condition: or
              conditions:
                - condition: and
                  conditions:
                    # - condition: state
                    #   entity_id: switch.hyperion_apa102_component_led_device
                    #   state: 'on'
                    - condition: state
                      entity_id: switch.tv_apa102_universe_1_component_led_device
                      state: 'on'
                    - condition: state
                      entity_id: switch.tv_apa102_universe_2_component_led_device
                      state: 'on'
                    - condition: state
                      entity_id: switch.hyperion_atmoorb_right_component_led_device
                      state: 'on'
                    - condition: state
                      entity_id: switch.hyperion_atmoorb_left_component_led_device
                      state: 'on'
                - condition: template
                  value_template: "{{ repeat.index > 10 }}"
          sequence:
            - service: switch.turn_on
              continue_on_error: true
              entity_id:
                #- switch.hyperion_apa102_component_led_device
                - switch.tv_apa102_universe_1_component_led_device
                - switch.tv_apa102_universe_2_component_led_device
                - switch.hyperion_atmoorb_right_component_led_device
                - switch.hyperion_atmoorb_left_component_led_device
                - switch.hyperion_ledstrip_falcon_component_platform_capture
            - delay:
                seconds: 0.5  # Short delay before checking state
      - delay:
          seconds: 0.5
      - repeat:
          until:
            - condition: or
              conditions:
                - condition: and
                  conditions:
                    - condition: state
                      entity_id: light.livingroom_tv_ambilight
                      state: 'on'
                    - condition: state
                      entity_id: light.atmoorb_left
                      state: 'on'
                    - condition: state
                      entity_id: light.atmoorb_right
                      state: 'on'
                    - condition: state
                      entity_id: light.ledstrip_falcon
                      state: 'on'
                - condition: template
                  value_template: "{{ repeat.index > 10 }}"
          sequence:
            - service: light.turn_on
              continue_on_error: true
              data:
                brightness: 255
                effect: E1.31
                entity_id:
                  - light.livingroom_tv_ambilight
                  - light.atmoorb_left
                  - light.atmoorb_right
                  - light.ledstrip_falcon
            - delay:
                seconds: 0.5
      - service: light.turn_on
        continue_on_error: true
        data:
          entity_id:
            - light.tv_apa102_universe_1
            - light.tv_apa102_universe_2
            #- light.hyperion_apa102
            - light.hyperion_atmoorb_left
            - light.hyperion_atmoorb_right
            - light.hyperion_ledstrip_falcon
          brightness: 255
          effect: Rainbow swirl fast
      - delay:
          seconds: 5
      - repeat:
          until:
            - condition: or
              conditions:
                - condition: and
                  conditions:
            # - condition: state
            #   entity_id: light.hyperion_apa102
            #   state: 'off'
                    - condition: state
                      entity_id: light.tv_apa102_universe_1
                      state: 'off'
                    - condition: state
                      entity_id: light.tv_apa102_universe_2
                      state: 'off'
                    - condition: state
                      entity_id: light.hyperion_atmoorb_left
                      state: 'off'
                    - condition: state
                      entity_id: light.hyperion_atmoorb_right
                      state: 'off'
                    - condition: state
                      entity_id: light.hyperion_ledstrip_falcon
                      state: 'off'
                - condition: template
                  value_template: "{{ repeat.index > 10 }}"
          sequence:
            - service: light.turn_off
              continue_on_error: true
              data:
                entity_id:
                  - light.tv_apa102_universe_1
                  - light.tv_apa102_universe_2
                  #- light.hyperion_apa102
                  - light.hyperion_atmoorb_left
                  - light.hyperion_atmoorb_right
                  - light.hyperion_ledstrip_falcon
            - delay:
                seconds: 0.5  # Short delay before checking state

  turn_off_ambilight:
    alias: "[home|mediacenter] Turn off Ambilight"
    # unique_id: yaml_script_home_mediacenter_turn_off_ambilight #Scripts do not support unique IDs yet
    icon: mdi:television-off
    description: "Nicely turns off the Ambilight system, ensuring a smooth shutdown."
    sequence:
      # Apply "System Shutdown" effect to Hyperion light entities
      - service: light.turn_on
        continue_on_error: true
        data:
          entity_id:
            - light.tv_apa102_universe_1
            - light.tv_apa102_universe_2
            #- light.hyperion_apa102
            - light.hyperion_atmoorb_left
            - light.hyperion_atmoorb_right
            - light.hyperion_ledstrip_falcon
          effect: "Cinema dim lights"
      # Wait for the effect to complete
      - delay:
          seconds: 5
      # Turn off the component LED devices
      - service: switch.turn_off
        continue_on_error: true
        entity_id:
          - switch.tv_apa102_universe_1_component_led_device
          - switch.tv_apa102_universe_2_component_led_device
          #- switch.hyperion_apa102_component_led_device
          - switch.hyperion_atmoorb_right_component_led_device
          - switch.hyperion_atmoorb_left_component_led_device
          - switch.hyperion_ledstrip_falcon_component_platform_capture
      # Wait a moment before proceeding
      - delay:
          seconds: 0.5
      # Turn off the Hyperion lights
      - service: light.turn_off
        continue_on_error: true
        entity_id:
          - light.livingroom_tv_ambilight
          #- light.livingroom_tv_ambilight_first_half
          #- light.hyperion_apa102
          - light.atmoorb_left
          - light.atmoorb_right
          - light.ledstrip_falcon
      # Finally, turn off the Ambilight power supply
      - delay:
          seconds: 2
      - service: switch.turn_off
        continue_on_error: true
        entity_id: switch.ambilight_power

  turn_on_ambilight_hyperhdr:
    alias: "[home|mediacenter] Turn on Ambilight HyperHDR"
    icon: mdi:television-ambient-light
    description: "Turns on Ambilight setup using HyperHDR entities."
    sequence:
      - service: switch.turn_on
        continue_on_error: true
        entity_id:
          - switch.ambilight_power
      - delay:
          seconds: 2
      - repeat:
          until:
            - condition: or
              conditions:
                - condition: and
                  conditions:
                    - condition: state
                      entity_id: switch.hyperhdr_atmoorb_left_component_led_device
                      state: 'on'
                    - condition: state
                      entity_id: switch.hyperhdr_atmoorb_right_component_led_device
                      state: 'on'
                    - condition: state
                      entity_id: switch.hyperhdr_falconlights_component_led_device
                      state: 'on'
                - condition: template
                  value_template: "{{ repeat.index > 10 }}"
          sequence:
            - service: switch.turn_on
              continue_on_error: true
              entity_id:
                - switch.hyperhdr_atmoorb_left_component_led_device
                - switch.hyperhdr_atmoorb_right_component_led_device
                - switch.hyperhdr_falconlights_component_led_device
                - switch.hyperhdr_atmoorb_left_component_usb_capture
                - switch.hyperhdr_atmoorb_right_component_usb_capture
                - switch.hyperhdr_falconlights_component_usb_capture
            - delay:
                seconds: 0.5
      - delay:
          seconds: 0.5
      - repeat:
          until:
            - condition: or
              conditions:
                - condition: and
                  conditions:
                    - condition: state
                      entity_id: light.livingroom_tv_ambilight
                      state: 'on'
                    - condition: state
                      entity_id: light.atmoorb_left
                      state: 'on'
                    - condition: state
                      entity_id: light.atmoorb_right
                      state: 'on'
                    - condition: state
                      entity_id: light.ledstrip_falcon
                      state: 'on'
                - condition: template
                  value_template: "{{ repeat.index > 10 }}"
          sequence:
            - service: light.turn_on
              continue_on_error: true
              data:
                brightness: 255
                effect: E1.31
                entity_id:
                  - light.livingroom_tv_ambilight
                  - light.atmoorb_left
                  - light.atmoorb_right
                  - light.ledstrip_falcon
            - delay:
                seconds: 0.5
      - service: light.turn_on
        continue_on_error: true
        data:
          entity_id:
            - light.hyperhdr_atmoorb_left
            - light.hyperhdr_atmoorb_right
            - light.hyperhdr_falconlights
          brightness: 255
          effect: Rainbow swirl fast
      - delay:
          seconds: 5
      - repeat:
          until:
            - condition: or
              conditions:
                - condition: and
                  conditions:
                    - condition: state
                      entity_id: light.hyperhdr_atmoorb_left
                      state: 'off'
                    - condition: state
                      entity_id: light.hyperhdr_atmoorb_right
                      state: 'off'
                    - condition: state
                      entity_id: light.hyperhdr_falconlights
                      state: 'off'
                - condition: template
                  value_template: "{{ repeat.index > 10 }}"
          sequence:
            - service: light.turn_on
              continue_on_error: true
              data:
                entity_id:
                  - light.hyperhdr_atmoorb_left
                  - light.hyperhdr_atmoorb_right
                  - light.hyperhdr_falconlights
                effect: USB Capture
            - delay:
                seconds: 0.5

  turn_off_ambilight_hyperhdr:
    alias: "[home|mediacenter] Turn off Ambilight HyperHDR"
    icon: mdi:television-off
    description: "Nicely turns off the Ambilight system using HyperHDR."
    sequence:
      - service: light.turn_on
        continue_on_error: true
        data:
          entity_id:
            - light.hyperhdr_atmoorb_left
            - light.hyperhdr_atmoorb_right
            - light.hyperhdr_falconlights
          effect: "Cinema dim lights"
      - delay:
          seconds: 5
      - service: switch.turn_off
        continue_on_error: true
        entity_id:
          - switch.hyperhdr_atmoorb_left_component_led_device
          - switch.hyperhdr_atmoorb_right_component_led_device
          - switch.hyperhdr_falconlights_component_led_device
          - switch.hyperhdr_atmoorb_left_component_usb_capture
          - switch.hyperhdr_atmoorb_right_component_usb_capture
          - switch.hyperhdr_falconlights_component_usb_capture
      - delay:
          seconds: 0.5
      - service: light.turn_off
        continue_on_error: true
        entity_id:
          - light.livingroom_tv_ambilight
          - light.atmoorb_left
          - light.atmoorb_right
          - light.ledstrip_falcon
      - delay:
          seconds: 2
      - service: switch.turn_off
        continue_on_error: true
        entity_id: switch.ambilight_power


  toggle_tv_ledstrip:
    alias: "[home|mediacenter] Toggle TV LED Strip"
    icon: mdi:television-ambient-light
    # id: script_yaml_home_mediacenter_toggle_tv_led_strip #Scripts do not support unique_id or id (yet).
    mode: queued
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.ambilight_power
                state: 'off'
            sequence:
              - service: switch.turn_on
                continue_on_error: true
                entity_id: switch.ambilight_power
              - delay:
                  seconds: 1
              - service: light.turn_on
                continue_on_error: true
                data:
                  entity_id:
                    - light.livingroom_tv_ambilight
                  brightness: 255
                  effect: Rainbow
              - delay:
                  seconds: 5
              - service: light.turn_off
                continue_on_error: true
                data:
                  entity_id:
                    - light.livingroom_tv_ambilight
              - delay:
                  seconds: 2
              - service: light.turn_on
                continue_on_error: true
                data:
                  entity_id:
                    - light.livingroom_tv_ambilight
                  brightness: 255
                  effect: E1.31
          - conditions:
              - condition: state
                entity_id: switch.ambilight_power
                state: 'on'
            sequence:
              - service: light.turn_off
                continue_on_error: true
                data:
                  entity_id:
                    - light.livingroom_tv_ambilight
                    - light.tv_apa102_universe_1
                    - light.tv_apa102_universe_2
              - delay:
                  seconds: 3
              - service: switch.turn_off
                continue_on_error: true
                entity_id: switch.ambilight_power

################
#    LIGHTS    #
################
light:
