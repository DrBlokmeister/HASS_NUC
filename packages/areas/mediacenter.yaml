homeassistant:
  customize_glob:
    sensor.*elec_*_temp:
      device_class: 'temperature'
      unit_of_measurement: '°C'
      templates:
        icon_color: >-
          var maxval = 60;
          var minval = 30;
          var maxhue = 0;
          var minhue = 140;
          if (state > maxval) return 'hsl(' + maxhue.toString() + ',80%,50%)';
          if (state < minval) return 'hsl(' + minhue.toString() + ',80%,50%)';
          var hue = Math.round((Number(state) - minval) / (maxval - minval) * (maxhue - minhue) + minhue );
          return 'hsl(' + hue.toString() + ',80%,50%)';

media_player:
  - platform: kodi
    host: 192.168.1.50
    name: CoreELEC
    username: !secret coreelec_user
    password: !secret coreelec_pass
    turn_on_action:
      service: kodi.call_method
      data:
        entity_id: media_player.kodi
        method: Addons.ExecuteAddon
        addonid: script.json-cec
        params:
          command: activate
    turn_off_action:
    - service: media_player.media_stop
      data:
        entity_id: media_player.kodi
    - service: kodi.call_method
      data:
        entity_id: media_player.kodi
        method: Addons.ExecuteAddon
        addonid: script.json-cec
        params:
          command: standby
  - platform: kodi
    host: 192.168.1.51
    name: Ambilight_RPI

#################
#    SENSORS    #
#################
sensor:
  - platform: tautulli
    api_key: !secret tautulli_api_key
    host: 192.168.1.252

  - platform: command_line
    name: 'CoreELEC CPU temp'
    unit_of_measurement: '°C'
    scan_interval: 60
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      root@192.168.1.50
      cputemp | awk '{print $1}'

  - platform: command_line
    name: 'CoreELEC GPU temp'
    unit_of_measurement: '°C'
    scan_interval: 60
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      root@192.168.1.50
      gputemp | awk '{print $1}'

  - platform: command_line
    name: 'LibreELEC CPU temp'
    unit_of_measurement: '°C'
    scan_interval: 60
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      root@192.168.1.51
      cputemp | awk '{print $1}'

  - platform: command_line
    name: 'LibreELEC GPU temp'
    unit_of_measurement: '°C'
    scan_interval: 60
    command: >-
      ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
      root@192.168.1.51
      gputemp | awk '{print $1}'
########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      mediacenter_on:
        device_class: power
        value_template: >-
          {{
            states.sensor.blitzwolf_mediacenter_energy_power.state|float > 200
          }}
##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[mediacenter|light] Turn off lights when mediaplayer starts'
    trigger:
      - platform: state
        entity_id: media_player.coreelec
        from: 'idle'
        to: 'playing'
        for:
          seconds: 3
    action:
      - service: scene.create
        data:
          scene_id: livingroom_before
          snapshot_entities:
            - light.livingroom_lights
            - switch.blitzwolf_coffeeplant
      - service: light.turn_off
        data:
          entity_id: light.tvarea_lights
          transition: 5
      - service: light.turn_on
        data:
          entity_id: light.plants
          brightness: 30
          transition: 5
      - service: homeassistant.turn_off
        entity_id: group.livingroom_lighting_automations

  - alias: '[mediacenter|light] Restore lights when mediaplayer stops'
    trigger:
      - platform: state
        entity_id: media_player.coreelec
        from: 'playing'
        to: 'idle'
        for:
          seconds: 10
      - platform: state
        entity_id: media_player.coreelec
        to: 'idle'
        for:
          minutes: 5
      - platform: state
        entity_id: media_player.coreelec
        to: 'unavailable'
        for:
          minutes: 5
    action:
      - service: scene.turn_on
        data:
          entity_id: scene.livingroom_before
          transition: 10
      - service: homeassistant.turn_on
        entity_id: group.livingroom_lighting_automations

  - alias: '[mediacenter|light] Restore lights when mediaplayer stops'
    trigger:
      - platform: state
        entity_id: media_player.coreelec
        from: 'playing'
        to: 'paused'
        for:
          seconds: 5
    action:
      - service: light.turn_on
        data:
          entity_id: light.plants
          brightness: 50
          transition: 5
      - service: light.turn_on
        data:
          entity_id: light.rgb_led_strip_living_room
          brightness: 50
          hs_color:
            - 33
            - 100
      - service: light.turn_on
        data:
          entity_id: light.white_led_strip_living_room
          brightness: 28
      - wait_template: "{{ is_state('media_player.coreelec', 'playing')}}"
      - service: light.turn_off
        data:
          entity_id:
            - light.rgb_led_strip_living_room
            - light.white_led_strip_living_room
    

################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:

################
#    LIGHTS    #
################
light: