homeassistant:
  customize_glob:
    sensor.*elec_*_temp:
      device_class: 'temperature'
      unit_of_measurement: '°C'
      templates:
        icon_color: >-
          var maxval = 60;
          var minval = 30;
          var maxhue = 0;
          var minhue = 140;
          if (state > maxval) return 'hsl(' + maxhue.toString() + ',80%,50%)';
          if (state < minval) return 'hsl(' + minhue.toString() + ',80%,50%)';
          var hue = Math.round((Number(state) - minval) / (maxval - minval) * (maxhue - minhue) + minhue );
          return 'hsl(' + hue.toString() + ',80%,50%)';

media_player:
  # - platform: kodi
  #   host: 192.168.1.50
  #   name: CoreELEC
  #   username: !secret coreelec_user
  #   password: !secret coreelec_pass
  #   turn_on_action:
  #     service: kodi.call_method
  #     data:
  #       entity_id: media_player.kodi
  #       method: Addons.ExecuteAddon
  #       addonid: script.json-cec
  #       params:
  #         command: activate
  #   turn_off_action:
  #     - service: media_player.media_stop
  #       data:
  #         entity_id: media_player.kodi
  #     - service: kodi.call_method
  #       data:
  #         entity_id: media_player.kodi
  #         method: Addons.ExecuteAddon
  #         addonid: script.json-cec
  #         params:
  #           command: standby
  # - platform: kodi
  #   host: 192.168.1.51
  #   name: Ambilight_RPI

command_line:
  - sensor:
      name: 'CoreELEC CPU temp'
      unit_of_measurement: '°C'
      scan_interval: 60
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        cputemp | awk '{print $1}'
      #availability_template: '{{ is_state('device_tracker.coreelec', 'home') }}'
  - sensor:
      name: 'CoreELEC GPU temp'
      unit_of_measurement: '°C'
      scan_interval: 60
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        gputemp | awk '{print $1}'
      #availability: '{{ is_state('device_tracker.coreelec', 'home') }}'
  - sensor:
      name: 'CoreELEC Memory Usage'
      unit_of_measurement: '%'
      scan_interval: 60
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        free -m | awk 'NR==2{printf "%.2f\n", $3*100/$2 }'
      #availability: '{{ is_state('device_tracker.coreelec', 'home') }}'
  - sensor:
      name: 'CoreELEC Disk Usage'
      unit_of_measurement: '%'
      scan_interval: 60
      command: >-
        ssh -i /config/.ssh/NUC_id_rsa -o StrictHostKeyChecking=no -q
        root@10.0.20.50
        df -h /storage | awk '{ if (NR==2) print $5}' | tr -d '%'
      #availability: '{{ is_state('device_tracker.coreelec', 'home') }}'

#################
#    SENSORS    #
#################
sensor:
  # - platform: tautulli
  #   api_key: !secret tautulli_api_key
  #   host: 10.0.0.252

  # - platform: command_line
  #   name: 'LibreELEC CPU temp'
  #   unit_of_measurement: '°C'
  #   scan_interval: 60
  #   command: >-
  #     ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
  #     root@10.0.20.51
  #     cputemp | awk '{print $1}'

  # - platform: command_line
  #   name: 'LibreELEC GPU temp'
  #   unit_of_measurement: '°C'
  #   scan_interval: 60
  #   command: >-
  #     ssh -i /config/.ssh/id_rsa -o StrictHostKeyChecking=no -q
  #     root@10.0.20.51
  #     gputemp | awk '{print $1}'
########################
#    BINARY SENSORS    #
########################
binary_sensor:
  # - platform: template
  #   sensors:
  #     mediacenter_on:
  #       device_class: power
  #       value_template: >-
  #         {{
  #           states( 'sensor.blitzwolf_mediacenter_energy_power' )|float > 200
  #         }}
  #       availability_template: "{{ states('sensor.blitzwolf_mediacenter_energy_power')|is_number }}"
##################
#    SWITCHES    #
##################
switch:
  - platform: template
    switches:
      ambilight: # is_state('switch.hyperion_apa102_component_led_device', 'on') is excluded from the value template. For some reason this doesn't work.
        value_template: >-
          {{
            is_state('switch.ambilight', 'on') and
            is_state('light.ambilight_left', 'on') and is_state('light.ambilight_right', 'on') and
            is_state_attr('light.ambilight_left', 'effect', 'E1.31') and is_state_attr('light.ambilight_right', 'effect', 'E1.31') and
            is_state('switch.hyperion_atmoorb_left_component_led_device', 'on') and is_state('switch.hyperion_atmoorb_right_component_platform_capture', 'on')
          }}
        turn_on:
          service: script.turn_on_ambilight
        turn_off:
          service: script.turn_off_ambilight
#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[mediacenter|light] Turn off lights when mediaplayer starts'
    id: mediacenter_light_automation
    mode: single
    trigger:
      - platform: state
        entity_id: device_tracker.samsung_tv
        to: 'home'
      - platform: state
        entity_id: media_player.tv_samsung_led55
        to: 'on'
      - platform: state
        entity_id: media_player.coreelec
        from: 'idle'
        to: 'playing'
      - platform: state
        entity_id: media_player.plex_plexkodiconnect_kodi_coreelec
        from: 'idle'
        to: 'playing'
    action:
      - service: switch.turn_on
        entity_id: switch.amplifier_power
      - service: switch.turn_on
        entity_id: switch.ambilight
      - wait_for_trigger:
          # - platform: state
          #   entity_id: media_player.coreelec
          #   from: 'playing'
          #   to: 'idle'
          #   for:
          #     minutes: 15
          # - platform: state
          #   entity_id: media_player.coreelec
          #   to: 'idle'
          #   for:
          #     minutes: 15
          # - platform: state
          #   entity_id: media_player.coreelec
          #   to: 'unavailable'
          #   for:
          #     minutes: 15
          # - platform: state
          #   entity_id: device_tracker.samsung_tv
          #   to: 'not_home'
          #   for:
          #     minutes: 2
          - platform: state
            entity_id: media_player.tv_samsung_led55
            to: 'off'
            for:
              minutes: 2
      - service: switch.turn_off
        entity_id: switch.ambilight
      - delay:
          seconds: 2
      - service: switch.turn_off
        entity_id: switch.amplifier_power

  - alias: "Kodi: turn on"
    trigger:
      - platform: device
        device_id: !secret kodi_device_id
        domain: kodi
        entity_id: media_player.coreelec
        type: turn_on
    action:
      - service: kodi.call_method
        data:
          entity_id: media_player.coreelec
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: activate

  - alias: "Kodi: turn off"
    trigger:
      - platform: device
        device_id: !secret kodi_device_id
        domain: kodi
        entity_id: media_player.coreelec
        type: turn_off
    action:
      - service: kodi.call_method
        data:
          entity_id: media_player.coreelec
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: standby

  - alias: "[mediacenter|amplifier] Toggle amplifier through switch press"
    id: toggle_amplifier_through_switch_press
    mode: queued
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: "turntable"
          event: 1002  # Single press
      - platform: event
        event_type: deconz_event
        event_data:
          id: "turntable"
          event: 1004  # Double press
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1002 }}"
            sequence:
              - service: switch.toggle
                data:
                  entity_id: switch.amplifier_power
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 1004 }}"
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.amplifier_power

  - alias: "[areas|mediacenter]Update Plex library if torrent completed"
    id: areas_mediacenter_update_plex_library_if_torrent_completed
    mode: restart
    trigger:
      platform: event
      event_type: transmission_downloaded_torrent
    action:
      - choose:
          - conditions: >
              {{ "Series" in trigger.event.data.path }}
            sequence:
              - delay:
                  minutes: 5
              - service: plex.refresh_library
                data:
                  #server_name: "Tower"
                  library_name: "TV Shows"
          - conditions: >
              {{ "Movies" in trigger.event.data.path }}
            sequence:
              - delay:
                  minutes: 5
              - service: plex.refresh_library
                data:
                  #server_name: "Tower"
                  library_name: "Movies"
################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:
  hyperion_ambilightleft:
    entities:
      - device_tracker.ambilightleft_2
      - light.hyperion_ambilightleft
      - switch.ambilightleft_component_led_device
      - switch.ambilightleft_component_platform_capture
  hyperion_falconlights:
    entities:
      - device_tracker.falconlights
      - light.hyperion_falconlights
      - switch.falconlights_component_led_device
      - switch.falconlights_component_platform_capture
  hyperion_ssd_inner:
    entities:
      - light.hyperion_super_star_destroyer_inner
      - switch.super_star_destroyer_inner_component_led_device
      - switch.super_star_destroyer_inner_component_platform_capture
  hyperion_ssd_outer:
    entities:
      - light.hyperion_super_star_destroyer_outer
      - switch.super_star_destroyer_outer_component_led_device
      - switch.super_star_destroyer_outer_component_platform_capture
  hyperion_livingroom_ledstrip:
    entities:
      - light.hyperion_livingroom_ledstrip
      - switch.livingroom_ledstrip_component_led_device
      - switch.livingroom_ledstrip_component_platform_capture
  hyperion_ssd:
    entities:
      - group.hyperion_ssd_inner
      - group.hyperion_ssd_outer
  hyperion_entities:
    entities:
      - group.hyperion_ambilightleft
      - group.hyperion_falconlights
      - group.hyperion_ssd
      - group.hyperion_livingroom_ledstrip
#################
#    SCRIPTS    #
#################
script:
  movie_time:
    sequence:
      - choose:
          - conditions:
              - condition: state
                entity_id: switch.blokmeisternas
                state: 'off'
            sequence:
              - service: switch.turn_on
                entity_id: switch.blokmeisternas
              - wait_for_trigger:
                  - platform: state
                    entity_id: device_tracker.blokmeisternas
                    to: 'home'
                    for:
                      seconds: 5
              - wait_for_trigger:
                  - platform: state
                    entity_id: sensor.nas_cpu_use_percent
              - wait_for_trigger:
                  - platform: state
                    entity_id: switch.newstorage_mounted
                    to: 'on'
                timeout:
                  seconds: 30
              - choose:
                  - conditions:
                      - condition: template
                        value_template: "{{ not wait.completed }}"
                    sequence:
                      - service: switch.turn_on
                        entity_id: switch.newstorage_mounted
                      - wait_for_trigger:
                          - platform: state
                            entity_id: switch.newstorage_mounted
                            to: 'on'
                        timeout:
                          seconds: 10
                      - service: switch.turn_on
                        entity_id:
                          - switch.unrarredmovies_mounted
                          - switch.unrarredseries_mounted
                      - wait_for_trigger:
                          - platform: template
                            value_template: "{{ is_state('switch.unrarredmovies_mounted', 'on') and is_state('switch.unrarredseries_mounted', 'on') }}"
                        timeout:
                          seconds: 30
      - service: media_player.turn_on
        entity_id: media_player.coreelec
      - service: kodi.call_method
        data:
          entity_id: media_player.coreelec
          method: Addons.ExecuteAddon
          addonid: script.json-cec
          params:
            command: activate
      - service: switch.turn_on
        entity_id: switch.blitzwolf_ambilight
      - service: light.turn_on
        data:
          entity_id:
            - light.tvarea_lights
            - light.livingroom_a_rgb_ledstrip
          brightness: 20
          transition: 10
      - delay:
          seconds: 4
      - service: light.turn_on
        data:
          entity_id:
            - light.ambilight_left
            - light.ambilight_right
            - light.falconlights
            - light.ssdlights
            - light.ssdlights_inner
          brightness: 150
          effect: Rainbow
      - service: light.turn_on
        data:
          entity_id:
            - light.hyperion_apa102
          brightness: 150
          effect: Rainbow swirl fast

  turn_on_ambilight:
    alias: "[home|mediacenter] Turn on Ambilight"
    #unique_id: yaml_script_home_mediacenter_turn_on_ambilight #Scripts do not support unique IDs yet
    icon: mdi:television-ambient-light
    description: "Turns on Ambilight setup, including software LED devices and physical lights with effects."
    sequence:
      - service: switch.turn_on
        continue_on_error: true
        entity_id:
          - switch.ambilight_power
      - delay:
          seconds: 2
      # Turn on software LED devices with retries
      - repeat:
          until:
            # - condition: state
            #   entity_id: switch.hyperion_apa102_component_led_device
            #   state: 'on'
            - condition: state
              entity_id: switch.hyperion_atmoorb_right_component_led_device
              state: 'on'
            - condition: state
              entity_id: switch.hyperion_atmoorb_left_component_led_device
              state: 'on'
          sequence:
            - service: switch.turn_on
              continue_on_error: true
              entity_id:
                #- switch.hyperion_apa102_component_led_device
                - switch.hyperion_atmoorb_right_component_led_device
                - switch.hyperion_atmoorb_left_component_led_device
            - delay:
                seconds: 0.5  # Short delay before checking state
      - delay:
          seconds: 0.5
      - service: light.turn_on
        continue_on_error: true
        data:
          brightness: 255
          effect: E1.31
          entity_id:
            - light.ambilight_left
            - light.ambilight_right
      - service: light.turn_on
        continue_on_error: true
        data:
          entity_id:
            - light.hyperion_apa102
            - light.hyperion_atmoorb_left
            - light.hyperion_atmoorb_right
          brightness: 255
          effect: Rainbow swirl fast
      - delay:
          seconds: 5
      - repeat:
          until:
            # - condition: state
            #   entity_id: light.hyperion_apa102
            #   state: 'off'
            - condition: state
              entity_id: light.hyperion_atmoorb_left
              state: 'off'
            - condition: state
              entity_id: light.hyperion_atmoorb_right
              state: 'off'
          sequence:
            - service: light.turn_off
              continue_on_error: true
              data:
                entity_id:
                  - light.hyperion_apa102
                  - light.hyperion_atmoorb_left
                  - light.hyperion_atmoorb_right
            - delay:
                seconds: 0.5  # Short delay before checking state

  turn_off_ambilight:
    alias: "[home|mediacenter] Turn off Ambilight"
    # unique_id: yaml_script_home_mediacenter_turn_off_ambilight #Scripts do not support unique IDs yet
    icon: mdi:television-off
    description: "Nicely turns off the Ambilight system, ensuring a smooth shutdown."
    sequence:
      # Apply "System Shutdown" effect to Hyperion light entities
      - service: light.turn_on
        continue_on_error: true
        data:
          entity_id:
            - light.hyperion_apa102
            - light.hyperion_atmoorb_left
            - light.hyperion_atmoorb_right
          effect: "System Shutdown"
      # Wait for the effect to complete
      - delay:
          seconds: 5
      # Turn off the component LED devices
      - service: switch.turn_off
        continue_on_error: true
        entity_id:
          - switch.hyperion_apa102_component_led_device
          - switch.hyperion_atmoorb_right_component_led_device
          - switch.hyperion_atmoorb_left_component_led_device
      # Wait a moment before proceeding
      - delay:
          seconds: 0.5
      # Turn off the Hyperion lights
      - service: light.turn_off
        continue_on_error: true
        entity_id:
          - light.hyperion_apa102
          - light.hyperion_atmoorb_left
          - light.hyperion_atmoorb_right
      # Finally, turn off the Ambilight power supply
      - delay:
          seconds: 2
      - service: switch.turn_off
        continue_on_error: true
        entity_id: switch.ambilight_power

################
#    LIGHTS    #
################
light:
  - platform: group
    name: SSD lights grouped
    entities:
      - light.ssdlights
      - light.ssdlights_inner

  # - platform: hyperion
  #   host: 192.168.1.50
