homeassistant:
  customize:

timer:
  study_lights_timeout:
    duration: 60 #in seconds

input_number:
  study_illumination_limit_lightoff:
    name: Study illumination limit with lights off
    step: 1
    min: 0
    max: 200
    mode: box
  study_illumination_limit_lighton:
    name: Study illumination limit with lights on
    step: 1
    min: 0
    max: 200
    mode: box
  study_light_timeout: #in minutes
    name: Study light timeout
    step: 1
    min: 0
    max: 30
    mode: box

input_select:
  study_scenes:
    options:
      - bright_cool
      - bright_warm
      - dim_warm
    initial: bright_warm
    icon: mdi:lightbulb-on-outline

#################
#    SENSORS    #
#################
sensor:
  - platform: template
    sensors:
      average_illumination_study:
        device_class: illuminance
        unit_of_measurement: 'lx'
        value_template: "{{ (states('sensor.illumination_study')|round(1)+states('sensor.illumination_study2')|round(1))/2 }}"
        availability_template: "{{ states('sensor.illumination_study')|is_number and states('sensor.illumination_study2')|is_number }}"
      average_illumination_study_2:
        device_class: illuminance
        unit_of_measurement: 'lx'
        value_template: >-
          {{ (states('sensor.illumination_study')|round(1) / 2 + states('sensor.illumination_study2')|round(1) + states('sensor.lightlevel_11')|round(1))/2.5 }}
        availability_template: "{{ states('sensor.illumination_study')|is_number and states('sensor.illumination_study2')|is_number and states('sensor.lightlevel_11')|is_number }}"
      vibration_sensor_attributes:
        value_template: "{{ state_attr('binary_sensor.vibration_sensor', 'orientation'), state_attr('binary_sensor.vibration_sensor', 'tiltangle') }}"
        availability_template: "{{ state_attr('binary_sensor.vibration_sensor', 'orientation')|is_number and state_attr('binary_sensor.vibration_sensor', 'tiltangle')|is_number }}"
  # - platform: statistics
  #   name: average_illumination_study_stats
  #   entity_id: sensor.average_illumination_study
  #   max_age:
  #     minutes: 30

########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      # computer_on:
      #   device_class: power
      #   value_template: >-
      #     {{
      #       states('sensor.blitzwolf_computer_energy_power')|float > 100
      #     }}
      #   availability_template: "{{ states('sensor.blitzwolf_computer_energy_power')|is_number }}"
      study_motion_combined:
        device_class: motion
        value_template: >-
          {{
            is_state('binary_sensor.motion_sensor_study', 'on') or
            is_state('binary_sensor.motion_sensor_study2', 'on')
          }}
        availability_template: "{{ (states('binary_sensor.motion_sensor_study') in ['on', 'off']) and (states('binary_sensor.motion_sensor_study2') in ['on', 'off']) }}"
##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[study|lights] Turn on lights when motion is detected'
    mode: restart
    trigger:
      - platform: state
        entity_id: group.study_motion_sensors
        to: 'on'
      - platform: state
        entity_id: sensor.vibration_sensor_attributes
      - platform: state
        entity_id: binary_sensor.vibration_sensor
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
      - condition: template
        #value_template: "{{ states('sensor.average_illumination_study_2')|int < states('input_number.study_illumination_limit_lightoff')|int }}"
        value_template: >-
          {% if is_state('light.study', 'on') %}
            {{ states('sensor.average_illumination_study_2')|int < states('input_number.study_illumination_limit_lighton')|int }}
          {% else %}
            {{ states('sensor.average_illumination_study_2')|int < states('input_number.study_illumination_limit_lightoff')|int }}
          {% endif %}
    action:
      - service: light.turn_on
        data:
          entity_id:
            - light.study
          brightness_pct: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'brightness_pct') | int }}"
          kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      - service: light.turn_on
        data:
          entity_id:
            - light.study_desk_a_rgb_ledstrip
          brightness_pct: 100
          kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      - wait_for_trigger:
          - platform: state
            entity_id: group.study_motion_sensors
            to: 'off'
            for:
              minutes: >-
                {% if is_state('device_tracker.blokmeisterh2o', 'home') or is_state('device_tracker.worklaptop', 'home')%}
                  30
                {% else %}
                  {{ states('input_number.study_light_timeout')|int }}
                {% endif %}
          - platform: template
            value_template: "{{ is_state('device_tracker.blokmeisterh2o', 'not_home') and is_state('device_tracker.worklaptop', 'not_home') }}"
            for:
              minutes: 5
          - platform: template
            value_template: "{{ states('sensor.average_illumination_study_2')|int > states('input_number.study_illumination_limit_lighton')|int + 20 }}"
            for:
              minutes: 5
      - service: light.turn_on
        data:
          entity_id:
            - light.study
          brightness_step: -110
          transition: 0.5
      - delay:
          seconds: 15
      - service: light.turn_off
        entity_id:
          - light.study

  #Turn off study lights if no motion has been detected for 1 hour
  # - alias: study_nomotion_pc_turn_off
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.study_motion_combined
  #     from: 'on'
  #     to: 'off'
  #     for: 01:00:00
  #   action:
  #     service: light.turn_off
  #     entity_id: light.study_lights

  # - alias: 'Message when computer is still on when not home'
  #   trigger:
  #     - platform: state
  #       entity_id: person.sander_blok
  #       from: 'home'
  #       to: 'not_home'
  #       for: 00:20:00
  #   condition:
  #     - condition: state
  #       entity_id: binary_sensor.computer_on
  #       state: 'on'
  #     - condition: state
  #       entity_id: binary_sensor.house_occupied
  #       state: 'on'
  #   action:
  #     - service: notify.mobile_app_blokmeisters21u
  #       data:
  #         message: "Computer still draws power: {{ states( 'sensor.blitzwolf_computer_energy_power' ) }}W"
  #         title: "Home Assistant - Computer on"
  #         data:
  #           group: Warning
  #           tag: computeron
  #           clickAction: '/lovelace/6'
  #           icon_url: /local/icons/desktop-tower-monitor.png

  - alias: '[study|lights]Toggle lights through switch press'
    id: studylightsswitchpress
    mode: restart
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: study_desk_switch
      - platform: event
        event_type: esphome.button_pressed
        event_data:
          device_name: "Shelly Study"
    condition:
      # - condition: state
      #   entity_id: switch.shelly_study
      #   state:
      #     - 'on'
      #     - 'off'
      #   for:
      #     seconds: 5
    action:
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.click_count == '1' }}" # Single click of switch
                  - condition: template
                    value_template: "{{ trigger.event.data.event == 1002 }}" # Single click of switch
            sequence:
              - service: light.toggle
                data:
                  entity_id: light.study
                  brightness: 255
                  kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
              # - service: switch.flux_study_update
              - service: automation.turn_off
                entity_id:
                  - automation.study_lights_turn_on_lights_when_motion_is_detected
              - delay:
                  seconds: 30
              - service: automation.turn_on
                entity_id:
                  - automation.study_lights_turn_on_lights_when_motion_is_detected
          - conditions:
              - condition: or
                conditions:
                  - condition: template
                    value_template: "{{ trigger.event.data.click_count == '2' }}" # Double click of switch
                  - condition: template
                    value_template: "{{ trigger.event.data.event == 1004 }}" # Single click of switch
            sequence:
              - service: input_select.select_next
                data:
                  entity_id: input_select.study_scenes
              - service: scene.turn_on
                data:
                  entity_id: scene.study_{{ states('input_select.study_scenes') }}



  # - alias: '[study|power]Turn off pc plug'
  #   mode: single
  #   trigger:
  #     - platform: state
  #       entity_id: group.study_motion_sensors
  #       to: 'off'
  #       for:
  #         minutes: 20
  #     - platform: state
  #       entity_id: binary_sensor.vibration_sensor
  #       to: 'off'
  #       for:
  #         minutes: 20
  #   condition:
  #     - condition: numeric_state
  #       entity_id: sensor.blitzwolf_computer_energy_power
  #       below: 15
  #     # - condition: state
  #     #   entity_id: device_tracker.blokmeisterh2o
  #     #   state: 'not_home'
  #     - condition: state
  #       entity_id: binary_sensor.vibration_sensor
  #       state: 'off'
  #       for:
  #         minutes: 7
  #     - condition: state
  #       entity_id: group.study_motion_sensors
  #       state: 'off'
  #       for:
  #         minutes: 7
  #     - condition: state
  #       entity_id: switch.blitzwolf_computer
  #       state: 'on'
  #     - condition: not
  #       conditions:
  #           condition: state
  #           entity_id: binary_sensor.octoprint_printing
  #           state: 'on'
  #   action:
  #     - service: switch.turn_off
  #       entity_id: switch.blitzwolf_computer

  # - alias: '[study|power]Turn on pc plug'
  #   mode: single
  #   trigger:
  #     - platform: state
  #       entity_id: group.study_motion_sensors
  #       to: 'on'
  #     - platform: state
  #       entity_id: binary_sensor.vibration_sensor
  #       to: 'on'
  #   condition:
  #     - condition: state
  #       entity_id: switch.blitzwolf_computer
  #       state: 'off'
  #     - condition: state
  #       entity_id: person.sander_blok
  #       state: 'home'
  #     - condition: not
  #       conditions:
  #           condition: state
  #           entity_id: binary_sensor.octoprint_printing
  #           state: 'on'
  #   action:
  #     - service: switch.turn_on
  #       entity_id: switch.blitzwolf_computer
  #     - delay:
  #         seconds: 5
  #     - condition: state
  #       entity_id: light.study_1
  #       state: 'off'
  #     - service: light.turn_off
  #       entity_id: light.study_candle

  # - alias: '[study|lights] Start timer when presence is detected'
  #   mode: restart
  #   trigger:
  #     - platform: state
  #       entity_id: group.study_motion_sensors
  #       to: 'on'
  #     - platform: state
  #       entity_id: sensor.vibration_sensor_attributes
  #     - platform: state
  #       entity_id: binary_sensor.vibration_sensor
  #       to: 'on'
  #   action:
  #     - service: timer.start
  #       data:
  #         entity_id: timer.study_lights_timeout
  #         duration: 120
  #     - wait_for_trigger:
  #         - platform: state
  #           entity_id: binary_sensor.study_motion_combined
  #           to: 'on'
  #         - platform: state
  #           entity_id: sensor.vibration_sensor_attributes
  #         - platform: state
  #           entity_id: binary_sensor.vibration_sensor
  #           to: 'on'
  #       timeout:
  #         seconds: 120

  - alias: '[study|light] Update illumination limit'
    mode: single
    trigger:
      - platform: state
        entity_id: switch.shelly_study
    condition:
      - condition: state
        entity_id: switch.shelly_study
        state:
          - 'on'
          - 'off'
        for:
          seconds: 5
    action:
      - delay:
          seconds: 1
      - choose:
          - conditions:
              - condition: state
                entity_id: light.study_lights
                state: 'on'
            sequence:
              - service: input_number.increment
                entity_id: input_number.study_illumination_limit_lightoff
          - conditions:
              - condition: state
                entity_id: light.tvarea_and_ledstrips
                state: 'off'
            sequence:
              - service: input_number.decrement
                entity_id: input_number.study_illumination_limit_lightoff
################
#    SCENES    #
################
scene:
  - name: study_bright_cool
    entities:
      light.study:
        state: on
        brightness: 254
        color_temp: 280
        transition: 1
  - name: study_bright_warm
    entities:
      light.study:
        state: on
        brightness: 254
        color_temp: 454
        transition: 1
  - name: study_dim_warm
    entities:
      light.study:
        state: on
        brightness: 100
        color_temp: 454
        transition: 1

################
#    GROUPS    #
################
group:
  study_lighting_automations:
    entities:
      - automation.study_lights_turn_on_lights_when_motion_is_detected
  study_motion_sensors:
    entities:
      - binary_sensor.motion_sensor_study
      - binary_sensor.motion_sensor_study2

################
#    LIGHTS    #
################
light:
  # - platform: group
  #   name: Study Lights
  #   entities:
  #     - light.study_1
  #     - light.study_2
  #     - light.study_3
  #     - light.study_candle
  #     - light.study_desk_a_rgb_ledstrip
