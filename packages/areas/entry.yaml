homeassistant:
  customize:

input_number:
  entry_illumination_limit:
    name: Entry illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
#################
#    SENSORS    #
#################
sensor:

########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      entry_motion_combined:
        device_class: motion
        value_template: >-
          {{
            is_state('binary_sensor.motion_sensor_entry', 'on') or
            is_state('binary_sensor.motion_sensor_entry2', 'on')
          }}
########################
#    INPUT BOOLEANS    #
########################
input_boolean:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[entry|light]Turn on entry lights through switch press'
    trigger:
      platform: state
      entity_id: switch.shelly_entry
      to: 'on'
    action:
      service: light.turn_on
      data:
        entity_id: light.entry_lights
        brightness: 255

  - alias: '[entry|light]Turn off entry lights through switch press'
    trigger:
      platform: state
      entity_id: switch.shelly_entry
      to: 'off'
    action:
      service: light.turn_off
      entity_id: light.entry_lights

  - alias: '[entry|light] Turn on light through motion'
    mode: restart
    trigger:
      - platform: state
        entity_id: group.entry_motion_sensors
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states('sensor.illumination_entry')|int < states('input_number.entry_illumination_limit')|int }}"
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.entry_lights
          brightness: 255
      - wait_for_trigger:
          platform: template
          value_template: "{{ is_state('binary_sensor.motion_sensor_entry', 'off') and is_state('binary_sensor.motion_sensor_entry2', 'off') }}"
          for:
            minutes: 3
      - service: light.turn_off
        entity_id: light.entry_lights

  - alias: '[entry|alarm]Alarm when front door is open too long'
    trigger:
      platform: state
      entity_id: binary_sensor.door_window_sensor_frontdoor
      to: 'on'
      for:
        minutes: 10
    action:
      repeat:
        while:
          - condition: state
            entity_id: binary_sensor.door_window_sensor_frontdoor
            state: 'on'
          # Don't do it too many times
          - condition: template
            value_template: "{{ repeat.index <= 20 }}"
        sequence:
          - service: tts.google_say
            entity_id: media_player.living_room_speaker
            data:
              message: "Front door is still open!"
          - delay:
              minutes: 2
################
#    SCENES    #
################
scene:

################
#    LIGHTS    #
################
light:
  - platform: template
    lights:
      shelly_entry_light:
        # entity_id: switch.shelly_entry
        value_template: "{{ states('switch.shelly_entry') }}"
        turn_on:
          service: switch.turn_on
          entity_id: switch.shelly_entry
        turn_off:
          service: switch.turn_off
          entity_id: switch.shelly_entry
  - platform: group
    name: Entry Lights
    entities:
      - light.shelly_entry_light
      - light.entry_spotlight

################
#    GROUPS    #
################
group:
  entry_motion_sensors:
    entities:
      - binary_sensor.motion_sensor_entry
      - binary_sensor.motion_sensor_entry2
#################
#    SCRIPTS    #
#################
script:
