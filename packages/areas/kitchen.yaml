homeassistant:
  customize: {}

input_number:
  kitchen_illumination_limit:
    name: Kitchen illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  kitchen_illumination_limit_lightson:
    name: Kitchen illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  kitchen_light_timeout: #in minutes
    name: Kitchen light timeout
    step: 1
    min: 0
    max: 30
    mode: box
  kitchen_light_illumination_difference:
    name: Kitchen Light Illumination Difference
    min: 0
    max: 500
    step: 1
    unit_of_measurement: "lx"
    mode: box
    icon: mdi:brightness-auto

timer:
  kitchen_lights:

input_boolean:
  kitchen_light_level_calibration_switch:
    name: Kitchen Light Level Calibration
    initial: off
    icon: mdi:lightbulb-on-outline  # Nice icon for the UI
#################
#    SENSORS    #
#################
sensor:
  - platform: derivative
    source: sensor.temperature_fridge
    name: Fridge Temperature Change per Minute
    unit_time: min
    time_window: "00:10:00"

  # - platform: group
  #   name: "Kitchen Average Illuminance"
  #   unique_id: yaml_sensor_group_kitchen_average_illuminance
  #   type: mean
  #   ignore_non_numeric: true
  #   state_class: measurement
  #   device_class: illuminance
  #   unit_of_measurement: lx
  #   entities:
  #     - sensor.kitchen_motion_1_illuminance
  #     - sensor.kitchen_motion_2_illuminance
  #     - sensor.kitchen_light_1
  #     - sensor.kitchen_light_1
########################
#    BINARY SENSORS    #
########################
binary_sensor:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[kitchen|lights] Turn on lights when motion is detected'
    id: kitchen_lights_turn_on_lights_when_motion_is_detected
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.kitchen_motion_1
          - binary_sensor.kitchen_motion_2
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states('sensor.kitchen_light_1')|int(1000) < states('input_number.kitchen_illumination_limit')|int }}"
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.kitchen
          brightness_pct: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'brightness_pct') | int }}"
          color_temp_kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      - wait_for_trigger:
          - platform: state
            entity_id:
              - binary_sensor.kitchen_motion_1
              - binary_sensor.kitchen_motion_2
            to: 'off'
            for:
              minutes: "{{ states('input_number.kitchen_light_timeout')|int }}"
          - platform: template
            value_template: "{{ (states('sensor.kitchen_light_1')|int(0) - states('input_number.kitchen_light_illumination_difference')|int(0)) > states('input_number.kitchen_illumination_limit')|int }}"
            for:
              minutes: "{{ states('input_number.kitchen_light_timeout')|int }}"
      - service: light.turn_on
        data:
          entity_id: light.kitchen
          brightness_step: -120
          transition: 0.5
      - delay:
          seconds: 15
      - service: light.turn_off
        entity_id: light.kitchen

  - alias: '[kitchen|lights]Toggle lights when switch is pressed'
    id: kitchen_lights_toggle_lights_when_switch_is_pressed
    mode: restart
    trigger:
      - platform: event
        event_type: esphome.button_pressed
        event_data:
          device_name: "Shelly Kitchen"
        variables:
          click_count: "{{ trigger.event.data.click_count }}"
    action:
      - service: script.toggle_lights_with_adaptive_brightness
        data:
          light_entity: light.kitchen
          transition_time: 0.5
          click_count: "{{ click_count }}"
      # - service: light.toggle
      #   data:
      #     entity_id: light.kitchen
      #     brightness: 255
      #     color_temp_kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"

  - alias: '[kitchen|notify] fridge overtemp warning'
    id: kitchen_notify_fridge_overtemp_warning
    mode: restart
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperature_fridge
        above: 13
      - platform: numeric_state
        entity_id: sensor.fridge_temperature_change_per_minute
        above: 0.2
    condition:
      - condition: or
        conditions:
          - condition: numeric_state
            entity_id: sensor.temperature_fridge
            above: 13
          - condition: numeric_state
            entity_id: sensor.fridge_temperature_change_per_minute
            above: 0.2
      - condition: numeric_state
        entity_id: sensor.fridge_temperature_change_per_minute
        above: 0
    action:
      - repeat:
          sequence:
            - service: notify.sander_and_tamara_phones
              data_template:
                title: Fridge temperature warning
                message: "Fridge temperature too high! Current temperature: {{ states('sensor.temperature_fridge') }} °C, changing at {{ states('sensor.fridge_temperature_change_per_minute') }} °C/min."
                data:
                  group: Warning
                  tag: fridgetempwarning
                  ttl: 0
                  priority: high
                  clickAction: '/lovelace/10'
                  icon_url: /local/icons/thermometer-alert.png
            - delay:
                minutes: 5
          until:
            - condition: numeric_state
              entity_id: sensor.temperature_fridge
              below: 13
            - condition: numeric_state
              entity_id: sensor.fridge_temperature_change_per_minute
              below: 0.1
      - service: notify.sander_and_tamara_phones
        data:
          message: "clear_notification"
          data:
            ttl: 0
            priority: high
            tag: fridgetempwarning

  - alias: '[kitchen|light] Update illumination limit'
    id: kitchen_light_update_illumination_limit
    mode: single
    trigger:
      - platform: state
        entity_id: switch.shelly_kitchen
    condition:
      - condition: state
        entity_id: switch.shelly_kitchen
        state:
          - 'on'
          - 'off'
        for:
          seconds: 5
    action:
      - delay:
          seconds: 1
      - choose:
          - conditions:
              - condition: state
                entity_id: light.kitchen
                state: 'on'
            sequence:
              - service: input_number.increment
                entity_id: input_number.kitchen_illumination_limit
          - conditions:
              - condition: state
                entity_id: light.kitchen
                state: 'off'
            sequence:
              - service: input_number.decrement
                entity_id: input_number.kitchen_illumination_limit


  - alias: "[kitchen|switch] Kitchen Multiswitch Automation"
    id: yaml_automation_kitchen_switch_kitchen_multiswitch_automation
    description: >
      Automations for toggling kitchen lights, setting full brightness, vacuuming, 
      mopping the kitchen, and controlling ground floor activities using the Hue 
      multiswitch.
    mode: queued
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: kitchen_multiswitch
          event: 1000
      - platform: event
        event_type: deconz_event
        event_data:
          id: kitchen_multiswitch
          event: 2000
      - platform: event
        event_type: deconz_event
        event_data:
          id: kitchen_multiswitch
          event: 3000
      - platform: event
        event_type: deconz_event
        event_data:
          id: kitchen_multiswitch
          event: 4000
    condition: []
      # - condition: template
      #   value_template: "{{ trigger.event.data.event in [1000, 2000, 3000, 4000] }}"
    action:
      - wait_for_trigger:
          - platform: event
            event_type: deconz_event
            event_data:
              id: kitchen_multiswitch
        timeout:
          seconds: 20
      - choose:
          # Short press button 1 - Toggle kitchen lights
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 1002 }}"
            sequence:
              - service: light.toggle
                target:
                  entity_id: light.kitchen
                data:
                  color_temp_kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
                  brightness_pct: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'brightness_pct') | int }}"
          # Long press button 1 - Full brightness kitchen lights
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 1001 }}"
            sequence:
              - service: light.turn_on
                target:
                  entity_id: light.kitchen
                data:
                  color_temp_kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
                  brightness_pct: 100

          # Short press button 2 - Vacuum the kitchen
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 2002 }}"
              - condition: template
                value_template: "{{ not is_state('vacuum.moeke', 'cleaning') }}"
            sequence:
              - service: select.select_option
                continue_on_error: true
                target:
                  entity_id: select.moeke_cleaning_mode
                data:
                  option: "sweeping"
              - delay: "00:00:02"
              - service: script.vacuum_kitchen_twice
              # - service: dreame_vacuum.vacuum_clean_zone
              #   data:
              #     entity_id: vacuum.moeke
              #     repeats: 2
              #     zone: [[-7781,-464,-5148,1452]]
          - conditions: # Pause if vacuum is running
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 2002 }}"
              - condition: state
                entity_id: vacuum.moeke
                state: cleaning
            sequence:
              - service: vacuum.pause
                entity_id: vacuum.moeke
          # Long press button 2 - Mop the kitchen
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 2001 }}"
              - condition: template
                value_template: "{{ not is_state('vacuum.moeke', 'cleaning') }}"
            sequence:
              - service: select.select_option
                continue_on_error: true
                target:
                  entity_id: select.moeke_cleaning_mode
                data:
                  option: "sweeping_and_mopping"
              - delay: "00:00:02"
              - service: script.vacuum_kitchen_twice
              # - service: dreame_vacuum.vacuum_clean_zone
              #   data:
              #     entity_id: vacuum.moeke
              #     repeats: 2
              #     zone: [[-7781,-464,-5148,1452]]
          - conditions: # Pause if vacuum is running
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 2001 }}"
              - condition: state
                entity_id: vacuum.moeke
                state: cleaning
            sequence:
              - service: vacuum.pause
                entity_id: vacuum.moeke

          # Short press button 3 - Vacuum the entire ground floor
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 3002 }}"
              - condition: template
                value_template: "{{ not is_state('vacuum.moeke', 'cleaning') }}"
            sequence:
              - service: select.select_option
                continue_on_error: true
                target:
                  entity_id: select.moeke_cleaning_mode
                data:
                  option: "sweeping"
              - delay: "00:00:02"
              - service: vacuum.start
                target:
                  entity_id: vacuum.moeke
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 3002 }}"
              - condition: state
                entity_id: vacuum.moeke
                state: cleaning
            sequence:
              - service: vacuum.pause
                entity_id: vacuum.moeke
          # Long press button 3 - Mop the entire ground floor
          - conditions:
              - condition: template
                value_template: "{{ wait.trigger.event.data.event == 3001 }}"
              - condition: template
                value_template: "{{ not is_state('vacuum.moeke', 'cleaning') }}"
            sequence:
              - service: select.select_option
                continue_on_error: true
                target:
                  entity_id: select.moeke_cleaning_mode
                data:
                  option: "sweeping_and_mopping"
              - delay: "00:00:02"
              - service: vacuum.start
                target:
                  entity_id: vacuum.moeke
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.event == 3001 }}"
              - condition: state
                entity_id: vacuum.moeke
                state: cleaning
            sequence:
              - service: vacuum.pause
                entity_id: vacuum.moeke

          # Short press button 4 - Toggle all ground floor lights
          # - conditions:
          #     - condition: template
          #       value_template: "{{ trigger.event.data.event == 4002 }}"
          #   sequence:
          #     # Uncomment and specify the lights in the ground floor
          #     - service: light.toggle
          #       target:
          #         entity_id:
          #           - light.living_room
          #           - light.kitchen
          #           - light.hallway
          #           - light.bathroom

  - alias: '[areas|kitchen] Light Calibration Automation'
    id: yaml_automation_areas_kitchen_light_calibration_automation
    description: Automates light on/off cycle for kitchen calibration and resets input boolean
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.kitchen_light_level_calibration_switch
        to: 'on'  # Starts the automation when the boolean is turned on
    variables:
      repeat_count: 20  # Number of on/off cycles
    action:
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_brightness_adaptive_lighting
          manual_control: true
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_color_adaptive_lighting
          manual_control: true
      - repeat:
          count: '{{ repeat_count }}'
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.kitchen
              data_template:
                brightness_pct: "{{ range(20, 101) | random }}"  # Random brightness between 20% and 100%
                color_temp: "{{ range(2000, 6536) | random }}"  # Random color temperature between 2000K and 6535K
            - delay:
                minutes: 15  # Wait 15 minutes with the lights on
            - service: light.turn_off
              target:
                entity_id: light.kitchen
            - delay:
                minutes: 15  # Wait 15 minutes with the lights off
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_brightness_adaptive_lighting
          manual_control: false
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_color_adaptive_lighting
          manual_control: false
      - service: input_boolean.turn_off  # Turn off the boolean to reset
        target:
          entity_id: input_boolean.kitchen_light_level_calibration_switch
################
#    SCENES    #
################
scene:
  - name: kitchen_bright_cool
    entities:
      light.kitchen:
        state: 'on'
        brightness: 254
        color_temp: 320
        transition: 2
  - name: kitchen_bright_warm
    entities:
      light.kitchen:
        state: 'on'
        brightness: 254
        color_temp: 454
        transition: 2

################
#    GROUPS    #
################
group:
  kitchen_lighting_automations:
    entities:
      - automation.kitchen_lights_turn_on_lights_when_motion_is_detected

################
#    LIGHTS    #
################
light:
  # - platform: group
  #   name: Kitchen Lights
  #   entities:
  #     - light.kitchen_1
  #     - light.kitchen_2
  #     - light.kitchen_3
