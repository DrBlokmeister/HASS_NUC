homeassistant:
  customize:

input_number:
  kitchen_illumination_limit:
    name: Kitchen illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  kitchen_illumination_limit_lightson:
    name: Kitchen illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  kitchen_light_timeout: #in minutes
    name: Kitchen light timeout
    step: 1
    min: 0
    max: 30
    mode: box

timer:
  kitchen_lights:
#################
#    SENSORS    #
#################
sensor:
  - platform: derivative
    source: sensor.temperature_fridge
    name: Fridge Temperature Change per Minute
    unit_time: min
    time_window: "00:10:00"

  - platform: template
    sensors:
      average_illumination_kitchen:
        friendly_name: "Average Illumination Kitchen"
        device_class: illuminance
        unit_of_measurement: 'lx'
        value_template: >-
          {% if states('sensor.kitchen_motion_1_illuminance') not in [None, 'unknown', 'unavailable']|list and states('sensor.kitchen_motion_2_illuminance') not in [None, 'unknown', 'unavailable']|list %}
            {{ ((states('sensor.kitchen_motion_1_illuminance')|float + states('sensor.kitchen_motion_2_illuminance')|float) / 2)|round(1) }}
          {% elif states('sensor.kitchen_motion_1_illuminance') not in [None, 'unknown', 'unavailable']|list %}
            {{ states('sensor.kitchen_motion_1_illuminance')|round(1) }}
          {% elif states('sensor.kitchen_motion_2_illuminance') not in [None, 'unknown', 'unavailable']|list %}
            {{ states('sensor.kitchen_motion_2_illuminance')|round(1) }}
          {% else %}
            unavailable
          {% endif %}
        availability_template: "{{ states('sensor.kitchen_motion_1_illuminance') not in ['unknown', 'unavailable', 'none'] or states('sensor.kitchen_motion_2_illuminance') not in ['unknown', 'unavailable', 'none'] }}"
########################
#    BINARY SENSORS    #
########################
binary_sensor:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[kitchen|lights] Turn on lights when motion is detected'
    id: kitchen_lights_turn_on_lights_when_motion_is_detected
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.kitchen_motion_1
          - binary_sensor.kitchen_motion_2
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states('sensor.average_illumination_kitchen')|int < states('input_number.kitchen_illumination_limit')|int }}"
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.kitchen
          brightness: 255
          kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      - wait_for_trigger:
          - platform: state
            entity_id:
              - binary_sensor.kitchen_motion_1
              - binary_sensor.kitchen_motion_2
            to: 'off'
            for:
              minutes: "{{ states('input_number.kitchen_light_timeout')|int }}"
          - platform: template
            value_template: "{{ states('sensor.average_illumination_kitchen')|int > states('input_number.kitchen_illumination_limit_lightson')|int }}"
            for:
              minutes: "{{ states('input_number.kitchen_light_timeout')|int }}"
      - service: light.turn_on
        data:
          entity_id: light.kitchen
          brightness_step: -120
          transition: 0.5
      - delay:
          seconds: 15
      - service: light.turn_off
        entity_id: light.kitchen

  - alias: '[kitchen|lights]Toggle lights when switch is pressed'
    id: kitchen_lights_toggle_lights_when_switch_is_pressed
    mode: restart
    trigger:
      - platform: state
        entity_id: switch.shelly_kitchen
    condition:
      - condition: state
        entity_id: switch.shelly_kitchen
        state:
          - 'on'
          - 'off'
        for:
          seconds: 5
    action:
      - service: light.toggle
        data:
          entity_id: light.kitchen
          brightness: 255
          kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      # - service: automation.turn_off
      #   entity_id:
      #     - automation.kitchen_lights_turn_on_lights_when_motion_is_detected
      # - delay:
      #     seconds: 30
      # - service: automation.turn_on
      #   entity_id:
      #     - automation.kitchen_lights_turn_on_lights_when_motion_is_detected

  - alias: '[kitchen|notify] fridge overtemp warning'
    id: kitchen_notify_fridge_overtemp_warning
    mode: restart
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperature_fridge
        #above: 15
    condition:
      - condition: or
        conditions:
          - condition: numeric_state
            entity_id: sensor.temperature_fridge
            above: 15
          - condition: numeric_state
            entity_id: sensor.fridge_temperature_change_per_minute
            above: 0.2
    action:
      - service: notify.mobile_app_blokmeisters21u
        data_template:
          title: Fridge temperature warning
          message: "Fridge temperature too high! Current temperature: {{ states('sensor.temperature_fridge') }}."
          data:
            group: Warning
            tag: fridgetempwarning
            clickAction: '/lovelace/8'
            icon_url: /local/icons/thermometer-alert.png
      - wait_for_trigger:
          - platform: numeric_state
            entity_id: sensor.temperature_fridge
            below: 13
          - platform: numeric_state
            entity_id: sensor.fridge_temperature_change_per_minute
            below: 0
      - service: notify.mobile_app_blokmeisters21u
        data:
          message: "clear_notification"
          data:
            tag: fridgetemperaturewarning

  - alias: '[kitchen|light] Update illumination limit'
    id: kitchen_light_update_illumination_limit
    mode: single
    trigger:
      - platform: state
        entity_id: switch.shelly_kitchen
    condition:
      - condition: state
        entity_id: switch.shelly_kitchen
        state:
          - 'on'
          - 'off'
        for:
          seconds: 5
    action:
      - delay:
          seconds: 1
      - choose:
          - conditions:
              - condition: state
                entity_id: light.kitchen
                state: 'on'
            sequence:
              - service: input_number.increment
                entity_id: input_number.kitchen_illumination_limit
          - conditions:
              - condition: state
                entity_id: light.kitchen
                state: 'off'
            sequence:
              - service: input_number.decrement
                entity_id: input_number.kitchen_illumination_limit
################
#    SCENES    #
################
scene:
  - name: kitchen_bright_cool
    entities:
      light.kitchen:
        state: 'on'
        brightness: 254
        color_temp: 320
        transition: 2
  - name: kitchen_bright_warm
    entities:
      light.kitchen:
        state: 'on'
        brightness: 254
        color_temp: 454
        transition: 2

################
#    GROUPS    #
################
group:
  kitchen_lighting_automations:
    entities:
      - automation.kitchen_lights_turn_on_lights_when_motion_is_detected

################
#    LIGHTS    #
################
light:
  # - platform: group
  #   name: Kitchen Lights
  #   entities:
  #     - light.kitchen_1
  #     - light.kitchen_2
  #     - light.kitchen_3
