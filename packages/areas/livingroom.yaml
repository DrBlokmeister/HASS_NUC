homeassistant:
  customize_glob:
    scene.livingroom_*:
      icon: mdi:lightbulb-outline
    automation.livingroom*:
      icon: mdi:lightbulb-outline
    light.*led_strip*:
      icon: mdi:led-strip-variant

input_number:
  livingroom_illumination_limit:
    name: Livingroom illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  livingroom_light_timeout: #in minutes
    name: Livingroom light timeout
    step: 1
    min: 0
    max: 30
    mode: box
  living_room_light_illumination_difference:
    name: Living Room Light Illumination Difference
    min: 0
    max: 500
    step: 1
    unit_of_measurement: "lx"
    mode: box
    icon: mdi:brightness-auto

input_select:
  livingroom_scenes:
    options:
      - bright_cool
      - bright_warm
      - warm_atmosphere
    initial: bright_warm
    icon: mdi:lightbulb-on-outline

#################
#    SENSORS    #
#################
sensor:
  - platform: group
    name: "Livingroom Average Illuminance"
    unique_id: yaml_sensor_group_livingroom_average_illuminance
    type: mean
    ignore_non_numeric: true
    state_class: measurement
    device_class: illuminance
    unit_of_measurement: lx
    entities:
      - sensor.livingroom_motion_1_illuminance
      - sensor.livingroom_motion_2_illuminance
      - sensor.lvingroom_light_sensor_1
      - sensor.lvingroom_light_sensor_1

  - platform: min_max
    type: mean
    name: "Livingroom Average Illuminance MinMax"
    round_digits: 0
    entity_ids:
      - sensor.livingroom_motion_1_illuminance
      - sensor.livingroom_motion_2_illuminance
      - sensor.lvingroom_light_sensor_1
      - sensor.lvingroom_light_sensor_1
########################
#    BINARY SENSORS    #
########################
binary_sensor:
  - platform: template
    sensors:
      livingroom_motion_combined:
        device_class: motion
        value_template: >-
          {{
            is_state('binary_sensor.livingroom_motion_1', 'on') or
            is_state('binary_sensor.livingroom_motion_2', 'on') or
            is_state('binary_sensor.livingroom_motion_3', 'on')
          }}
        availability_template: "{{ (states('binary_sensor.livingroom_motion_1') in ['on', 'off']) and (states('binary_sensor.livingroom_motion_2') in ['on', 'off'] and (states('binary_sensor.livingroom_motion_3') in ['on', 'off'])) }}"

########################
#    INPUT BOOLEANS    #
########################
input_boolean:
  livingroom_light_level_calibration_switch:
    name: Livingroom Light Level Calibration
    initial: off
    icon: mdi:lightbulb-on-outline  # Just a nice icon for the UI

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[livingroom|lights] Turn on lights when motion is detected'
    id: livingroom_lights_turn_on_lights_when_motion_is_detected
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.livingroom_motion_combined
        to: 'on'
    condition:
      - condition: template
        value_template: "{{ states('sensor.livingroom_light_1')|int(1000) < states('input_number.livingroom_illumination_limit')|int }}"
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.living_room
          brightness: 255
          kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      - wait_for_trigger:
          - platform: state
            entity_id:
              - binary_sensor.livingroom_motion_combined
            to: 'off'
            for:
              minutes: "{{ states('input_number.livingroom_light_timeout')|int }}"
          - platform: template
            value_template: "{{ (states('sensor.livingroom_light_1')|int(0) - states('input_number.living_room_light_illumination_difference')|int(0)) > states('input_number.livingroom_illumination_limit')|int }}"
            for:
              minutes: "{{ states('input_number.livingroom_light_timeout')|int }}"
      - service: light.turn_on
        data:
          entity_id: light.living_room
          brightness_step: -120
          transition: 0.5
      - delay:
          seconds: 15
      - service: light.turn_off
        entity_id: light.living_room
  # - alias: '[livingroom|light] Flux light through motion'
  #   mode: restart
  #   trigger:
  #     - platform: state
  #       entity_id: binary_sensor.livingroom_motion_combined
  #       to: 'on'
  #     # - platform: numeric_state
  #     #   entity_id: image_processing.doods_tapo_camera_d6d4_hd
  #     #   above: 0
  #   condition:
  #     - condition: template
  #       value_template: "{{ states('sensor.average_illumination_livingroom')|int < states('input_number.livingroom_illumination_limit')|int }}"
  #     - condition: state
  #       entity_id: binary_sensor.house_occupied
  #       state: 'on'
  #   action:
  #     - service: light.turn_on
  #       data:
  #         entity_id:
  #           - light.tvarea_and_ledstrips
  #         transition: "{% if is_state('light.tvarea_and_ledstrips', 'on') %}5{% else %}1{% endif %}"
  #         brightness_pct: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'brightness_pct') | int }}"
  #         kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
  #     - wait_for_trigger:
  #         - platform: template
  #           value_template: "{{ is_state('group.livingroom_motion_sensors', 'off') and (states('image_processing.doods_tapo_camera_d6d4_hd') in ['unavailable', 'unknown', 'off']) }}"
  #           for:
  #             minutes: "{{ states('input_number.livingroom_light_timeout')|int }}"
  #         - platform: template
  #           value_template: "{{ states('sensor.average_illumination_livingroom')|int > states('input_number.livingroom_illumination_limit')|int }}"
  #           for:
  #             minutes: 10
  #         # - platform: state
  #         #   entity_id: group.livingroom_motion_sensors
  #         #   to: 'off'
  #         #   for:
  #         #     minutes: "{{ states('input_number.livingroom_light_timeout')|int }}"
  #     - service: light.turn_on
  #       data:
  #         entity_id:
  #           - light.tvarea_and_ledstrips
  #         brightness_step: -100
  #         transition: 0.5
  #     - delay:
  #         seconds: 15
  #     - service: light.turn_off
  #       entity_id:
  #         - light.tvarea_and_ledstrips

  - alias: '[livingroom|light] Toggle lights when switch is pressed'
    id: livingroom_light_toggle_lights_when_switch_is_pressed
    mode: restart
    trigger:
      - platform: event
        event_type: esphome.button_pressed
        event_data:
          device_name: "shelly Living Room"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'single' }}"
            sequence:
              - service: light.toggle
                data:
                  entity_id: light.living_room
                  brightness: 255
                  kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
          - conditions:
              - condition: template
                value_template: "{{ trigger.event.data.click_type == 'double' }}"
            sequence:
              - service: input_select.select_next
                data:
                  entity_id: input_select.livingroom_scenes
              - service: scene.turn_on
                data:
                  entity_id: scene.livingroom_{{ states('input_select.livingroom_scenes') }}

  - alias: '[livingroom|light]Automate light string based on sunset'
    id: livingroom_light_automate_light_string_based_on_sunset
    mode: single
    trigger:
      - platform: sun
        event: sunset
        id: "turn_on"
      - platform: time
        at: "22:45"
        id: "turn_off"
    action:
      - choose:
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'turn_on' }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.livingroom_light_string
                  brightness: 255
          - conditions:
              - condition: template
                value_template: "{{ trigger.id == 'turn_off' }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: light.livingroom_light_string

  - alias: '[areas|livingroom] Light Calibration Automation'
    description: Automates light on/off cycle for calibration and resets input boolean
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.livingroom_light_level_calibration_switch
        to: 'on'  # Starts the automation when the boolean is turned on
    variables:
      repeat_count: 20  # Number of on/off cycles
    action:
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_brightness_adaptive_lighting
          manual_control: true
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_color_adaptive_lighting
          manual_control: true
      - repeat:
          count: '{{ repeat_count }}'
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.living_room
              data_template:
                brightness_pct: "{{ range(20, 101) | random }}"  # Random brightness between 20% and 100%
                color_temp: "{{ range(2000, 6536) | random }}"  # Random color temperature between 2000K and 6535K
            - delay:
                minutes: 15  # Wait 15 minutes with the lights on
            - service: light.turn_off
              target:
                entity_id: light.living_room
            - delay:
                minutes: 15  # Wait 15 minutes with the lights off
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_brightness_adaptive_lighting
          manual_control: false
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_color_adaptive_lighting
          manual_control: false
      - service: input_boolean.turn_off  # Turn off the boolean to reset
        target:
          entity_id: input_boolean.livingroom_light_level_calibration_switch


  # - alias: '[livingroom|light] Update illumination limit'
  #   mode: single
  #   trigger:
  #     - platform: state
  #       entity_id: switch.shelly_mediacenter
  #   condition:
  #     - condition: state
  #       entity_id: switch.shelly_mediacenter
  #       state:
  #         - 'on'
  #         - 'off'
  #       for:
  #         seconds: 5
  #   action:
  #     - delay:
  #         seconds: 1
  #     - choose:
  #         - conditions:
  #             - condition: state
  #               entity_id: light.tvarea_and_ledstrips
  #               state: 'on'
  #           sequence:
  #             - service: input_number.increment
  #               entity_id: input_number.livingroom_illumination_limit
  #         - conditions:
  #             - condition: state
  #               entity_id: light.tvarea_and_ledstrips
  #               state: 'off'
  #           sequence:
  #             - service: input_number.decrement
  #               entity_id: input_number.livingroom_illumination_limit

  # - alias: '[livingroom|light] Automate falconlights'
  #   mode: restart
  #   trigger:
  #     - platform: state
  #       entity_id: group.livingroom_motion_sensors
  #       to: 'on'
  #   condition:
  #     - condition: template
  #       value_template: "{{ states('sensor.average_illumination_livingroom')|int < states('input_number.livingroom_illumination_limit')|int }}"
  #     - condition: state
  #       entity_id: binary_sensor.house_occupied
  #       state: 'on'
  #   action:
  #     - service: light.turn_on
  #       data:
  #         entity_id:
  #           - light.falconlights_wled
  #         transition: "{% if is_state('light.tvarea_and_ledstrips', 'off') %}5{% else %}1{% endif %}"
  #         brightness: 200
  #         effect: rainbow
  #     - wait_for_trigger:
  #         - platform: state
  #           entity_id: group.livingroom_motion_sensors
  #           to: 'off'
  #           for:
  #             minutes: "{{ states('input_number.livingroom_light_timeout')|int }}"
  #     - service: light.turn_on
  #       data:
  #         entity_id:
  #           - light.falconlights_wled
  #         brightness_step: -100
  #         transition: 0.5
  #     - delay:
  #         seconds: 15
  #     - service: light.turn_off
  #       entity_id:
  #         - light.tvarea_and_ledstrips

  # - alias: '[bedroom|light] Toggle independent bedroom lights'
  #   mode: single
  #   trigger:
  #     platform: event
  #     event_type: deconz_event
  #     event_data:
  #       id: livingroom_multiswitch
  #   action:
  #     - choose:
  #         - conditions:   ################## CONDITIONS BELOW ARE FOR QUICK PRESS-RELEASE ##################
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 1002 }}" # X000 means quick-press X002 means quick-press release
  #           sequence:
  #             - service: light.toggle
  #               data:
  #                 entity_id: light.tvarea_and_ledstrips
  #                 brightness_pct: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'brightness_pct') | int }}"
  #                 kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 2002 }}"
  #           sequence:
  #             - service: light.toggle
  #               data:
  #                 entity_id:
  #                   - light.plants
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 3002 }}"
  #           sequence:
  #             - service: light.toggle
  #               data:
  #                 entity_id:
  #                   - light.ssd_lights_grouped
  #                   - light.falconlights
  #                 effect: Rainbow
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 4002 }}"
  #           sequence:
  #             - service: light.toggle
  #               entity_id:
  #                 - light.shelly_dinner_table
  #         - conditions: ################## CONDITIONS BELOW ARE FOR LONG PRESS ##################
  #           - condition: template
  #             value_template: "{{ trigger.event.data.event == 1001 }}"
  #           sequence:
  #             - service: light.turn_on
  #               data:
  #                 brightness_step_pct: 10
  #                 kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
  #                 entity_id:
  #                   - light.tvarea_and_ledstrips
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 2001 }}"
  #           sequence:
  #             - service: light.turn_on
  #               data:
  #                 brightness_step_pct: 10
  #                 entity_id:
  #                   - light.plants
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 3001 }}"
  #           sequence:
  #             - service: light.turn_on
  #               data:
  #                 brightness_step_pct: 10
  #                 entity_id:
  #                   - light.falconlights
  #                   - light.ssd_lights_grouped
  #         - conditions:
  #             - condition: template
  #               value_template: "{{ trigger.event.data.event == 4001 }}"
  #           sequence:
  #             - service: homeassistant.toggle
  #               entity_id:
  #                 - group.livingroom_lighting_automations
  #             - delay:
  #                 seconds: 0.1
  #             - choose:
  #                 - conditions:
  #                     - condition: state
  #                       entity_id: automation.livingroom_light_flux_light_through_motion
  #                       state: 'on'
  #                   sequence:
  #                     - service: tts.cloud_say
  #                       data:
  #                         entity_id: media_player.living_room_speaker
  #                         message: 'Livingroom motion sensors turned on.'
  #                         language: en-GB
  #                         options:
  #                           gender: female
  #                     - delay:
  #                         seconds: 10
  #                 - conditions:
  #                     - condition: state
  #                       entity_id: automation.livingroom_light_flux_light_through_motion
  #                       state: 'off'
  #                   sequence:
  #                     - service: tts.cloud_say
  #                       data:
  #                         entity_id: media_player.living_room_speaker
  #                         message: 'Livingroom motion sensors turned off.'
  #                         language: en-GB
  #                         options:
  #                           gender: female
  #                     - delay:
  #                         seconds: 10

################
#    SCENES    #
################
scene:
  - name: livingroom_bright_cool
    entities:
      light.living_room:
        state: 'on'
        brightness: 254
        color_temp: 281
        transition: 2
      # light.rgb_led_strip_living_room:
      #   state: 'on'
      #   brightness: 254
      #   color_temp: 342
      #   transition: 2
      # light.white_led_strip_living_room:
      #   state: 'on'
      #   brightness: 254
      #   transition: 2
  - name: livingroom_bright_warm
    entities:
      light.living_room:
        state: 'on'
        brightness: 254
        color_temp: 399
        transition: 2
      # light.rgb_led_strip_living_room:
      #   state: 'on'
      #   brightness: 254
      #   color_temp: 389
      #   transition: 2
      # light.white_led_strip_living_room:
      #   state: 'on'
      #   brightness: 254
      #   transition: 2
  - name: livingroom_warm_atmosphere
    entities:
      light.living_room:
        state: 'on'
        brightness: 115
        color_temp: 500
        transition: 2
      # light.rgb_led_strip_living_room:
      #   state: 'on'
      #   brightness: 42
      #   xy_color: [0.598,0.386]
      #   transition: 2
      # light.white_led_strip_living_room:
      #   state: 'on'
      #   brightness: 28
      #   transition: 2
  # - name: movie_time
  #   entities:
  #     light.living_room:
  #       state: 'off'
  #       transition: 2
      # light.rgb_led_strip_living_room:
      #   state: 'on'
      #   brightness: 42
      #   xy_color: [0.598,0.386]
      #   transition: 2
      # light.white_led_strip_living_room:
      #   state: 'on'
      #   brightness: 28
      #   transition: 2

################
#    GROUPS    #
################
group:
  # livingroom_lighting_automations:
  #   entities:
  #     - automation.livingroom_light_flux_light_through_motion
  # livingroom_scenes:
  #   entities:
  #     - scene.livingroom_bright_cool
  #     - scene.livingroom_bright_warm
  #     - scene.livingroom_warm_atmosphere
  #     - scene.movie_time
  # livingroom_motion_sensors:
  #   entities:
  #     - binary_sensor.motion_sensor_livingroom
  #     - binary_sensor.motion_sensor_livingroom2
  #     - binary_sensor.motion_sensor_livingroom3
  #     - binary_sensor.tapo_camera_d6d4_motion

################
#    LIGHTS    #
################
light:
  # - platform: group
  #   name: TVarea_Lights
  #   entities:
  #     - light.tvarea_1
  #     - light.tvarea_2
  #     - light.tvarea_3
  #     - light.tvarea_4
  #     - light.tvarea_5
  # - platform: group
  #   name: TVarea_and_LEDstrips
  #   entities:
  #     - light.tvarea_lights
  #     - light.livingroom_a_rgb_ledstrip
  # - platform: group
  #   name: Livingroom lights noplants
  #   entities:
  #     - light.tvarea_and_ledstrips
  #     - light.shelly_dinner_table
  # - platform: group
  #   name: Livingroom lights
  #   entities:
  #     - light.livingroom_lights_noplants
  #     - light.plants

#################
#    SCRIPTS    #
#################
script:
