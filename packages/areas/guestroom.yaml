homeassistant:
  customize: {}

#################
#    SENSORS    #
#################
sensor:

########################
#    BINARY SENSORS    #
########################
binary_sensor:

########################
#    INPUT BOOLEANS    #
########################
input_boolean:

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  # - alias: '[guestroom|lights]Toggle lights when switch is pressed'
  #   id: yaml_automation_guestroom_lights_toggle_lights_when_switch_is_pressed
  #   mode: restart
  #   trigger:
  #     - platform: event
  #       event_type: deconz_event
  #       event_data:
  #         id: study_desk_switch
  #     - platform: event
  #       event_type: esphome.button_pressed
  #       event_data:
  #         device_name: "Shelly Study"
  #   condition:
  #   action:
  #     - choose:
  #         - conditions:
  #             - condition: or
  #               conditions:
  #                 - condition: template
  #                   value_template: "{{ trigger.event.data.click_count == '1' }}" # Single click of switch
  #                 - condition: template
  #                   value_template: "{{ trigger.event.data.event == 1002 }}" # Single click of switch
  #           sequence:
  #             - service: light.toggle
  #               data:
  #                 entity_id: light.study_lights
  #                 brightness: 255
  #                 kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
  #         - conditions:
  #             - condition: or
  #               conditions:
  #                 - condition: template
  #                   value_template: "{{ trigger.event.data.click_count == '2' }}" # Double click of switch
  #                 - condition: template
  #                   value_template: "{{ trigger.event.data.event == 1004 }}" # Single click of switch
  #           sequence:
  #             - service: input_select.select_next
  #               data:
  #                 entity_id: input_select.study_scenes
  #             - service: scene.turn_on
  #               data:
  #                 entity_id: scene.study_{{ states('input_select.study_scenes') }}
################
#    SCENES    #
################
scene:

################
#    GROUPS    #
################
group:

#################
#    SCRIPTS    #
#################
script:
