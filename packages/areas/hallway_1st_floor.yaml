homeassistant:
  customize: {}

input_number:
  hallway_1st_floor_illumination_limit:
    name: Hallway 1st Floor illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  hallway_1st_floor_illumination_limit_lightson:
    name: Hallway 1st Floor illumination limit
    step: 1
    min: 0
    max: 200
    mode: box
  hallway_1st_floor_light_timeout: #in minutes
    name: Hallway 1st Floor light timeout
    step: 1
    min: 0
    max: 30
    mode: box
  hallway_1st_floor_light_illumination_difference:
    name: Hallway 1st Floor Light Illumination Difference
    min: 0
    max: 500
    step: 1
    unit_of_measurement: "lx"
    mode: box
    icon: mdi:brightness-auto


#################
#    SENSORS    #
#################
sensor:
  - platform: group
    name: "Hallway 1st Floor Average Illuminance"
    unique_id: yaml_sensor_group_hallway_1st_floor_average_illuminance
    type: mean
    ignore_non_numeric: true
    state_class: measurement
    device_class: illuminance
    unit_of_measurement: lx
    entities:
      - sensor.hallway_1st_floor_motion_1_illuminance
      - sensor.hallway_1st_floor_motion_2_illuminance
      - sensor.hallway_1st_floor_light_1
      - sensor.hallway_1st_floor_light_1
########################
#    BINARY SENSORS    #
########################
binary_sensor:

########################
#    INPUT BOOLEANS    #
########################
input_boolean:
  hallway_1st_floor_light_level_calibration_switch:
    name: Hallway 1st Floor Light Level Calibration
    initial: off
    icon: mdi:lightbulb-on-outline  # Nice icon for the UI

##################
#    SWITCHES    #
##################
switch:

#####################
#    AUTOMATIONS    #
#####################
automation:
  - alias: '[hallway1stfloor|lights]Toggle lights when switch is pressed'
    id: 'hallway1stfloor_lights_toggle_lights_when_switch_is_pressed'
    mode: restart
    trigger:
      - platform: event
        event_type: esphome.button_pressed
        event_data:
          device_name: "Shelly Hallway 1st Floor"
        variables:
          click_count: "{{ trigger.event.data.click_count }}"
    condition:
    action:
      - service: script.toggle_lights_with_adaptive_brightness
        data:
          light_entity: light.hallway_1st_floor
          transition_time: 0.5
          click_count: "{{ click_count }}"
      # - service: light.toggle
      #   data:
      #     entity_id: light.hallway_1st_floor
      #     brightness_pct: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'brightness_pct') | int }}"
      #     color_temp_kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"

  - alias: '[hallway1stfloor|lights] Turn on lights when motion is detected'
    id: hallway1stfloor_lights_turn_on_lights_when_motion_is_detected
    mode: restart
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.hallway_1st_floor_motion_1
          - binary_sensor.hallway_1st_floor_motion_2
        to: 'on'
      - platform: template #going up first stairs
        id: going_up_first_stairs
        value_template: >-
          {{
            (is_state('binary_sensor.entry_motion_1', 'on') or is_state('binary_sensor.entry_motion_2', 'on')) and
            (is_state('binary_sensor.hallway_1st_floor_motion_1', 'off') and is_state('binary_sensor.hallway_1st_floor_motion_2', 'off')) and
            is_state('binary_sensor.stairs_lower_motion_1', 'on')
          }}
      - platform: template #Going down second stairs
        id: going_down_second_stairs
        value_template: >-
          {{
            (is_state('binary_sensor.hallway_2nd_floor_motion_1', 'on') or is_state('binary_sensor.hallway_2nd_floor_motion_2', 'on')) and
            (is_state('binary_sensor.hallway_1st_floor_motion_1', 'off') and is_state('binary_sensor.hallway_1st_floor_motion_2', 'off')) and
            is_state('binary_sensor.stairs_upper_motion_1', 'on')
          }}
    condition:
      - condition: template
        value_template: "{{ states('sensor.hallway_1st_floor_light_1')|int(1000) < states('input_number.hallway_1st_floor_illumination_limit')|int }}"
      - condition: state
        entity_id: binary_sensor.house_occupied
        state: 'on'
    action:
      - service: light.turn_on
        data:
          entity_id: light.hallway_1st_floor
          brightness: 255
          color_temp_kelvin: "{{ state_attr('switch.adaptive_lighting_adaptive_lighting', 'color_temp_kelvin') | int }}"
      - wait_for_trigger:
          - platform: state
            entity_id:
              - binary_sensor.hallway_1st_floor_motion_1
              - binary_sensor.hallway_1st_floor_motion_2
            to: 'off'
            for:
              minutes: "{{ states('input_number.hallway_1st_floor_light_timeout')|int }}"
          - platform: template
            value_template: "{{ (states('sensor.hallway_1st_floor_light_1')|int(0) - states('input_number.hallway_1st_floor_light_illumination_difference')|int(0)) > states('input_number.hallway_1st_floor_illumination_limit')|int }}"
            for:
              minutes: "{{ states('input_number.hallway_1st_floor_light_timeout')|int }}"
        timeout:
          minutes: "{{ states('input_number.hallway_1st_floor_light_timeout')|int * 2}}"
      - service: light.turn_on
        data:
          entity_id: light.hallway_1st_floor
          brightness_step: -120
          transition: 0.5
      - delay:
          seconds: 15
      - service: light.turn_off
        entity_id: light.hallway_1st_floor

  - alias: '[areas|hallway_1st_floor] Light Calibration Automation'
    description: Automates light on/off cycle for 1st floor hallway calibration, resets input boolean, and randomizes brightness/color temperature
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.hallway_1st_floor_light_level_calibration_switch
        to: 'on'  # Starts the automation when the boolean is turned on
    variables:
      repeat_count: 20  # Number of on/off cycles
    action:
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_brightness_adaptive_lighting
          manual_control: true
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_color_adaptive_lighting
          manual_control: true
      - repeat:
          count: '{{ repeat_count }}'
          sequence:
            - service: light.turn_on
              target:
                entity_id: light.hallway_1st_floor
              data_template:
                brightness_pct: "{{ range(20, 101) | random }}"  # Random brightness between 20% and 100%
                color_temp: "{{ range(2000, 6536) | random }}"  # Random color temperature between 2000K and 6535K
            - delay:
                minutes: 15  # Wait 15 minutes with the lights on
            - service: light.turn_off
              target:
                entity_id: light.hallway_1st_floor
            - delay:
                minutes: 15  # Wait 15 minutes with the lights off
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_brightness_adaptive_lighting
          manual_control: false
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: switch.adaptive_lighting_adapt_color_adaptive_lighting
          manual_control: false
      - service: input_boolean.turn_off  # Turn off the boolean to reset
        target:
          entity_id: input_boolean.hallway_1st_floor_light_level_calibration_switch

