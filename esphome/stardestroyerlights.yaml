esphome:
  name: stardestroyerlights
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: "BlokmeisterWIFI"
  password: "ithurtswhenIP"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Stardestroyerlights"
    password: "a2QRgr8Kl6yO"

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: "ithurtswhenIP"

ota:
  password: "ithurtswhenIP"

light:
  - platform: fastled_spi
    id: ssdlights
    chipset: WS2801
    data_pin: D2
    clock_pin: D1
    num_leds: 38
    rgb_order: RGB
    default_transition_length: 2s
    name: "SSDlights"
    gamma_correct: 1.5
    effects:
      - random:
      - addressable_rainbow:
  - platform: fastled_spi
    id: ssdlights_inner
    chipset: WS2801
    data_pin: D4
    clock_pin: D3
    num_leds: 20
    rgb_order: RGB
    default_transition_length: 2s
    name: "SSDlights inner"
    gamma_correct: 1.5
    effects:
      - random:
      - addressable_rainbow:
      - lambda:
          name: Pulse RED
          #// SPEED
          update_interval: .025s
          lambda: |-
            static float in = 0;
            static float out = 0;

            // Scale sin output from -1/1 to 0/1
            out = sin(in) * 0.25 + 0.75;

            auto call = id(ssdlights_inner).turn_on();
            call.set_transition_length(100);
            // COLOR + BRIGHTNESS
            call.set_rgb(1.0, 0.0, 0.0);
            call.set_brightness(out);
            // Do not publish state to eliminate flooding of logs
            call.set_publish(false);
            call.set_save(false);
            call.perform();

            // RESOLUTION
            in += 0.0314;
            if (in > 6.283)
              in = 0;
