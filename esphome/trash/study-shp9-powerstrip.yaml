substitutions:
  device_name: "Study SHP9 Powerstrip"
  espname: study-shp9-powerstrip
  # NO Powermeasurement
  # BW-SHP9
  # relay1 is set up as a lamp, and the button is controlling the relay1
  # All relays can be controlled through Esphome/HA, but the button only controls relay1
  # Wifi is set with static IP, and fast_connect is used as the SSID is hidden
  # The Web server is active, and both web_server and OTA is protected by PW.


esphome:
  name: '${espname}'
  comment: 'ESP8285'
  on_boot:
    priority: 600
    then:
      - switch.turn_on: relay1
      - switch.turn_on: relay2
      - switch.turn_on: relay3
      - switch.turn_on: relay4
      - light.turn_on:
          id: status_led
          brightness: 100%
          effect: "Slow Pulse"

esp8266:
  board: esp8285
  restore_from_flash: true

packages:
  wifi: !include /config/esphome/common/wifi.yaml
  network_diagnostics: !include /config/esphome/common/network_diagnostics.yaml
  base_config: !include /config/esphome/common/base_config.yaml

switch:
  - platform: gpio
    pin: GPIO12
    id: relay1
    name: ${device_name} Socket1
    # After reboot, restore to ON
    restore_mode: ALWAYS_ON
  - platform: gpio
    pin: GPIO14
    id: relay2
    name: ${device_name} Socket2
    # After reboot, restore to ON
    restore_mode: ALWAYS_ON
  - platform: gpio
    pin: GPIO5
    id: relay3
    name: ${device_name} Socket3
    # After reboot, restore to ON
    restore_mode: ALWAYS_ON
  - platform: gpio
    pin: GPIO15
    id: relay4
    name: ${device_name} USB Socket
    # After reboot, restore to ON
    restore_mode: ALWAYS_ON

binary_sensor:
  - platform: gpio
    id: input_button
    internal: true
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    on_multi_click:
      - timing: #Single click
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          - logger.log: "Single-Clicked"
          - switch.toggle: relay1
      - timing: #Double click
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          - logger.log: "Double-Clicked"
          - switch.toggle: relay2
      - timing: #Triple click
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.5s
        then:
          - logger.log: "Triple-Clicked"
          - switch.toggle: relay3
      - timing: #Quadruple click
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at most 0.5s
          - ON for at most 0.5s
          - OFF for at least 0.2s
        then:
          - logger.log: "Quadruple-Clicked"
          - switch.toggle: relay4
      - timing: #Long click
          - ON for at least 5s
        then:
          - light.turn_on: status_led
          - delay: 500ms
          - light.turn_off: status_led
          - delay: 500ms
          - light.turn_on: status_led
          - delay: 500ms
          - light.turn_off: status_led
          - delay: 500ms
          - light.turn_on: status_led
          - delay: 500ms
          - light.turn_off: status_led
          - delay: 500ms
          - button.press: restart_button

output:
  - platform: esp8266_pwm
    pin: GPIO0
    frequency: 500 Hz
    id: pwm_output

light:
  - platform: monochromatic
    output: pwm_output
    id: status_led
    name: ${device_name} LED
    internal: true
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 1s
          update_interval: 1.2s
# Status LED for connection
# status_led:
#   pin:
#     number: GPIO0
#     inverted: true
