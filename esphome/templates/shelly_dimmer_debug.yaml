esphome:
  name: "${espname}"
  comment: "${shelly_dimmer_version}"

esp8266:
  board: esp01_1m
  framework:
    version: recommended

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name} Hotspot
    password: !secret esphome_fallback_pass

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

# Enable OTA updates
ota:

# Enable Web server (optional).
web_server:
  port: 80

uart:
    tx_pin: 1
    rx_pin: 3
    baud_rate: 115200

# Text sensors with general information.
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${device_name} IP

# Sensors with general information.
sensor:
  # Uptime sensor.
  - platform: uptime
    name: ${device_name} Uptime

  # WiFi Signal sensor.
  - platform: wifi_signal
    name: ${device_name} WiFi Signal
    update_interval: 60s

  # Home assistant adaptive lighting
  - platform: homeassistant
    id: colortemperature
    entity_id: switch.adaptive_lighting_adaptive_lighting
    attribute: color_temp_kelvin
  - platform: homeassistant
    id: brightness
    entity_id: switch.adaptive_lighting_adaptive_lighting
    attribute: brightness_pct

  - platform: ntc
    sensor: temp_resistance_reading
    name: ${device_name} temperature
    id: temperature
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: ${ntc_b_constant}
      reference_resistance: "${ntc_reference_resistance}"
      reference_temperature: "${ntc_reference_temperature}"
    on_value:
      then:
        - if:
            condition:
              - sensor.in_range:
                  id: temperature
                  above: ${max_temp}
              - light.is_on: dimmer
            then:
              - light.turn_off:
                  id: dimmer
              - logger.log: "Switch turned off because temperature exceeded ${max_temp}°C"
              - homeassistant.service:
                  service: persistent_notification.create
                  data:
                    title: Message from ${device_name}
                  data_template:
                    message: Switch turned off because temperature exceeded ${max_temp}°C
    on_value_range:
      - above: ${max_temp}
        then:
          - logger.log: "Temperature exceeded ${max_temp}°C"
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${device_name}
              data_template:
                message: Temperature exceeded ${max_temp}°C
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0

# Shelly 2 Dimmer light

light:
  - platform: shelly_dimmer
    name: "${shelly_id}"
    id: dimmer
    icon: mdi:globe-light-outline
    power:
      name: "${device_name} Power"
      id: power_dimmer
    voltage:
      name: "${device_name} Voltage"
    current:
      name: "${device_name} Current"
    min_brightness: "${min_brightness}"
    max_brightness: "${max_brightness}"
    warmup_brightness: 40
    leading_edge: false #Trailing edge is for LED dimming (see https://github.com/esphome/issues/issues/3487)
    default_transition_length: 1s
    gamma_correct: 2
    firmware:
      version: "${STM_firmware_version}"
      update: true

binary_sensor:
  - platform: gpio
    name: ${device_name} Switch
    pin:
      number: ${input_pin}
      mode: INPUT
    # small delay to prevent debouncing
    # filters:
    #   - delayed_on_off: 80ms
    # config for state change of input button
