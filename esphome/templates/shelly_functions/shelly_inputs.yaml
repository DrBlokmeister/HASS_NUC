#### Shelly defaults: ####
#
# Shelly Plus 2PM
# GPIO_pin: GPIO4 #Input 1
# GPIO_pin: GPIO18 #Input 2


defaults:
  clicker_id: switch_clicker
  relay_id: shelly_relay
  channel: '1'
  debounce_delay: 50ms
  shelly_switch_id: shelly_switch
  GPIO_pin: GPIO5
  detached_mode_id: "detach_mode"
  input_device_name: "${device_name}"


binary_sensor:
  - platform: gpio
    name: ${input_device_name} Input
    pin:
      number: ${GPIO_pin} #GPIO5
    # small delay to prevent debouncing
    filters:
      - delayed_on_off: ${debounce_delay}
    # config for state change of input button
    on_state:
        then:
          - binary_sensor.template.publish:
              id: ${clicker_id}
              state: ON
          - delay: 10ms
          - binary_sensor.template.publish:
              id: ${clicker_id}
              state: OFF
    id: ${shelly_switch_id}

  - platform: template
    name: ${input_device_name} Momentary Switch
    id: ${clicker_id} #switch_clicker
    on_multi_click:
      # quintuple click
      - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
        then:
          - button.press: restart_button
      # triple click
      - timing:
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at most 1s
        - ON for at most 1s
        - OFF for at least 0.2s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
                  - switch.is_on: ${relay_id} #shelly_relay
                  - switch.is_on: ${detached_mode_id}
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${input_device_name} triple click
                      device_name: ${device_name}
                      channel: ${channel}
                      click_type: triple
                      click_count: "3"
      # double click
      - timing:
          - ON for at most 1s
          - OFF for at most 1s
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
                  - switch.is_on: ${relay_id} #shelly_relay
                  - switch.is_on: ${detached_mode_id}
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${input_device_name} double click
                      device_name: ${device_name}
                      channel: ${channel}
                      click_type: double
                      click_count: "2"
      - timing:
          - ON for at most 1s
          - OFF for at least 0.3s
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
                  - switch.is_on: ${relay_id} #shelly_relay
                  - switch.is_on: ${detached_mode_id}
              # send single click event in case wifi and api are conncected
              then:
                - homeassistant.event:
                    event: esphome.button_pressed
                    data:
                      title: ${input_device_name} short click
                      device_name: ${device_name}
                      channel: ${channel}
                      click_type: single
                      click_count: "1"
              # toggle relay in case either wifi or api are not connected
              else:
                - switch.toggle: ${relay_id} #shelly_relay
