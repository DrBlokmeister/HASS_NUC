substitutions:
  device_name: "Livingroom Air Quality Monitor"
  short_device_name: "Livingroom AQM"

esphome:
  name: "livingroom-air-quality-monitor"

esp32:
  board: wemos_d1_mini32
  framework:
    type: arduino

# Enable logging
logger:
  level: VERBOSE
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

captive_portal:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${short_device_name} Hotspot
    password: !secret esphome_fallback_pass

font:
  - file: "fonts/Roboto-Medium.ttf"
    id: arial
    size: 15
  - file: "fonts/Roboto-Medium.ttf"
    id: arial30
    size: 30
  - file: "fonts/Roboto-Medium.ttf"
    id: arial10
    size: 10

uart:
  - rx_pin: GPIO1
    baud_rate: 9600
    id: pms

  - rx_pin: GPIO18
    tx_pin: GPIO19
    baud_rate: 9600
    id: mh

i2c:
  scl: GPIO22
  sda: GPIO21
  frequency: 100kHz

sensor:
    - platform: pmsx003
      type: PMSX003
      uart_id: pms
      pm_1_0:
        name: "Livingroom PM 1 Concentration"
        id: pm1
        filters:
          - sliding_window_moving_average:
              window_size: 5
              send_every: 5
          - or:
            - throttle_average: 60s
            - delta: 1.0
      pm_2_5:
        name: "Livingroom PM 2.5 Concentration"
        id: pm2_5
        filters:
          - sliding_window_moving_average:
              window_size: 5
              send_every: 5
          - or:
            - throttle_average: 60s
            - delta: 1.0
      pm_10_0:
        name: "Livingroom PM 10 Concentration"
        id: pm10
        filters:
          - sliding_window_moving_average:
              window_size: 5
              send_every: 5
          - or:
            - throttle_average: 60s
            - delta: 1.0

    - platform: mhz19
      co2:
        name: "Livingroom CO2"
        id: co2
        filters:
          - sliding_window_moving_average:
              window_size: 5
              send_every: 1
          - or:
            - throttle_average: 60s
            - delta: 10.0
      temperature:
        name: "Livingroom MH-Z19 Temperature"
      update_interval: 10s
      automatic_baseline_calibration: false
      uart_id: mh
      id: mh_sensor

    - platform: bme280
      temperature:
        name: "Livingroom AQM Temperature"
        oversampling: 1x
        id: temp
        filters:
          - offset: -1.5
      pressure:
        name: "Livingroom  AQM Pressure"
        oversampling: 1x
        id: press
      humidity:
        name: "Livingroom AQM Humidity"
        oversampling: 1x
        id: hum
      address: 0x76
      update_interval: 10s

    - platform: sgp30
      eco2:
        name: "Livingroom eCO2"
        accuracy_decimals: 1
        id: eco2
      tvoc:
        name: "Livingroom TVOC"
        accuracy_decimals: 1
        id: tvoc
      update_interval: 1s
      address: 0x58
      # https://esphome.io/components/sensor/sgp30.html#calibrating-baseline
      baseline:
        eco2_baseline: 0x92B7
        tvoc_baseline: 0x935A
      compensation:
        temperature_source: temp
        humidity_source: hum

switch:
  # - platform: gpio
  #   name: "PMS7003_SET"
  #   pin:
  #     number: GPIO18
  #     mode: output
  #   restore_mode: ALWAYS_ON
  #   id: pms_set
  - platform: template
    name: "Livingroom MH-Z19 ABC"
    optimistic: true
    on_turn_on:
      mhz19.abc_enable: mh_sensor
    on_turn_off:
      mhz19.abc_disable: mh_sensor

button:
  - platform: template
    name: "Livingroom Calibrate MH-Z19"
    on_press:
      then:
        - mhz19.calibrate_zero: mh_sensor

light:
  # - platform: partition
  #   name: led1
  #   id: led1
  #   default_transition_length: 0s
  #   segments:
  #     - id: rgb_led
  #       from: 0
  #       to: 0
  # - platform: partition
  #   name: led2
  #   id: led2
  #   default_transition_length: 0s
  #   segments:
  #   - id: rgb_led
  #     from: 1
  #     to: 1
  # - platform: partition
  #   name: led3
  #   id: led3
  #   default_transition_length: 0s
  #   segments:
  #   - id: rgb_led
  #     from: 2
  #     to: 2
  # - platform: neopixelbus
  #   num_leds: 3
  #   pin: GPIO16
  #   name: "RGB strip"
  #   id: rgb_led
  #   default_transition_length: 0s
  #   variant: 800KBPS

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    brightness: 100%
    rotation: 180
    id: display1
    lambda: |-
      it.printf(0, 0, id(arial), "P1: %.0f", id(pm1).state);
      it.printf(0, 20, id(arial), "P2: %.0f", id(pm2_5).state);
      it.printf(0, 40, id(arial), "P10: %.0f", id(pm10).state);
      it.printf(70, 0, id(arial), "T: %.1f", id(temp).state);
      it.printf(70, 20, id(arial), "H: %.0f", id(hum).state);
      it.printf(70, 40, id(arial), "C: %.0f", id(co2).state);
      it.line(65, 0, 65, 64);
