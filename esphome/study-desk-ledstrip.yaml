substitutions:
  device_name: "Study Desk Ledstrip"

esphome:
  name: study-desk-ledstrip

esp32:
  board: nodemcu-32s

packages:
  wifi: !include /config/esphome/common/wifi.yaml
  network_diagnostics: !include /config/esphome/common/network_diagnostics.yaml
  base_config: !include /config/esphome/common/base_config.yaml

e131:
  method: unicast

light:
  - platform: neopixelbus
    type: GRBW
    variant: SK6812
    pin: GPIO26
    num_leds: 122 #48 + 4
    gamma_correct: 2.0
    name: "Study Desk A-RGB LEDstrip"
    effects:
      - e131:
          universe: 1
          channels: RGB
      - addressable_rainbow:
          name: Rainbow Swirl
          speed: 10
          width: 122
      - addressable_lambda:
          name: "Simple Color Wipe"
          update_interval: 100ms
          lambda: |-
            for (int i = it.size() - 1; i > 0; i--) {
              it[i] = it[i - 1].get();
            }
            it[0] = ESPColor::random_color();  // Correct random color function
      - addressable_lambda:
          name: "Random Sparkle"
          update_interval: 50ms
          lambda: |-
            it.all().fade_to_black(50);  // Correct fading method
            if (random_uint32() % 10 > 8) {
              it[random_uint32() % it.size()] = ESPColor::random_color();  // Correct random color function
            }
      - addressable_lambda:
          name: "Gradient Shift"
          update_interval: 50ms
          lambda: |-
            static uint16_t start_index = 0;
            it.shift_right(1);
            start_index++;
            if (start_index >= it.size()) {
              start_index = 0;
            }
            float hue = float(start_index) / it.size();
            int hue_deg = int(hue * 360);  // Convert to degrees
            int saturation = 255;  // Maximum saturation
            int value = 255;       // Maximum brightness
            // Create an HSV color and set it to the first LED
            ESPHSVColor hsv_color(hue_deg, saturation, value);
            it[0].set_hsv(hsv_color);
