esphome:
  name: falconlighting
  platform: ESP8266
  board: nodemcuv2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

  # manual_ip:
  #   static_ip: 192.168.1.133
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Falconlighting Fallback Hotspot"
    password: !secret esphome_fallback_pass

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

e131:
  method: unicast

web_server:
  port: 80 # Or your preferred port

wled:

globals:
  - id: brightness
    type: int
    restore_value: no
    initial_value: '30'
  - id: brightnessblue
    type: int
    restore_value: no
    initial_value: '50'
  - id: brightnessgoingup
    type: bool
    restore_value: no
    initial_value: 'false'

light:
  - platform: fastled_spi
    id: falconlights
    chipset: APA102
    data_pin: D4
    clock_pin: D3
    num_leds: 25
    rgb_order: BGR
    default_transition_length: 2s
    name: "Falconlights"
    gamma_correct: 1
    effects:
      - e131:
          universe: 1
          channels: RGB
      - random:
      - addressable_rainbow:
          width: 25
      - automation:
          name: Incorrect engine pulse
          sequence:
            - light.turn_on:
                id: falconlights
                brightness: 100%
                red: 70%
                green: 70%
                blue: 100%
                transition_length: 2s
            - delay: 1s
            - light.turn_on:
                id: falconlights
                brightness: 40%
                transition_length: 2s
            - delay: 1s
      - automation:
          name: Slow engine pulse
          sequence:
            - light.turn_on:
                id: falconlights
                red: !lambda |-
                  if (id(brightness) > 80) {
                    // global value greater than 80
                    id(brightnessgoingup) = false;
                  } else if (id(brightness) < 30 ) {
                    id(brightnessgoingup) = true;
                  }
                  if (id(brightnessgoingup)) {
                    id(brightness) += 1;
                    id(brightnessblue) += 1;
                  } else {
                    id(brightness) -= 1;
                    id(brightnessblue) -= 1;
                  }
                  return id(brightness);
                green: !lambda |-
                  return id(brightness);
                blue: !lambda |-
                  return id(brightnessblue);
            - delay: 50ms
            - logger.log:
                format: "The set brightness is %i, brightnessblue is %i"
                args: ['id(brightness)', 'id(brightnessblue)']
